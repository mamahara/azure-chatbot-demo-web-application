"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireWildcard(require("react"));

var _botframeworkWebchatComponent = require("botframework-webchat-component");

var _AdaptiveCardBuilder = _interopRequireDefault(require("./AdaptiveCardBuilder"));

var _AdaptiveCardRenderer = _interopRequireDefault(require("./AdaptiveCardRenderer"));

var _useAdaptiveCardsPackage = _interopRequireDefault(require("../hooks/useAdaptiveCardsPackage"));

var useDirection = _botframeworkWebchatComponent.hooks.useDirection,
    useStyleOptions = _botframeworkWebchatComponent.hooks.useStyleOptions;

var CommonCard = function CommonCard(_ref) {
  var actionPerformedClassName = _ref.actionPerformedClassName,
      content = _ref.content,
      disabled = _ref.disabled;

  var _useAdaptiveCardsPack = (0, _useAdaptiveCardsPackage.default)(),
      _useAdaptiveCardsPack2 = (0, _slicedToArray2.default)(_useAdaptiveCardsPack, 1),
      adaptiveCardsPackage = _useAdaptiveCardsPack2[0];

  var _useDirection = useDirection(),
      _useDirection2 = (0, _slicedToArray2.default)(_useDirection, 1),
      direction = _useDirection2[0];

  var _useStyleOptions = useStyleOptions(),
      _useStyleOptions2 = (0, _slicedToArray2.default)(_useStyleOptions, 1),
      styleOptions = _useStyleOptions2[0];

  var builtCard = (0, _react.useMemo)(function () {
    if (content) {
      var builder = new _AdaptiveCardBuilder.default(adaptiveCardsPackage, styleOptions, direction);
      builder.addCommon(content);
      return builder.card;
    }
  }, [adaptiveCardsPackage, content, direction, styleOptions]);
  return /*#__PURE__*/_react.default.createElement(_AdaptiveCardRenderer.default, {
    actionPerformedClassName: actionPerformedClassName,
    adaptiveCard: builtCard,
    disabled: disabled,
    tapAction: content && content.tap
  });
};

CommonCard.defaultProps = {
  actionPerformedClassName: '',
  disabled: undefined
};
CommonCard.propTypes = {
  actionPerformedClassName: _propTypes.default.string,
  content: _propTypes.default.shape({
    tap: _propTypes.default.any
  }).isRequired,
  disabled: _propTypes.default.bool
};
var _default = CommonCard;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9hZGFwdGl2ZUNhcmRzL0F0dGFjaG1lbnQvQ29tbW9uQ2FyZC5qcyJdLCJuYW1lcyI6WyJ1c2VEaXJlY3Rpb24iLCJob29rcyIsInVzZVN0eWxlT3B0aW9ucyIsIkNvbW1vbkNhcmQiLCJhY3Rpb25QZXJmb3JtZWRDbGFzc05hbWUiLCJjb250ZW50IiwiZGlzYWJsZWQiLCJhZGFwdGl2ZUNhcmRzUGFja2FnZSIsImRpcmVjdGlvbiIsInN0eWxlT3B0aW9ucyIsImJ1aWx0Q2FyZCIsImJ1aWxkZXIiLCJBZGFwdGl2ZUNhcmRCdWlsZGVyIiwiYWRkQ29tbW9uIiwiY2FyZCIsInRhcCIsImRlZmF1bHRQcm9wcyIsInVuZGVmaW5lZCIsInByb3BUeXBlcyIsIlByb3BUeXBlcyIsInN0cmluZyIsInNoYXBlIiwiYW55IiwiaXNSZXF1aXJlZCIsImJvb2wiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFFQTs7QUFFQTs7QUFDQTs7QUFDQTs7SUFFUUEsWSxHQUFrQ0MsbUMsQ0FBbENELFk7SUFBY0UsZSxHQUFvQkQsbUMsQ0FBcEJDLGU7O0FBRXRCLElBQU1DLFVBQVUsR0FBRyxTQUFiQSxVQUFhLE9BQXFEO0FBQUEsTUFBbERDLHdCQUFrRCxRQUFsREEsd0JBQWtEO0FBQUEsTUFBeEJDLE9BQXdCLFFBQXhCQSxPQUF3QjtBQUFBLE1BQWZDLFFBQWUsUUFBZkEsUUFBZTs7QUFBQSw4QkFDdkMsdUNBRHVDO0FBQUE7QUFBQSxNQUMvREMsb0JBRCtEOztBQUFBLHNCQUVsRFAsWUFBWSxFQUZzQztBQUFBO0FBQUEsTUFFL0RRLFNBRitEOztBQUFBLHlCQUcvQ04sZUFBZSxFQUhnQztBQUFBO0FBQUEsTUFHL0RPLFlBSCtEOztBQUt0RSxNQUFNQyxTQUFTLEdBQUcsb0JBQVEsWUFBTTtBQUM5QixRQUFJTCxPQUFKLEVBQWE7QUFDWCxVQUFNTSxPQUFPLEdBQUcsSUFBSUMsNEJBQUosQ0FBd0JMLG9CQUF4QixFQUE4Q0UsWUFBOUMsRUFBNERELFNBQTVELENBQWhCO0FBRUFHLE1BQUFBLE9BQU8sQ0FBQ0UsU0FBUixDQUFrQlIsT0FBbEI7QUFFQSxhQUFPTSxPQUFPLENBQUNHLElBQWY7QUFDRDtBQUNGLEdBUmlCLEVBUWYsQ0FBQ1Asb0JBQUQsRUFBdUJGLE9BQXZCLEVBQWdDRyxTQUFoQyxFQUEyQ0MsWUFBM0MsQ0FSZSxDQUFsQjtBQVVBLHNCQUNFLDZCQUFDLDZCQUFEO0FBQ0UsSUFBQSx3QkFBd0IsRUFBRUwsd0JBRDVCO0FBRUUsSUFBQSxZQUFZLEVBQUVNLFNBRmhCO0FBR0UsSUFBQSxRQUFRLEVBQUVKLFFBSFo7QUFJRSxJQUFBLFNBQVMsRUFBRUQsT0FBTyxJQUFJQSxPQUFPLENBQUNVO0FBSmhDLElBREY7QUFRRCxDQXZCRDs7QUF5QkFaLFVBQVUsQ0FBQ2EsWUFBWCxHQUEwQjtBQUN4QlosRUFBQUEsd0JBQXdCLEVBQUUsRUFERjtBQUV4QkUsRUFBQUEsUUFBUSxFQUFFVztBQUZjLENBQTFCO0FBS0FkLFVBQVUsQ0FBQ2UsU0FBWCxHQUF1QjtBQUNyQmQsRUFBQUEsd0JBQXdCLEVBQUVlLG1CQUFVQyxNQURmO0FBRXJCZixFQUFBQSxPQUFPLEVBQUVjLG1CQUFVRSxLQUFWLENBQWdCO0FBQ3ZCTixJQUFBQSxHQUFHLEVBQUVJLG1CQUFVRztBQURRLEdBQWhCLEVBRU5DLFVBSmtCO0FBS3JCakIsRUFBQUEsUUFBUSxFQUFFYSxtQkFBVUs7QUFMQyxDQUF2QjtlQVFlckIsVSIsInNvdXJjZVJvb3QiOiJidW5kbGU6Ly8vIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBSZWFjdCwgeyB1c2VNZW1vIH0gZnJvbSAncmVhY3QnO1xuXG5pbXBvcnQgeyBob29rcyB9IGZyb20gJ2JvdGZyYW1ld29yay13ZWJjaGF0LWNvbXBvbmVudCc7XG5cbmltcG9ydCBBZGFwdGl2ZUNhcmRCdWlsZGVyIGZyb20gJy4vQWRhcHRpdmVDYXJkQnVpbGRlcic7XG5pbXBvcnQgQWRhcHRpdmVDYXJkUmVuZGVyZXIgZnJvbSAnLi9BZGFwdGl2ZUNhcmRSZW5kZXJlcic7XG5pbXBvcnQgdXNlQWRhcHRpdmVDYXJkc1BhY2thZ2UgZnJvbSAnLi4vaG9va3MvdXNlQWRhcHRpdmVDYXJkc1BhY2thZ2UnO1xuXG5jb25zdCB7IHVzZURpcmVjdGlvbiwgdXNlU3R5bGVPcHRpb25zIH0gPSBob29rcztcblxuY29uc3QgQ29tbW9uQ2FyZCA9ICh7IGFjdGlvblBlcmZvcm1lZENsYXNzTmFtZSwgY29udGVudCwgZGlzYWJsZWQgfSkgPT4ge1xuICBjb25zdCBbYWRhcHRpdmVDYXJkc1BhY2thZ2VdID0gdXNlQWRhcHRpdmVDYXJkc1BhY2thZ2UoKTtcbiAgY29uc3QgW2RpcmVjdGlvbl0gPSB1c2VEaXJlY3Rpb24oKTtcbiAgY29uc3QgW3N0eWxlT3B0aW9uc10gPSB1c2VTdHlsZU9wdGlvbnMoKTtcblxuICBjb25zdCBidWlsdENhcmQgPSB1c2VNZW1vKCgpID0+IHtcbiAgICBpZiAoY29udGVudCkge1xuICAgICAgY29uc3QgYnVpbGRlciA9IG5ldyBBZGFwdGl2ZUNhcmRCdWlsZGVyKGFkYXB0aXZlQ2FyZHNQYWNrYWdlLCBzdHlsZU9wdGlvbnMsIGRpcmVjdGlvbik7XG5cbiAgICAgIGJ1aWxkZXIuYWRkQ29tbW9uKGNvbnRlbnQpO1xuXG4gICAgICByZXR1cm4gYnVpbGRlci5jYXJkO1xuICAgIH1cbiAgfSwgW2FkYXB0aXZlQ2FyZHNQYWNrYWdlLCBjb250ZW50LCBkaXJlY3Rpb24sIHN0eWxlT3B0aW9uc10pO1xuXG4gIHJldHVybiAoXG4gICAgPEFkYXB0aXZlQ2FyZFJlbmRlcmVyXG4gICAgICBhY3Rpb25QZXJmb3JtZWRDbGFzc05hbWU9e2FjdGlvblBlcmZvcm1lZENsYXNzTmFtZX1cbiAgICAgIGFkYXB0aXZlQ2FyZD17YnVpbHRDYXJkfVxuICAgICAgZGlzYWJsZWQ9e2Rpc2FibGVkfVxuICAgICAgdGFwQWN0aW9uPXtjb250ZW50ICYmIGNvbnRlbnQudGFwfVxuICAgIC8+XG4gICk7XG59O1xuXG5Db21tb25DYXJkLmRlZmF1bHRQcm9wcyA9IHtcbiAgYWN0aW9uUGVyZm9ybWVkQ2xhc3NOYW1lOiAnJyxcbiAgZGlzYWJsZWQ6IHVuZGVmaW5lZFxufTtcblxuQ29tbW9uQ2FyZC5wcm9wVHlwZXMgPSB7XG4gIGFjdGlvblBlcmZvcm1lZENsYXNzTmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgY29udGVudDogUHJvcFR5cGVzLnNoYXBlKHtcbiAgICB0YXA6IFByb3BUeXBlcy5hbnlcbiAgfSkuaXNSZXF1aXJlZCxcbiAgZGlzYWJsZWQ6IFByb3BUeXBlcy5ib29sXG59O1xuXG5leHBvcnQgZGVmYXVsdCBDb21tb25DYXJkO1xuIl19