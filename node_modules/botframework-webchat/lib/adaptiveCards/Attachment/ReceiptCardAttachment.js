"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _ReceiptCardContent = _interopRequireDefault(require("./ReceiptCardContent"));

var ReceiptCardAttachment = function ReceiptCardAttachment(_ref) {
  var content = _ref.attachment.content,
      disabled = _ref.disabled;
  return /*#__PURE__*/_react.default.createElement(_ReceiptCardContent.default, {
    content: content,
    disabled: disabled
  });
};

ReceiptCardAttachment.defaultProps = {
  disabled: undefined
};
ReceiptCardAttachment.propTypes = {
  attachment: _propTypes.default.shape({
    content: _propTypes.default.shape({
      buttons: _propTypes.default.array,
      facts: _propTypes.default.arrayOf(_propTypes.default.shape({
        key: _propTypes.default.string,
        value: _propTypes.default.string
      })),
      items: _propTypes.default.arrayOf(_propTypes.default.shape({
        image: _propTypes.default.shape({
          tap: _propTypes.default.any,
          url: _propTypes.default.string.isRequired
        }),
        price: _propTypes.default.string.isRequired,
        subtitle: _propTypes.default.string,
        title: _propTypes.default.string.isRequired
      })),
      tap: _propTypes.default.any,
      tax: _propTypes.default.string,
      title: _propTypes.default.string,
      total: _propTypes.default.string,
      vat: _propTypes.default.string
    }).isRequired
  }).isRequired,
  disabled: _propTypes.default.bool
};
var _default = ReceiptCardAttachment;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9hZGFwdGl2ZUNhcmRzL0F0dGFjaG1lbnQvUmVjZWlwdENhcmRBdHRhY2htZW50LmpzIl0sIm5hbWVzIjpbIlJlY2VpcHRDYXJkQXR0YWNobWVudCIsImNvbnRlbnQiLCJhdHRhY2htZW50IiwiZGlzYWJsZWQiLCJkZWZhdWx0UHJvcHMiLCJ1bmRlZmluZWQiLCJwcm9wVHlwZXMiLCJQcm9wVHlwZXMiLCJzaGFwZSIsImJ1dHRvbnMiLCJhcnJheSIsImZhY3RzIiwiYXJyYXlPZiIsImtleSIsInN0cmluZyIsInZhbHVlIiwiaXRlbXMiLCJpbWFnZSIsInRhcCIsImFueSIsInVybCIsImlzUmVxdWlyZWQiLCJwcmljZSIsInN1YnRpdGxlIiwidGl0bGUiLCJ0YXgiLCJ0b3RhbCIsInZhdCIsImJvb2wiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBOztBQUNBOztBQUVBOztBQUVBLElBQU1BLHFCQUFxQixHQUFHLFNBQXhCQSxxQkFBd0I7QUFBQSxNQUFpQkMsT0FBakIsUUFBR0MsVUFBSCxDQUFpQkQsT0FBakI7QUFBQSxNQUE0QkUsUUFBNUIsUUFBNEJBLFFBQTVCO0FBQUEsc0JBQzVCLDZCQUFDLDJCQUFEO0FBQW9CLElBQUEsT0FBTyxFQUFFRixPQUE3QjtBQUFzQyxJQUFBLFFBQVEsRUFBRUU7QUFBaEQsSUFENEI7QUFBQSxDQUE5Qjs7QUFJQUgscUJBQXFCLENBQUNJLFlBQXRCLEdBQXFDO0FBQ25DRCxFQUFBQSxRQUFRLEVBQUVFO0FBRHlCLENBQXJDO0FBSUFMLHFCQUFxQixDQUFDTSxTQUF0QixHQUFrQztBQUNoQ0osRUFBQUEsVUFBVSxFQUFFSyxtQkFBVUMsS0FBVixDQUFnQjtBQUMxQlAsSUFBQUEsT0FBTyxFQUFFTSxtQkFBVUMsS0FBVixDQUFnQjtBQUN2QkMsTUFBQUEsT0FBTyxFQUFFRixtQkFBVUcsS0FESTtBQUV2QkMsTUFBQUEsS0FBSyxFQUFFSixtQkFBVUssT0FBVixDQUNMTCxtQkFBVUMsS0FBVixDQUFnQjtBQUNkSyxRQUFBQSxHQUFHLEVBQUVOLG1CQUFVTyxNQUREO0FBRWRDLFFBQUFBLEtBQUssRUFBRVIsbUJBQVVPO0FBRkgsT0FBaEIsQ0FESyxDQUZnQjtBQVF2QkUsTUFBQUEsS0FBSyxFQUFFVCxtQkFBVUssT0FBVixDQUNMTCxtQkFBVUMsS0FBVixDQUFnQjtBQUNkUyxRQUFBQSxLQUFLLEVBQUVWLG1CQUFVQyxLQUFWLENBQWdCO0FBQ3JCVSxVQUFBQSxHQUFHLEVBQUVYLG1CQUFVWSxHQURNO0FBRXJCQyxVQUFBQSxHQUFHLEVBQUViLG1CQUFVTyxNQUFWLENBQWlCTztBQUZELFNBQWhCLENBRE87QUFLZEMsUUFBQUEsS0FBSyxFQUFFZixtQkFBVU8sTUFBVixDQUFpQk8sVUFMVjtBQU1kRSxRQUFBQSxRQUFRLEVBQUVoQixtQkFBVU8sTUFOTjtBQU9kVSxRQUFBQSxLQUFLLEVBQUVqQixtQkFBVU8sTUFBVixDQUFpQk87QUFQVixPQUFoQixDQURLLENBUmdCO0FBbUJ2QkgsTUFBQUEsR0FBRyxFQUFFWCxtQkFBVVksR0FuQlE7QUFvQnZCTSxNQUFBQSxHQUFHLEVBQUVsQixtQkFBVU8sTUFwQlE7QUFxQnZCVSxNQUFBQSxLQUFLLEVBQUVqQixtQkFBVU8sTUFyQk07QUFzQnZCWSxNQUFBQSxLQUFLLEVBQUVuQixtQkFBVU8sTUF0Qk07QUF1QnZCYSxNQUFBQSxHQUFHLEVBQUVwQixtQkFBVU87QUF2QlEsS0FBaEIsRUF3Qk5PO0FBekJ1QixHQUFoQixFQTBCVEEsVUEzQjZCO0FBNEJoQ2xCLEVBQUFBLFFBQVEsRUFBRUksbUJBQVVxQjtBQTVCWSxDQUFsQztlQStCZTVCLHFCIiwic291cmNlUm9vdCI6ImJ1bmRsZTovLy8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IFJlY2VpcHRDYXJkQ29udGVudCBmcm9tICcuL1JlY2VpcHRDYXJkQ29udGVudCc7XG5cbmNvbnN0IFJlY2VpcHRDYXJkQXR0YWNobWVudCA9ICh7IGF0dGFjaG1lbnQ6IHsgY29udGVudCB9LCBkaXNhYmxlZCB9KSA9PiAoXG4gIDxSZWNlaXB0Q2FyZENvbnRlbnQgY29udGVudD17Y29udGVudH0gZGlzYWJsZWQ9e2Rpc2FibGVkfSAvPlxuKTtcblxuUmVjZWlwdENhcmRBdHRhY2htZW50LmRlZmF1bHRQcm9wcyA9IHtcbiAgZGlzYWJsZWQ6IHVuZGVmaW5lZFxufTtcblxuUmVjZWlwdENhcmRBdHRhY2htZW50LnByb3BUeXBlcyA9IHtcbiAgYXR0YWNobWVudDogUHJvcFR5cGVzLnNoYXBlKHtcbiAgICBjb250ZW50OiBQcm9wVHlwZXMuc2hhcGUoe1xuICAgICAgYnV0dG9uczogUHJvcFR5cGVzLmFycmF5LFxuICAgICAgZmFjdHM6IFByb3BUeXBlcy5hcnJheU9mKFxuICAgICAgICBQcm9wVHlwZXMuc2hhcGUoe1xuICAgICAgICAgIGtleTogUHJvcFR5cGVzLnN0cmluZyxcbiAgICAgICAgICB2YWx1ZTogUHJvcFR5cGVzLnN0cmluZ1xuICAgICAgICB9KVxuICAgICAgKSxcbiAgICAgIGl0ZW1zOiBQcm9wVHlwZXMuYXJyYXlPZihcbiAgICAgICAgUHJvcFR5cGVzLnNoYXBlKHtcbiAgICAgICAgICBpbWFnZTogUHJvcFR5cGVzLnNoYXBlKHtcbiAgICAgICAgICAgIHRhcDogUHJvcFR5cGVzLmFueSxcbiAgICAgICAgICAgIHVybDogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkXG4gICAgICAgICAgfSksXG4gICAgICAgICAgcHJpY2U6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcbiAgICAgICAgICBzdWJ0aXRsZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgICAgICAgICB0aXRsZTogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkXG4gICAgICAgIH0pXG4gICAgICApLFxuICAgICAgdGFwOiBQcm9wVHlwZXMuYW55LFxuICAgICAgdGF4OiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgICAgdGl0bGU6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgICB0b3RhbDogUHJvcFR5cGVzLnN0cmluZyxcbiAgICAgIHZhdDogUHJvcFR5cGVzLnN0cmluZ1xuICAgIH0pLmlzUmVxdWlyZWRcbiAgfSkuaXNSZXF1aXJlZCxcbiAgZGlzYWJsZWQ6IFByb3BUeXBlcy5ib29sXG59O1xuXG5leHBvcnQgZGVmYXVsdCBSZWNlaXB0Q2FyZEF0dGFjaG1lbnQ7XG4iXX0=