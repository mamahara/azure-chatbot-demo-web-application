"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = useComposerProps;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = require("react");

var _botframeworkWebchatComponent = require("botframework-webchat-component");

var _createAdaptiveCardsAttachmentMiddleware = _interopRequireDefault(require("./adaptiveCards/createAdaptiveCardsAttachmentMiddleware"));

var _createAdaptiveCardsStyleSet = _interopRequireDefault(require("./adaptiveCards/Styles/createAdaptiveCardsStyleSet"));

var _renderMarkdown = _interopRequireDefault(require("./renderMarkdown"));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function useComposerProps(_ref) {
  var attachmentMiddleware = _ref.attachmentMiddleware,
      renderMarkdown = _ref.renderMarkdown,
      styleOptions = _ref.styleOptions,
      styleSet = _ref.styleSet;
  var patchedAttachmentMiddleware = (0, _react.useMemo)(function () {
    return (0, _botframeworkWebchatComponent.concatMiddleware)(attachmentMiddleware, (0, _createAdaptiveCardsAttachmentMiddleware.default)());
  }, [attachmentMiddleware]);
  var patchedStyleOptions = (0, _react.useMemo)(function () {
    return _objectSpread(_objectSpread({}, _botframeworkWebchatComponent.defaultStyleOptions), styleOptions);
  }, [styleOptions]); // When styleSet is not specified, the styleOptions will be used to create Adaptive Cards styleSet and merged into useStyleSet.

  var extraStyleSet = (0, _react.useMemo)(function () {
    return styleSet ? undefined : (0, _createAdaptiveCardsStyleSet.default)(patchedStyleOptions);
  }, [patchedStyleOptions, styleSet]);
  var patchedRenderMarkdown = (0, _react.useMemo)(function () {
    return typeof renderMarkdown === 'undefined' ? function (text) {
      return (0, _renderMarkdown.default)(text, patchedStyleOptions);
    } : renderMarkdown;
  }, [patchedStyleOptions, renderMarkdown]);
  return {
    attachmentMiddleware: patchedAttachmentMiddleware,
    extraStyleSet: extraStyleSet,
    renderMarkdown: patchedRenderMarkdown
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy91c2VDb21wb3NlclByb3BzLmpzIl0sIm5hbWVzIjpbInVzZUNvbXBvc2VyUHJvcHMiLCJhdHRhY2htZW50TWlkZGxld2FyZSIsInJlbmRlck1hcmtkb3duIiwic3R5bGVPcHRpb25zIiwic3R5bGVTZXQiLCJwYXRjaGVkQXR0YWNobWVudE1pZGRsZXdhcmUiLCJwYXRjaGVkU3R5bGVPcHRpb25zIiwiZGVmYXVsdFN0eWxlT3B0aW9ucyIsImV4dHJhU3R5bGVTZXQiLCJ1bmRlZmluZWQiLCJwYXRjaGVkUmVuZGVyTWFya2Rvd24iLCJ0ZXh0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBOztBQUVBOztBQUNBOztBQUNBOztBQUNBOzs7Ozs7QUFFZSxTQUFTQSxnQkFBVCxPQUE0RjtBQUFBLE1BQWhFQyxvQkFBZ0UsUUFBaEVBLG9CQUFnRTtBQUFBLE1BQTFDQyxjQUEwQyxRQUExQ0EsY0FBMEM7QUFBQSxNQUExQkMsWUFBMEIsUUFBMUJBLFlBQTBCO0FBQUEsTUFBWkMsUUFBWSxRQUFaQSxRQUFZO0FBQ3pHLE1BQU1DLDJCQUEyQixHQUFHLG9CQUNsQztBQUFBLFdBQU0sb0RBQWlCSixvQkFBakIsRUFBdUMsdURBQXZDLENBQU47QUFBQSxHQURrQyxFQUVsQyxDQUFDQSxvQkFBRCxDQUZrQyxDQUFwQztBQUtBLE1BQU1LLG1CQUFtQixHQUFHLG9CQUFRO0FBQUEsMkNBQVlDLGlEQUFaLEdBQW9DSixZQUFwQztBQUFBLEdBQVIsRUFBNkQsQ0FBQ0EsWUFBRCxDQUE3RCxDQUE1QixDQU55RyxDQVF6Rzs7QUFDQSxNQUFNSyxhQUFhLEdBQUcsb0JBQVE7QUFBQSxXQUFPSixRQUFRLEdBQUdLLFNBQUgsR0FBZSwwQ0FBNEJILG1CQUE1QixDQUE5QjtBQUFBLEdBQVIsRUFBeUYsQ0FDN0dBLG1CQUQ2RyxFQUU3R0YsUUFGNkcsQ0FBekYsQ0FBdEI7QUFLQSxNQUFNTSxxQkFBcUIsR0FBRyxvQkFDNUI7QUFBQSxXQUNFLE9BQU9SLGNBQVAsS0FBMEIsV0FBMUIsR0FBd0MsVUFBQVMsSUFBSTtBQUFBLGFBQUksNkJBQXNCQSxJQUF0QixFQUE0QkwsbUJBQTVCLENBQUo7QUFBQSxLQUE1QyxHQUFtR0osY0FEckc7QUFBQSxHQUQ0QixFQUc1QixDQUFDSSxtQkFBRCxFQUFzQkosY0FBdEIsQ0FINEIsQ0FBOUI7QUFNQSxTQUFPO0FBQ0xELElBQUFBLG9CQUFvQixFQUFFSSwyQkFEakI7QUFFTEcsSUFBQUEsYUFBYSxFQUFiQSxhQUZLO0FBR0xOLElBQUFBLGNBQWMsRUFBRVE7QUFIWCxHQUFQO0FBS0QiLCJzb3VyY2VSb290IjoiYnVuZGxlOi8vLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZU1lbW8gfSBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCB7IGNvbmNhdE1pZGRsZXdhcmUsIGRlZmF1bHRTdHlsZU9wdGlvbnMgfSBmcm9tICdib3RmcmFtZXdvcmstd2ViY2hhdC1jb21wb25lbnQnO1xuaW1wb3J0IGNyZWF0ZUFkYXB0aXZlQ2FyZHNBdHRhY2htZW50TWlkZGxld2FyZSBmcm9tICcuL2FkYXB0aXZlQ2FyZHMvY3JlYXRlQWRhcHRpdmVDYXJkc0F0dGFjaG1lbnRNaWRkbGV3YXJlJztcbmltcG9ydCBjcmVhdGVBZGFwdGl2ZUNhcmRzU3R5bGVTZXQgZnJvbSAnLi9hZGFwdGl2ZUNhcmRzL1N0eWxlcy9jcmVhdGVBZGFwdGl2ZUNhcmRzU3R5bGVTZXQnO1xuaW1wb3J0IGRlZmF1bHRSZW5kZXJNYXJrZG93biBmcm9tICcuL3JlbmRlck1hcmtkb3duJztcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gdXNlQ29tcG9zZXJQcm9wcyh7IGF0dGFjaG1lbnRNaWRkbGV3YXJlLCByZW5kZXJNYXJrZG93biwgc3R5bGVPcHRpb25zLCBzdHlsZVNldCB9KSB7XG4gIGNvbnN0IHBhdGNoZWRBdHRhY2htZW50TWlkZGxld2FyZSA9IHVzZU1lbW8oXG4gICAgKCkgPT4gY29uY2F0TWlkZGxld2FyZShhdHRhY2htZW50TWlkZGxld2FyZSwgY3JlYXRlQWRhcHRpdmVDYXJkc0F0dGFjaG1lbnRNaWRkbGV3YXJlKCkpLFxuICAgIFthdHRhY2htZW50TWlkZGxld2FyZV1cbiAgKTtcblxuICBjb25zdCBwYXRjaGVkU3R5bGVPcHRpb25zID0gdXNlTWVtbygoKSA9PiAoeyAuLi5kZWZhdWx0U3R5bGVPcHRpb25zLCAuLi5zdHlsZU9wdGlvbnMgfSksIFtzdHlsZU9wdGlvbnNdKTtcblxuICAvLyBXaGVuIHN0eWxlU2V0IGlzIG5vdCBzcGVjaWZpZWQsIHRoZSBzdHlsZU9wdGlvbnMgd2lsbCBiZSB1c2VkIHRvIGNyZWF0ZSBBZGFwdGl2ZSBDYXJkcyBzdHlsZVNldCBhbmQgbWVyZ2VkIGludG8gdXNlU3R5bGVTZXQuXG4gIGNvbnN0IGV4dHJhU3R5bGVTZXQgPSB1c2VNZW1vKCgpID0+IChzdHlsZVNldCA/IHVuZGVmaW5lZCA6IGNyZWF0ZUFkYXB0aXZlQ2FyZHNTdHlsZVNldChwYXRjaGVkU3R5bGVPcHRpb25zKSksIFtcbiAgICBwYXRjaGVkU3R5bGVPcHRpb25zLFxuICAgIHN0eWxlU2V0XG4gIF0pO1xuXG4gIGNvbnN0IHBhdGNoZWRSZW5kZXJNYXJrZG93biA9IHVzZU1lbW8oXG4gICAgKCkgPT5cbiAgICAgIHR5cGVvZiByZW5kZXJNYXJrZG93biA9PT0gJ3VuZGVmaW5lZCcgPyB0ZXh0ID0+IGRlZmF1bHRSZW5kZXJNYXJrZG93bih0ZXh0LCBwYXRjaGVkU3R5bGVPcHRpb25zKSA6IHJlbmRlck1hcmtkb3duLFxuICAgIFtwYXRjaGVkU3R5bGVPcHRpb25zLCByZW5kZXJNYXJrZG93bl1cbiAgKTtcblxuICByZXR1cm4ge1xuICAgIGF0dGFjaG1lbnRNaWRkbGV3YXJlOiBwYXRjaGVkQXR0YWNobWVudE1pZGRsZXdhcmUsXG4gICAgZXh0cmFTdHlsZVNldCxcbiAgICByZW5kZXJNYXJrZG93bjogcGF0Y2hlZFJlbmRlck1hcmtkb3duXG4gIH07XG59XG4iXX0=