"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "Constants", {
  enumerable: true,
  get: function get() {
    return _botframeworkWebchatCore.Constants;
  }
});
Object.defineProperty(exports, "createStore", {
  enumerable: true,
  get: function get() {
    return _botframeworkWebchatCore.createStore;
  }
});
Object.defineProperty(exports, "createStoreWithDevTools", {
  enumerable: true,
  get: function get() {
    return _botframeworkWebchatCore.createStoreWithDevTools;
  }
});
Object.defineProperty(exports, "version", {
  enumerable: true,
  get: function get() {
    return _botframeworkWebchatCore.version;
  }
});
Object.defineProperty(exports, "Components", {
  enumerable: true,
  get: function get() {
    return _botframeworkWebchatComponent.Components;
  }
});
Object.defineProperty(exports, "concatMiddleware", {
  enumerable: true,
  get: function get() {
    return _botframeworkWebchatComponent.concatMiddleware;
  }
});
Object.defineProperty(exports, "connectToWebChat", {
  enumerable: true,
  get: function get() {
    return _botframeworkWebchatComponent.connectToWebChat;
  }
});
Object.defineProperty(exports, "createStyleSet", {
  enumerable: true,
  get: function get() {
    return _botframeworkWebchatComponent.createStyleSet;
  }
});
Object.defineProperty(exports, "hooks", {
  enumerable: true,
  get: function get() {
    return _botframeworkWebchatComponent.hooks;
  }
});
Object.defineProperty(exports, "createBrowserWebSpeechPonyfillFactory", {
  enumerable: true,
  get: function get() {
    return _createBrowserWebSpeechPonyfillFactory.default;
  }
});
exports.renderWebChat = exports.default = exports.createDirectLineAppServiceExtension = exports.createDirectLine = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _botframeworkWebchatCore = require("botframework-webchat-core");

var _botframeworkWebchatComponent = _interopRequireWildcard(require("botframework-webchat-component"));

var _addVersion = _interopRequireDefault(require("./addVersion"));

var _renderWebChat = _interopRequireDefault(require("./renderWebChat"));

var _createBrowserWebSpeechPonyfillFactory = _interopRequireDefault(require("./createBrowserWebSpeechPonyfillFactory"));

var _createDirectLine = _interopRequireDefault(require("./createDirectLine"));

var _createDirectLineAppServiceExtension = _interopRequireDefault(require("./createDirectLineAppServiceExtension"));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var renderWebChat = _renderWebChat.default.bind(null, _botframeworkWebchatComponent.default);

exports.renderWebChat = renderWebChat;

var createDirectLine = function createDirectLine(options) {
  options.botAgent && console.warn('Web Chat: Developers are not currently allowed to set botAgent in the createDirectLine function. See https://github.com/microsoft/BotFramework-WebChat/issues/2119 for more details.');
  return (0, _createDirectLine.default)(_objectSpread(_objectSpread({}, options), {}, {
    botAgent: "WebChat/".concat(_botframeworkWebchatCore.version, " (Minimal)")
  }));
};

exports.createDirectLine = createDirectLine;

var createDirectLineAppServiceExtension = function createDirectLineAppServiceExtension(options) {
  options.botAgent && console.warn('Web Chat: Developers are not currently allowed to set botAgent in the createDirectLine function. See https://github.com/microsoft/BotFramework-WebChat/issues/2119 for more details.');
  return (0, _createDirectLineAppServiceExtension.default)(_objectSpread(_objectSpread({}, options), {}, {
    botAgent: "WebChat/".concat(_botframeworkWebchatCore.version, " (Minimal)")
  }));
};

exports.createDirectLineAppServiceExtension = createDirectLineAppServiceExtension;
var _default = _botframeworkWebchatComponent.default;
exports.default = _default;
// Until we have a development-specific bundle, we are not shipping createStoreWithDevTools in bundle.
window['WebChat'] = _objectSpread(_objectSpread({}, window['WebChat']), {}, {
  concatMiddleware: _botframeworkWebchatComponent.concatMiddleware,
  connectToWebChat: _botframeworkWebchatComponent.connectToWebChat,
  Constants: _botframeworkWebchatCore.Constants,
  createBrowserWebSpeechPonyfillFactory: _createBrowserWebSpeechPonyfillFactory.default,
  createDirectLine: createDirectLine,
  createDirectLineAppServiceExtension: createDirectLineAppServiceExtension,
  createStore: _botframeworkWebchatCore.createStore,
  createStyleSet: _botframeworkWebchatComponent.createStyleSet,
  hooks: _botframeworkWebchatComponent.hooks,
  ReactWebChat: _botframeworkWebchatComponent.default,
  renderWebChat: renderWebChat
});
(0, _addVersion.default)('minimal');
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9pbmRleC1taW5pbWFsLnRzIl0sIm5hbWVzIjpbInJlbmRlcldlYkNoYXQiLCJjb3JlUmVuZGVyV2ViQ2hhdCIsImJpbmQiLCJSZWFjdFdlYkNoYXQiLCJjcmVhdGVEaXJlY3RMaW5lIiwib3B0aW9ucyIsImJvdEFnZW50IiwiY29uc29sZSIsIndhcm4iLCJ2ZXJzaW9uIiwiY3JlYXRlRGlyZWN0TGluZUFwcFNlcnZpY2VFeHRlbnNpb24iLCJ3aW5kb3ciLCJjb25jYXRNaWRkbGV3YXJlIiwiY29ubmVjdFRvV2ViQ2hhdCIsIkNvbnN0YW50cyIsImNyZWF0ZUJyb3dzZXJXZWJTcGVlY2hQb255ZmlsbEZhY3RvcnkiLCJjcmVhdGVTdG9yZSIsImNyZWF0ZVN0eWxlU2V0IiwiaG9va3MiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFHQTs7QUFFQTs7QUFRQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7Ozs7O0FBRUEsSUFBTUEsYUFBYSxHQUFHQyx1QkFBa0JDLElBQWxCLENBQXVCLElBQXZCLEVBQTZCQyxxQ0FBN0IsQ0FBdEI7Ozs7QUFFTyxJQUFNQyxnQkFBZ0IsR0FBRyxTQUFuQkEsZ0JBQW1CLENBQUFDLE9BQU8sRUFBSTtBQUN6Q0EsRUFBQUEsT0FBTyxDQUFDQyxRQUFSLElBQ0VDLE9BQU8sQ0FBQ0MsSUFBUixDQUNFLHNMQURGLENBREY7QUFLQSxTQUFPLCtEQUE2QkgsT0FBN0I7QUFBc0NDLElBQUFBLFFBQVEsb0JBQWFHLGdDQUFiO0FBQTlDLEtBQVA7QUFDRCxDQVBNOzs7O0FBU0EsSUFBTUMsbUNBQW1DLEdBQUcsU0FBdENBLG1DQUFzQyxDQUFBTCxPQUFPLEVBQUk7QUFDNURBLEVBQUFBLE9BQU8sQ0FBQ0MsUUFBUixJQUNFQyxPQUFPLENBQUNDLElBQVIsQ0FDRSxzTEFERixDQURGO0FBS0EsU0FBTyxrRkFBZ0RILE9BQWhEO0FBQXlEQyxJQUFBQSxRQUFRLG9CQUFhRyxnQ0FBYjtBQUFqRSxLQUFQO0FBQ0QsQ0FQTTs7O2VBU1FOLHFDOztBQWdCZjtBQUNBUSxNQUFNLENBQUMsU0FBRCxDQUFOLG1DQUNLQSxNQUFNLENBQUMsU0FBRCxDQURYO0FBRUVDLEVBQUFBLGdCQUFnQixFQUFoQkEsOENBRkY7QUFHRUMsRUFBQUEsZ0JBQWdCLEVBQWhCQSw4Q0FIRjtBQUlFQyxFQUFBQSxTQUFTLEVBQVRBLGtDQUpGO0FBS0VDLEVBQUFBLHFDQUFxQyxFQUFyQ0EsOENBTEY7QUFNRVgsRUFBQUEsZ0JBQWdCLEVBQWhCQSxnQkFORjtBQU9FTSxFQUFBQSxtQ0FBbUMsRUFBbkNBLG1DQVBGO0FBUUVNLEVBQUFBLFdBQVcsRUFBWEEsb0NBUkY7QUFTRUMsRUFBQUEsY0FBYyxFQUFkQSw0Q0FURjtBQVVFQyxFQUFBQSxLQUFLLEVBQUxBLG1DQVZGO0FBV0VmLEVBQUFBLFlBQVksRUFBWkEscUNBWEY7QUFZRUgsRUFBQUEsYUFBYSxFQUFiQTtBQVpGO0FBZUEseUJBQVcsU0FBWCIsInNvdXJjZVJvb3QiOiJidW5kbGU6Ly8vIiwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50IGRvdC1ub3RhdGlvbjogW1wiZXJyb3JcIiwgeyBcImFsbG93UGF0dGVyblwiOiBcIl5XZWJDaGF0JFwiIH1dICovXG4vLyB3aW5kb3dbJ1dlYkNoYXQnXSBpcyByZXF1aXJlZCBmb3IgVHlwZVNjcmlwdFxuXG5pbXBvcnQgeyBDb25zdGFudHMsIGNyZWF0ZVN0b3JlLCBjcmVhdGVTdG9yZVdpdGhEZXZUb29scywgdmVyc2lvbiB9IGZyb20gJ2JvdGZyYW1ld29yay13ZWJjaGF0LWNvcmUnO1xuXG5pbXBvcnQgUmVhY3RXZWJDaGF0LCB7XG4gIENvbXBvbmVudHMsXG4gIGNvbmNhdE1pZGRsZXdhcmUsXG4gIGNvbm5lY3RUb1dlYkNoYXQsXG4gIGNyZWF0ZVN0eWxlU2V0LFxuICBob29rc1xufSBmcm9tICdib3RmcmFtZXdvcmstd2ViY2hhdC1jb21wb25lbnQnO1xuXG5pbXBvcnQgYWRkVmVyc2lvbiBmcm9tICcuL2FkZFZlcnNpb24nO1xuaW1wb3J0IGNvcmVSZW5kZXJXZWJDaGF0IGZyb20gJy4vcmVuZGVyV2ViQ2hhdCc7XG5pbXBvcnQgY3JlYXRlQnJvd3NlcldlYlNwZWVjaFBvbnlmaWxsRmFjdG9yeSBmcm9tICcuL2NyZWF0ZUJyb3dzZXJXZWJTcGVlY2hQb255ZmlsbEZhY3RvcnknO1xuaW1wb3J0IGRlZmF1bHRDcmVhdGVEaXJlY3RMaW5lIGZyb20gJy4vY3JlYXRlRGlyZWN0TGluZSc7XG5pbXBvcnQgZGVmYXVsdENyZWF0ZURpcmVjdExpbmVBcHBTZXJ2aWNlRXh0ZW5zaW9uIGZyb20gJy4vY3JlYXRlRGlyZWN0TGluZUFwcFNlcnZpY2VFeHRlbnNpb24nO1xuXG5jb25zdCByZW5kZXJXZWJDaGF0ID0gY29yZVJlbmRlcldlYkNoYXQuYmluZChudWxsLCBSZWFjdFdlYkNoYXQpO1xuXG5leHBvcnQgY29uc3QgY3JlYXRlRGlyZWN0TGluZSA9IG9wdGlvbnMgPT4ge1xuICBvcHRpb25zLmJvdEFnZW50ICYmXG4gICAgY29uc29sZS53YXJuKFxuICAgICAgJ1dlYiBDaGF0OiBEZXZlbG9wZXJzIGFyZSBub3QgY3VycmVudGx5IGFsbG93ZWQgdG8gc2V0IGJvdEFnZW50IGluIHRoZSBjcmVhdGVEaXJlY3RMaW5lIGZ1bmN0aW9uLiBTZWUgaHR0cHM6Ly9naXRodWIuY29tL21pY3Jvc29mdC9Cb3RGcmFtZXdvcmstV2ViQ2hhdC9pc3N1ZXMvMjExOSBmb3IgbW9yZSBkZXRhaWxzLidcbiAgICApO1xuXG4gIHJldHVybiBkZWZhdWx0Q3JlYXRlRGlyZWN0TGluZSh7IC4uLm9wdGlvbnMsIGJvdEFnZW50OiBgV2ViQ2hhdC8ke3ZlcnNpb259IChNaW5pbWFsKWAgfSk7XG59O1xuXG5leHBvcnQgY29uc3QgY3JlYXRlRGlyZWN0TGluZUFwcFNlcnZpY2VFeHRlbnNpb24gPSBvcHRpb25zID0+IHtcbiAgb3B0aW9ucy5ib3RBZ2VudCAmJlxuICAgIGNvbnNvbGUud2FybihcbiAgICAgICdXZWIgQ2hhdDogRGV2ZWxvcGVycyBhcmUgbm90IGN1cnJlbnRseSBhbGxvd2VkIHRvIHNldCBib3RBZ2VudCBpbiB0aGUgY3JlYXRlRGlyZWN0TGluZSBmdW5jdGlvbi4gU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9taWNyb3NvZnQvQm90RnJhbWV3b3JrLVdlYkNoYXQvaXNzdWVzLzIxMTkgZm9yIG1vcmUgZGV0YWlscy4nXG4gICAgKTtcblxuICByZXR1cm4gZGVmYXVsdENyZWF0ZURpcmVjdExpbmVBcHBTZXJ2aWNlRXh0ZW5zaW9uKHsgLi4ub3B0aW9ucywgYm90QWdlbnQ6IGBXZWJDaGF0LyR7dmVyc2lvbn0gKE1pbmltYWwpYCB9KTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IFJlYWN0V2ViQ2hhdDtcblxuZXhwb3J0IHtcbiAgQ29tcG9uZW50cyxcbiAgY29uY2F0TWlkZGxld2FyZSxcbiAgY29ubmVjdFRvV2ViQ2hhdCxcbiAgQ29uc3RhbnRzLFxuICBjcmVhdGVCcm93c2VyV2ViU3BlZWNoUG9ueWZpbGxGYWN0b3J5LFxuICBjcmVhdGVTdG9yZSxcbiAgY3JlYXRlU3RvcmVXaXRoRGV2VG9vbHMsXG4gIGNyZWF0ZVN0eWxlU2V0LFxuICBob29rcyxcbiAgcmVuZGVyV2ViQ2hhdCxcbiAgdmVyc2lvblxufTtcblxuLy8gVW50aWwgd2UgaGF2ZSBhIGRldmVsb3BtZW50LXNwZWNpZmljIGJ1bmRsZSwgd2UgYXJlIG5vdCBzaGlwcGluZyBjcmVhdGVTdG9yZVdpdGhEZXZUb29scyBpbiBidW5kbGUuXG53aW5kb3dbJ1dlYkNoYXQnXSA9IHtcbiAgLi4ud2luZG93WydXZWJDaGF0J10sXG4gIGNvbmNhdE1pZGRsZXdhcmUsXG4gIGNvbm5lY3RUb1dlYkNoYXQsXG4gIENvbnN0YW50cyxcbiAgY3JlYXRlQnJvd3NlcldlYlNwZWVjaFBvbnlmaWxsRmFjdG9yeSxcbiAgY3JlYXRlRGlyZWN0TGluZSxcbiAgY3JlYXRlRGlyZWN0TGluZUFwcFNlcnZpY2VFeHRlbnNpb24sXG4gIGNyZWF0ZVN0b3JlLFxuICBjcmVhdGVTdHlsZVNldCxcbiAgaG9va3MsXG4gIFJlYWN0V2ViQ2hhdCxcbiAgcmVuZGVyV2ViQ2hhdFxufTtcblxuYWRkVmVyc2lvbignbWluaW1hbCcpO1xuIl19