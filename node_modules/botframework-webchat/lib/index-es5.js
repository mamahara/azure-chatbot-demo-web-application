"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
var _exportNames = {
  createDirectLine: true,
  createDirectLineAppServiceExtension: true
};
exports.createDirectLineAppServiceExtension = exports.createDirectLine = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

require("core-js/features/array/find-index");

require("core-js/features/array/find");

require("core-js/features/array/from");

require("core-js/features/array/includes");

require("core-js/features/array/iterator");

require("core-js/features/dom-collections");

require("core-js/features/math/sign");

require("core-js/features/number/is-finite");

require("core-js/features/object/assign");

require("core-js/features/object/entries");

require("core-js/features/object/from-entries");

require("core-js/features/object/is");

require("core-js/features/object/values");

require("core-js/features/promise");

require("core-js/features/promise/finally");

require("core-js/features/set");

require("core-js/features/string/ends-with");

require("core-js/features/string/starts-with");

require("core-js/features/symbol");

require("url-search-params-polyfill");

require("whatwg-fetch");

var _indexMinimal = require("./index-minimal");

var _addVersion = _interopRequireDefault(require("./addVersion"));

var _createDirectLine = _interopRequireDefault(require("./createDirectLine"));

var _createDirectLineAppServiceExtension = _interopRequireDefault(require("./createDirectLineAppServiceExtension"));

var _index = require("./index");

Object.keys(_index).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _index[key];
    }
  });
});

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var createDirectLine = function createDirectLine(options) {
  options.botAgent && console.warn('Web Chat: Developers are not currently allowed to set botAgent in the createDirectLine function. See https://github.com/microsoft/BotFramework-WebChat/issues/2119 for more details.');
  return (0, _createDirectLine.default)(_objectSpread(_objectSpread({}, options), {}, {
    botAgent: "WebChat/".concat(_indexMinimal.version, " (ES5)")
  }));
};

exports.createDirectLine = createDirectLine;

var createDirectLineAppServiceExtension = function createDirectLineAppServiceExtension(options) {
  options.botAgent && console.warn('Web Chat: Developers are not currently allowed to set botAgent in the createDirectLine function. See https://github.com/microsoft/BotFramework-WebChat/issues/2119 for more details.');
  return (0, _createDirectLineAppServiceExtension.default)(_objectSpread(_objectSpread({}, options), {}, {
    botAgent: "WebChat/".concat(_indexMinimal.version, " (ES5)")
  }));
};

exports.createDirectLineAppServiceExtension = createDirectLineAppServiceExtension;
window['WebChat'] = _objectSpread(_objectSpread({}, window['WebChat']), {}, {
  createDirectLine: createDirectLine,
  createDirectLineAppServiceExtension: createDirectLineAppServiceExtension
});
(0, _addVersion.default)('full-es5');
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9pbmRleC1lczUudHMiXSwibmFtZXMiOlsiY3JlYXRlRGlyZWN0TGluZSIsIm9wdGlvbnMiLCJib3RBZ2VudCIsImNvbnNvbGUiLCJ3YXJuIiwidmVyc2lvbiIsImNyZWF0ZURpcmVjdExpbmVBcHBTZXJ2aWNlRXh0ZW5zaW9uIiwid2luZG93Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFPQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFFQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFFQTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7Ozs7O0FBRU8sSUFBTUEsZ0JBQWdCLEdBQUcsU0FBbkJBLGdCQUFtQixDQUFBQyxPQUFPLEVBQUk7QUFDekNBLEVBQUFBLE9BQU8sQ0FBQ0MsUUFBUixJQUNFQyxPQUFPLENBQUNDLElBQVIsQ0FDRSxzTEFERixDQURGO0FBS0EsU0FBTywrREFBNkJILE9BQTdCO0FBQXNDQyxJQUFBQSxRQUFRLG9CQUFhRyxxQkFBYjtBQUE5QyxLQUFQO0FBQ0QsQ0FQTTs7OztBQVNBLElBQU1DLG1DQUFtQyxHQUFHLFNBQXRDQSxtQ0FBc0MsQ0FBQUwsT0FBTyxFQUFJO0FBQzVEQSxFQUFBQSxPQUFPLENBQUNDLFFBQVIsSUFDRUMsT0FBTyxDQUFDQyxJQUFSLENBQ0Usc0xBREYsQ0FERjtBQUtBLFNBQU8sa0ZBQWdESCxPQUFoRDtBQUF5REMsSUFBQUEsUUFBUSxvQkFBYUcscUJBQWI7QUFBakUsS0FBUDtBQUNELENBUE07OztBQVNQRSxNQUFNLENBQUMsU0FBRCxDQUFOLG1DQUNLQSxNQUFNLENBQUMsU0FBRCxDQURYO0FBRUVQLEVBQUFBLGdCQUFnQixFQUFoQkEsZ0JBRkY7QUFHRU0sRUFBQUEsbUNBQW1DLEVBQW5DQTtBQUhGO0FBTUEseUJBQVcsVUFBWCIsInNvdXJjZVJvb3QiOiJidW5kbGU6Ly8vIiwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50IGRvdC1ub3RhdGlvbjogW1wiZXJyb3JcIiwgeyBcImFsbG93UGF0dGVyblwiOiBcIl5XZWJDaGF0JFwiIH1dICovXG4vLyB3aW5kb3dbJ1dlYkNoYXQnXSBpcyByZXF1aXJlZCBmb3IgVHlwZVNjcmlwdFxuXG4vLyBQb2x5ZmlsbHMgZm9yIElFMTEgYW5kIG90aGVyIEVTNSBicm93c2Vyc1xuLy8gVG8gbWFpbnRhaW4gcXVhbGl0eSwgd2UgcHJlZmVyIHBvbHlmaWxscyB3aXRob3V0IGFkZGl0aXZlc1xuLy8gRm9yIGV4YW1wbGUsIHdlIHByZWZlciBQcm9taXNlIGltcGxlbWVudGF0aW9uIGZyb20gXCJjb3JlLWpzXCIgdGhhbiBcImJsdWViaXJkXCJcblxuaW1wb3J0ICdjb3JlLWpzL2ZlYXR1cmVzL2FycmF5L2ZpbmQtaW5kZXgnO1xuaW1wb3J0ICdjb3JlLWpzL2ZlYXR1cmVzL2FycmF5L2ZpbmQnO1xuaW1wb3J0ICdjb3JlLWpzL2ZlYXR1cmVzL2FycmF5L2Zyb20nO1xuaW1wb3J0ICdjb3JlLWpzL2ZlYXR1cmVzL2FycmF5L2luY2x1ZGVzJztcbmltcG9ydCAnY29yZS1qcy9mZWF0dXJlcy9hcnJheS9pdGVyYXRvcic7XG5pbXBvcnQgJ2NvcmUtanMvZmVhdHVyZXMvZG9tLWNvbGxlY3Rpb25zJztcbmltcG9ydCAnY29yZS1qcy9mZWF0dXJlcy9tYXRoL3NpZ24nO1xuaW1wb3J0ICdjb3JlLWpzL2ZlYXR1cmVzL251bWJlci9pcy1maW5pdGUnO1xuaW1wb3J0ICdjb3JlLWpzL2ZlYXR1cmVzL29iamVjdC9hc3NpZ24nO1xuaW1wb3J0ICdjb3JlLWpzL2ZlYXR1cmVzL29iamVjdC9lbnRyaWVzJztcbmltcG9ydCAnY29yZS1qcy9mZWF0dXJlcy9vYmplY3QvZnJvbS1lbnRyaWVzJztcbmltcG9ydCAnY29yZS1qcy9mZWF0dXJlcy9vYmplY3QvaXMnO1xuaW1wb3J0ICdjb3JlLWpzL2ZlYXR1cmVzL29iamVjdC92YWx1ZXMnO1xuaW1wb3J0ICdjb3JlLWpzL2ZlYXR1cmVzL3Byb21pc2UnO1xuaW1wb3J0ICdjb3JlLWpzL2ZlYXR1cmVzL3Byb21pc2UvZmluYWxseSc7XG5pbXBvcnQgJ2NvcmUtanMvZmVhdHVyZXMvc2V0JztcbmltcG9ydCAnY29yZS1qcy9mZWF0dXJlcy9zdHJpbmcvZW5kcy13aXRoJztcbmltcG9ydCAnY29yZS1qcy9mZWF0dXJlcy9zdHJpbmcvc3RhcnRzLXdpdGgnO1xuaW1wb3J0ICdjb3JlLWpzL2ZlYXR1cmVzL3N5bWJvbCc7XG5cbmltcG9ydCAndXJsLXNlYXJjaC1wYXJhbXMtcG9seWZpbGwnO1xuaW1wb3J0ICd3aGF0d2ctZmV0Y2gnO1xuaW1wb3J0IHsgdmVyc2lvbiB9IGZyb20gJy4vaW5kZXgtbWluaW1hbCc7XG5pbXBvcnQgYWRkVmVyc2lvbiBmcm9tICcuL2FkZFZlcnNpb24nO1xuaW1wb3J0IGRlZmF1bHRDcmVhdGVEaXJlY3RMaW5lIGZyb20gJy4vY3JlYXRlRGlyZWN0TGluZSc7XG5pbXBvcnQgZGVmYXVsdENyZWF0ZURpcmVjdExpbmVBcHBTZXJ2aWNlRXh0ZW5zaW9uIGZyb20gJy4vY3JlYXRlRGlyZWN0TGluZUFwcFNlcnZpY2VFeHRlbnNpb24nO1xuXG5leHBvcnQgKiBmcm9tICcuL2luZGV4JztcblxuZXhwb3J0IGNvbnN0IGNyZWF0ZURpcmVjdExpbmUgPSBvcHRpb25zID0+IHtcbiAgb3B0aW9ucy5ib3RBZ2VudCAmJlxuICAgIGNvbnNvbGUud2FybihcbiAgICAgICdXZWIgQ2hhdDogRGV2ZWxvcGVycyBhcmUgbm90IGN1cnJlbnRseSBhbGxvd2VkIHRvIHNldCBib3RBZ2VudCBpbiB0aGUgY3JlYXRlRGlyZWN0TGluZSBmdW5jdGlvbi4gU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9taWNyb3NvZnQvQm90RnJhbWV3b3JrLVdlYkNoYXQvaXNzdWVzLzIxMTkgZm9yIG1vcmUgZGV0YWlscy4nXG4gICAgKTtcblxuICByZXR1cm4gZGVmYXVsdENyZWF0ZURpcmVjdExpbmUoeyAuLi5vcHRpb25zLCBib3RBZ2VudDogYFdlYkNoYXQvJHt2ZXJzaW9ufSAoRVM1KWAgfSk7XG59O1xuXG5leHBvcnQgY29uc3QgY3JlYXRlRGlyZWN0TGluZUFwcFNlcnZpY2VFeHRlbnNpb24gPSBvcHRpb25zID0+IHtcbiAgb3B0aW9ucy5ib3RBZ2VudCAmJlxuICAgIGNvbnNvbGUud2FybihcbiAgICAgICdXZWIgQ2hhdDogRGV2ZWxvcGVycyBhcmUgbm90IGN1cnJlbnRseSBhbGxvd2VkIHRvIHNldCBib3RBZ2VudCBpbiB0aGUgY3JlYXRlRGlyZWN0TGluZSBmdW5jdGlvbi4gU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9taWNyb3NvZnQvQm90RnJhbWV3b3JrLVdlYkNoYXQvaXNzdWVzLzIxMTkgZm9yIG1vcmUgZGV0YWlscy4nXG4gICAgKTtcblxuICByZXR1cm4gZGVmYXVsdENyZWF0ZURpcmVjdExpbmVBcHBTZXJ2aWNlRXh0ZW5zaW9uKHsgLi4ub3B0aW9ucywgYm90QWdlbnQ6IGBXZWJDaGF0LyR7dmVyc2lvbn0gKEVTNSlgIH0pO1xufTtcblxud2luZG93WydXZWJDaGF0J10gPSB7XG4gIC4uLndpbmRvd1snV2ViQ2hhdCddLFxuICBjcmVhdGVEaXJlY3RMaW5lLFxuICBjcmVhdGVEaXJlY3RMaW5lQXBwU2VydmljZUV4dGVuc2lvblxufTtcblxuYWRkVmVyc2lvbignZnVsbC1lczUnKTtcbiJdfQ==