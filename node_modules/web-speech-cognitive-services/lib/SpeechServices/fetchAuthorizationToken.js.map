{"version":3,"sources":["../../src/SpeechServices/fetchAuthorizationToken.js"],"names":["TOKEN_URL_TEMPLATE","region","subscriptionKey","fetch","replace","headers","method","res","ok","Error","status","text"],"mappings":";;;;;;;;;;;;;AAAA,IAAMA,kBAAkB,GAAG,kEAA3B;;;;;;;kFAEe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkBC,YAAAA,MAAlB,QAAkBA,MAAlB,EAA0BC,eAA1B,QAA0BA,eAA1B;AAAA;AAAA,mBACKC,KAAK,CACrBH,kBAAkB,CAACI,OAAnB,CAA2B,YAA3B,EAA0CH,MAA1C,CADqB,EAErB;AACEI,cAAAA,OAAO,EAAE;AACP,6CAA6BH;AADtB,eADX;AAIEI,cAAAA,MAAM,EAAE;AAJV,aAFqB,CADV;;AAAA;AACPC,YAAAA,GADO;;AAAA,gBAWRA,GAAG,CAACC,EAXI;AAAA;AAAA;AAAA;;AAAA,kBAYL,IAAIC,KAAJ,gEAAmEF,GAAG,CAACG,MAAvE,EAZK;;AAAA;AAAA,6CAeNH,GAAG,CAACI,IAAJ,EAfM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["const TOKEN_URL_TEMPLATE = 'https://{region}.api.cognitive.microsoft.com/sts/v1.0/issueToken';\n\nexport default async function ({ region, subscriptionKey }) {\n  const res = await fetch(\n    TOKEN_URL_TEMPLATE.replace(/\\{region\\}/u, region),\n    {\n      headers: {\n        'Ocp-Apim-Subscription-Key': subscriptionKey\n      },\n      method: 'POST'\n    }\n  );\n\n  if (!res.ok) {\n    throw new Error(`Failed to fetch authorization token, server returned ${ res.status }`);\n  }\n\n  return res.text();\n}\n"],"file":"fetchAuthorizationToken.js"}