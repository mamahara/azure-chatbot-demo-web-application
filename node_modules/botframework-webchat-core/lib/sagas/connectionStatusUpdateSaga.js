"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = connectionStatusUpdateSaga;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _effects = require("redux-saga/effects");

var _connectionStatusUpdate = _interopRequireDefault(require("../actions/connectionStatusUpdate"));

var _observeEach = _interopRequireDefault(require("./effects/observeEach"));

var _setReferenceGrammarID = _interopRequireDefault(require("../actions/setReferenceGrammarID"));

var _whileConnected = _interopRequireDefault(require("./effects/whileConnected"));

var _marked = /*#__PURE__*/_regenerator["default"].mark(observeConnectionStatus),
    _marked2 = /*#__PURE__*/_regenerator["default"].mark(connectionStatusUpdateSaga);

function observeConnectionStatus(_ref) {
  var directLine;
  return _regenerator["default"].wrap(function observeConnectionStatus$(_context2) {
    while (1) {
      switch (_context2.prev = _context2.next) {
        case 0:
          directLine = _ref.directLine;
          _context2.next = 3;
          return (0, _observeEach["default"])(directLine.connectionStatus$, /*#__PURE__*/_regenerator["default"].mark(function updateConnectionStatus(connectionStatus) {
            return _regenerator["default"].wrap(function updateConnectionStatus$(_context) {
              while (1) {
                switch (_context.prev = _context.next) {
                  case 0:
                    _context.next = 2;
                    return (0, _effects.put)((0, _connectionStatusUpdate["default"])(connectionStatus));

                  case 2:
                    _context.next = 4;
                    return (0, _effects.put)((0, _setReferenceGrammarID["default"])(directLine.referenceGrammarId));

                  case 4:
                  case "end":
                    return _context.stop();
                }
              }
            }, updateConnectionStatus);
          }));

        case 3:
        case "end":
          return _context2.stop();
      }
    }
  }, _marked);
}

function connectionStatusUpdateSaga() {
  return _regenerator["default"].wrap(function connectionStatusUpdateSaga$(_context3) {
    while (1) {
      switch (_context3.prev = _context3.next) {
        case 0:
          _context3.next = 2;
          return (0, _whileConnected["default"])(observeConnectionStatus);

        case 2:
        case "end":
          return _context3.stop();
      }
    }
  }, _marked2);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9zYWdhcy9jb25uZWN0aW9uU3RhdHVzVXBkYXRlU2FnYS5qcyJdLCJuYW1lcyI6WyJvYnNlcnZlQ29ubmVjdGlvblN0YXR1cyIsImNvbm5lY3Rpb25TdGF0dXNVcGRhdGVTYWdhIiwiZGlyZWN0TGluZSIsImNvbm5lY3Rpb25TdGF0dXMkIiwidXBkYXRlQ29ubmVjdGlvblN0YXR1cyIsImNvbm5lY3Rpb25TdGF0dXMiLCJyZWZlcmVuY2VHcmFtbWFySWQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUE7O0FBRUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O3dEQUVVQSx1Qjt5REFPZUMsMEI7O0FBUHpCLFNBQVVELHVCQUFWO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFvQ0UsVUFBQUEsVUFBcEMsUUFBb0NBLFVBQXBDO0FBQUE7QUFDRSxpQkFBTSw2QkFBWUEsVUFBVSxDQUFDQyxpQkFBdkIsNENBQTBDLFNBQVVDLHNCQUFWLENBQWlDQyxnQkFBakM7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQzlDLDJCQUFNLGtCQUFJLHdDQUF1QkEsZ0JBQXZCLENBQUosQ0FBTjs7QUFEOEM7QUFBQTtBQUU5QywyQkFBTSxrQkFBSSx1Q0FBc0JILFVBQVUsQ0FBQ0ksa0JBQWpDLENBQUosQ0FBTjs7QUFGOEM7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLGVBQVVGLHNCQUFWO0FBQUEsV0FBMUMsRUFBTjs7QUFERjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFPZSxTQUFVSCwwQkFBVjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDYixpQkFBTSxnQ0FBZUQsdUJBQWYsQ0FBTjs7QUFEYTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSIsInNvdXJjZVJvb3QiOiJjb3JlOi8vLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHB1dCB9IGZyb20gJ3JlZHV4LXNhZ2EvZWZmZWN0cyc7XG5cbmltcG9ydCBjb25uZWN0aW9uU3RhdHVzVXBkYXRlIGZyb20gJy4uL2FjdGlvbnMvY29ubmVjdGlvblN0YXR1c1VwZGF0ZSc7XG5pbXBvcnQgb2JzZXJ2ZUVhY2ggZnJvbSAnLi9lZmZlY3RzL29ic2VydmVFYWNoJztcbmltcG9ydCBzZXRSZWZlcmVuY2VHcmFtbWFySUQgZnJvbSAnLi4vYWN0aW9ucy9zZXRSZWZlcmVuY2VHcmFtbWFySUQnO1xuaW1wb3J0IHdoaWxlQ29ubmVjdGVkIGZyb20gJy4vZWZmZWN0cy93aGlsZUNvbm5lY3RlZCc7XG5cbmZ1bmN0aW9uKiBvYnNlcnZlQ29ubmVjdGlvblN0YXR1cyh7IGRpcmVjdExpbmUgfSkge1xuICB5aWVsZCBvYnNlcnZlRWFjaChkaXJlY3RMaW5lLmNvbm5lY3Rpb25TdGF0dXMkLCBmdW5jdGlvbiogdXBkYXRlQ29ubmVjdGlvblN0YXR1cyhjb25uZWN0aW9uU3RhdHVzKSB7XG4gICAgeWllbGQgcHV0KGNvbm5lY3Rpb25TdGF0dXNVcGRhdGUoY29ubmVjdGlvblN0YXR1cykpO1xuICAgIHlpZWxkIHB1dChzZXRSZWZlcmVuY2VHcmFtbWFySUQoZGlyZWN0TGluZS5yZWZlcmVuY2VHcmFtbWFySWQpKTtcbiAgfSk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKiBjb25uZWN0aW9uU3RhdHVzVXBkYXRlU2FnYSgpIHtcbiAgeWllbGQgd2hpbGVDb25uZWN0ZWQob2JzZXJ2ZUNvbm5lY3Rpb25TdGF0dXMpO1xufVxuIl19