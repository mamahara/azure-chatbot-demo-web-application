"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = observeOnceEffect;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _effects = require("redux-saga/effects");

function observeOnceEffect(observable) {
  return (0, _effects.call)( /*#__PURE__*/_regenerator["default"].mark(function observeOnce() {
    var subscription;
    return _regenerator["default"].wrap(function observeOnce$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.prev = 0;
            _context.next = 3;
            return (0, _effects.call)(function () {
              return new Promise(function (resolve, reject) {
                subscription = observable.subscribe({
                  complete: resolve,
                  error: reject,
                  next: resolve
                });
              });
            });

          case 3:
            return _context.abrupt("return", _context.sent);

          case 4:
            _context.prev = 4;
            subscription && subscription.unsubscribe();
            return _context.finish(4);

          case 7:
          case "end":
            return _context.stop();
        }
      }
    }, observeOnce, null, [[0,, 4, 7]]);
  }));
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zYWdhcy9lZmZlY3RzL29ic2VydmVPbmNlLmpzIl0sIm5hbWVzIjpbIm9ic2VydmVPbmNlRWZmZWN0Iiwib2JzZXJ2YWJsZSIsIm9ic2VydmVPbmNlIiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJzdWJzY3JpcHRpb24iLCJzdWJzY3JpYmUiLCJjb21wbGV0ZSIsImVycm9yIiwibmV4dCIsInVuc3Vic2NyaWJlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBOztBQUVlLFNBQVNBLGlCQUFULENBQTJCQyxVQUEzQixFQUF1QztBQUNwRCxTQUFPLDhEQUFLLFNBQVVDLFdBQVY7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUlELG1CQUFNLG1CQUNYO0FBQUEscUJBQ0UsSUFBSUMsT0FBSixDQUFZLFVBQUNDLE9BQUQsRUFBVUMsTUFBVixFQUFxQjtBQUMvQkMsZ0JBQUFBLFlBQVksR0FBR0wsVUFBVSxDQUFDTSxTQUFYLENBQXFCO0FBQ2xDQyxrQkFBQUEsUUFBUSxFQUFFSixPQUR3QjtBQUVsQ0ssa0JBQUFBLEtBQUssRUFBRUosTUFGMkI7QUFHbENLLGtCQUFBQSxJQUFJLEVBQUVOO0FBSDRCLGlCQUFyQixDQUFmO0FBS0QsZUFORCxDQURGO0FBQUEsYUFEVyxDQUFOOztBQUpDO0FBQUE7O0FBQUE7QUFBQTtBQWVSRSxZQUFBQSxZQUFZLElBQUlBLFlBQVksQ0FBQ0ssV0FBYixFQUFoQjtBQWZROztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxPQUFVVCxXQUFWO0FBQUEsR0FBTCxFQUFQO0FBa0JEIiwic291cmNlUm9vdCI6ImNvcmU6Ly8vIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY2FsbCB9IGZyb20gJ3JlZHV4LXNhZ2EvZWZmZWN0cyc7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIG9ic2VydmVPbmNlRWZmZWN0KG9ic2VydmFibGUpIHtcbiAgcmV0dXJuIGNhbGwoZnVuY3Rpb24qIG9ic2VydmVPbmNlKCkge1xuICAgIGxldCBzdWJzY3JpcHRpb247XG5cbiAgICB0cnkge1xuICAgICAgcmV0dXJuIHlpZWxkIGNhbGwoXG4gICAgICAgICgpID0+XG4gICAgICAgICAgbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgICAgICAgc3Vic2NyaXB0aW9uID0gb2JzZXJ2YWJsZS5zdWJzY3JpYmUoe1xuICAgICAgICAgICAgICBjb21wbGV0ZTogcmVzb2x2ZSxcbiAgICAgICAgICAgICAgZXJyb3I6IHJlamVjdCxcbiAgICAgICAgICAgICAgbmV4dDogcmVzb2x2ZVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfSlcbiAgICAgICk7XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIHN1YnNjcmlwdGlvbiAmJiBzdWJzY3JpcHRpb24udW5zdWJzY3JpYmUoKTtcbiAgICB9XG4gIH0pO1xufVxuIl19