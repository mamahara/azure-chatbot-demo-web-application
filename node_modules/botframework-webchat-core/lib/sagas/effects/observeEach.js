"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = observeEachEffect;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _effects = require("redux-saga/effects");

var _createPromiseQueue = _interopRequireDefault(require("../../createPromiseQueue"));

function observeEachEffect(observable, saga) {
  return (0, _effects.call)( /*#__PURE__*/_regenerator["default"].mark(function observeEach() {
    var queue, subscription, result;
    return _regenerator["default"].wrap(function observeEach$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            queue = (0, _createPromiseQueue["default"])();
            subscription = observable.subscribe({
              next: queue.push
            });
            _context.prev = 2;

          case 3:
            _context.next = 5;
            return (0, _effects.call)(queue.shift);

          case 5:
            result = _context.sent;
            _context.next = 8;
            return (0, _effects.call)(saga, result);

          case 8:
            _context.next = 3;
            break;

          case 10:
            _context.prev = 10;
            subscription.unsubscribe();
            return _context.finish(10);

          case 13:
          case "end":
            return _context.stop();
        }
      }
    }, observeEach, null, [[2,, 10, 13]]);
  }));
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zYWdhcy9lZmZlY3RzL29ic2VydmVFYWNoLmpzIl0sIm5hbWVzIjpbIm9ic2VydmVFYWNoRWZmZWN0Iiwib2JzZXJ2YWJsZSIsInNhZ2EiLCJvYnNlcnZlRWFjaCIsInF1ZXVlIiwic3Vic2NyaXB0aW9uIiwic3Vic2NyaWJlIiwibmV4dCIsInB1c2giLCJzaGlmdCIsInJlc3VsdCIsInVuc3Vic2NyaWJlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBOztBQUVBOztBQUVlLFNBQVNBLGlCQUFULENBQTJCQyxVQUEzQixFQUF1Q0MsSUFBdkMsRUFBNkM7QUFDMUQsU0FBTyw4REFBSyxTQUFVQyxXQUFWO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNKQyxZQUFBQSxLQURJLEdBQ0kscUNBREo7QUFFSkMsWUFBQUEsWUFGSSxHQUVXSixVQUFVLENBQUNLLFNBQVgsQ0FBcUI7QUFBRUMsY0FBQUEsSUFBSSxFQUFFSCxLQUFLLENBQUNJO0FBQWQsYUFBckIsQ0FGWDtBQUFBOztBQUFBO0FBQUE7QUFNUyxtQkFBTSxtQkFBS0osS0FBSyxDQUFDSyxLQUFYLENBQU47O0FBTlQ7QUFNQUMsWUFBQUEsTUFOQTtBQUFBO0FBUU4sbUJBQU0sbUJBQUtSLElBQUwsRUFBV1EsTUFBWCxDQUFOOztBQVJNO0FBQUE7QUFBQTs7QUFBQTtBQUFBO0FBV1JMLFlBQUFBLFlBQVksQ0FBQ00sV0FBYjtBQVhROztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxPQUFVUixXQUFWO0FBQUEsR0FBTCxFQUFQO0FBY0QiLCJzb3VyY2VSb290IjoiY29yZTovLy8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjYWxsIH0gZnJvbSAncmVkdXgtc2FnYS9lZmZlY3RzJztcblxuaW1wb3J0IGNyZWF0ZVByb21pc2VRdWV1ZSBmcm9tICcuLi8uLi9jcmVhdGVQcm9taXNlUXVldWUnO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBvYnNlcnZlRWFjaEVmZmVjdChvYnNlcnZhYmxlLCBzYWdhKSB7XG4gIHJldHVybiBjYWxsKGZ1bmN0aW9uKiBvYnNlcnZlRWFjaCgpIHtcbiAgICBjb25zdCBxdWV1ZSA9IGNyZWF0ZVByb21pc2VRdWV1ZSgpO1xuICAgIGNvbnN0IHN1YnNjcmlwdGlvbiA9IG9ic2VydmFibGUuc3Vic2NyaWJlKHsgbmV4dDogcXVldWUucHVzaCB9KTtcblxuICAgIHRyeSB7XG4gICAgICBmb3IgKDs7KSB7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IHlpZWxkIGNhbGwocXVldWUuc2hpZnQpO1xuXG4gICAgICAgIHlpZWxkIGNhbGwoc2FnYSwgcmVzdWx0KTtcbiAgICAgIH1cbiAgICB9IGZpbmFsbHkge1xuICAgICAgc3Vic2NyaXB0aW9uLnVuc3Vic2NyaWJlKCk7XG4gICAgfVxuICB9KTtcbn1cbiJdfQ==