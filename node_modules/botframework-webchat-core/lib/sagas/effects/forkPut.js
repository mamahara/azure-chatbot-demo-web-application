"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = forkPutEffect;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _effects = require("redux-saga/effects");

function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

// In redux-saga, if we call the following effects in order, we might miss the take('C').
// 1. take('A')
// 2. put({ type: 'B' })
// 3. take('C')
// We need to modify step 2 to:
// 2. fork(function* () { yield put({ type: 'B' }) })
// This is a helper function for this purpose.
function forkPutEffect() {
  for (var _len = arguments.length, actions = new Array(_len), _key = 0; _key < _len; _key++) {
    actions[_key] = arguments[_key];
  }

  return (0, _effects.fork)( /*#__PURE__*/_regenerator["default"].mark(function forkPut() {
    var _iterator, _step, action;

    return _regenerator["default"].wrap(function forkPut$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _iterator = _createForOfIteratorHelper(actions);
            _context.prev = 1;

            _iterator.s();

          case 3:
            if ((_step = _iterator.n()).done) {
              _context.next = 9;
              break;
            }

            action = _step.value;
            _context.next = 7;
            return (0, _effects.put)(action);

          case 7:
            _context.next = 3;
            break;

          case 9:
            _context.next = 14;
            break;

          case 11:
            _context.prev = 11;
            _context.t0 = _context["catch"](1);

            _iterator.e(_context.t0);

          case 14:
            _context.prev = 14;

            _iterator.f();

            return _context.finish(14);

          case 17:
          case "end":
            return _context.stop();
        }
      }
    }, forkPut, null, [[1, 11, 14, 17]]);
  }));
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zYWdhcy9lZmZlY3RzL2ZvcmtQdXQuanMiXSwibmFtZXMiOlsiZm9ya1B1dEVmZmVjdCIsImFjdGlvbnMiLCJmb3JrUHV0IiwiYWN0aW9uIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBOzs7Ozs7OztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBRWUsU0FBU0EsYUFBVCxHQUFtQztBQUFBLG9DQUFUQyxPQUFTO0FBQVRBLElBQUFBLE9BQVM7QUFBQTs7QUFDaEQsU0FBTyw4REFBSyxTQUFVQyxPQUFWO0FBQUE7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxtREFDV0QsT0FEWDtBQUFBOztBQUFBOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7O0FBQ0NFLFlBQUFBLE1BREQ7QUFBQTtBQUVSLG1CQUFNLGtCQUFJQSxNQUFKLENBQU47O0FBRlE7QUFBQTtBQUFBOztBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUFBO0FBQUE7O0FBQUE7O0FBQUE7QUFBQTs7QUFBQTs7QUFBQTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsT0FBVUQsT0FBVjtBQUFBLEdBQUwsRUFBUDtBQUtEIiwic291cmNlUm9vdCI6ImNvcmU6Ly8vIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZm9yaywgcHV0IH0gZnJvbSAncmVkdXgtc2FnYS9lZmZlY3RzJztcblxuLy8gSW4gcmVkdXgtc2FnYSwgaWYgd2UgY2FsbCB0aGUgZm9sbG93aW5nIGVmZmVjdHMgaW4gb3JkZXIsIHdlIG1pZ2h0IG1pc3MgdGhlIHRha2UoJ0MnKS5cbi8vIDEuIHRha2UoJ0EnKVxuLy8gMi4gcHV0KHsgdHlwZTogJ0InIH0pXG4vLyAzLiB0YWtlKCdDJylcblxuLy8gV2UgbmVlZCB0byBtb2RpZnkgc3RlcCAyIHRvOlxuLy8gMi4gZm9yayhmdW5jdGlvbiogKCkgeyB5aWVsZCBwdXQoeyB0eXBlOiAnQicgfSkgfSlcblxuLy8gVGhpcyBpcyBhIGhlbHBlciBmdW5jdGlvbiBmb3IgdGhpcyBwdXJwb3NlLlxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBmb3JrUHV0RWZmZWN0KC4uLmFjdGlvbnMpIHtcbiAgcmV0dXJuIGZvcmsoZnVuY3Rpb24qIGZvcmtQdXQoKSB7XG4gICAgZm9yIChjb25zdCBhY3Rpb24gb2YgYWN0aW9ucykge1xuICAgICAgeWllbGQgcHV0KGFjdGlvbik7XG4gICAgfVxuICB9KTtcbn1cbiJdfQ==