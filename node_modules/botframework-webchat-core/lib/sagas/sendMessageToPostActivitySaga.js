"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = sendMessageToPostActivitySaga;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _effects = require("redux-saga/effects");

var _sendMessage = require("../actions/sendMessage");

var _postActivity = _interopRequireDefault(require("../actions/postActivity"));

var _whileConnected = _interopRequireDefault(require("./effects/whileConnected"));

var _marked = /*#__PURE__*/_regenerator["default"].mark(postActivityWithMessage),
    _marked2 = /*#__PURE__*/_regenerator["default"].mark(sendMessageToPostActivity),
    _marked3 = /*#__PURE__*/_regenerator["default"].mark(sendMessageToPostActivitySaga);

function postActivityWithMessage(_ref) {
  var _ref$payload, channelData, method, text;

  return _regenerator["default"].wrap(function postActivityWithMessage$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _ref$payload = _ref.payload, channelData = _ref$payload.channelData, method = _ref$payload.method, text = _ref$payload.text;
          _context.next = 3;
          return (0, _effects.put)((0, _postActivity["default"])({
            channelData: channelData,
            text: text,
            textFormat: 'plain',
            type: 'message'
          }, method));

        case 3:
        case "end":
          return _context.stop();
      }
    }
  }, _marked);
}

function sendMessageToPostActivity() {
  return _regenerator["default"].wrap(function sendMessageToPostActivity$(_context2) {
    while (1) {
      switch (_context2.prev = _context2.next) {
        case 0:
          _context2.next = 2;
          return (0, _effects.takeEvery)(function (_ref2) {
            var payload = _ref2.payload,
                type = _ref2.type;
            return type === _sendMessage.SEND_MESSAGE && payload.text;
          }, postActivityWithMessage);

        case 2:
        case "end":
          return _context2.stop();
      }
    }
  }, _marked2);
}

function sendMessageToPostActivitySaga() {
  return _regenerator["default"].wrap(function sendMessageToPostActivitySaga$(_context3) {
    while (1) {
      switch (_context3.prev = _context3.next) {
        case 0:
          _context3.next = 2;
          return (0, _whileConnected["default"])(sendMessageToPostActivity);

        case 2:
        case "end":
          return _context3.stop();
      }
    }
  }, _marked3);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9zYWdhcy9zZW5kTWVzc2FnZVRvUG9zdEFjdGl2aXR5U2FnYS5qcyJdLCJuYW1lcyI6WyJwb3N0QWN0aXZpdHlXaXRoTWVzc2FnZSIsInNlbmRNZXNzYWdlVG9Qb3N0QWN0aXZpdHkiLCJzZW5kTWVzc2FnZVRvUG9zdEFjdGl2aXR5U2FnYSIsInBheWxvYWQiLCJjaGFubmVsRGF0YSIsIm1ldGhvZCIsInRleHQiLCJ0ZXh0Rm9ybWF0IiwidHlwZSIsIlNFTkRfTUVTU0FHRSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQTs7QUFFQTs7QUFDQTs7QUFDQTs7d0RBRVVBLHVCO3lEQWNBQyx5Qjt5REFJZUMsNkI7O0FBbEJ6QixTQUFVRix1QkFBVjtBQUFBOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsOEJBQW9DRyxPQUFwQyxFQUErQ0MsV0FBL0MsZ0JBQStDQSxXQUEvQyxFQUE0REMsTUFBNUQsZ0JBQTREQSxNQUE1RCxFQUFvRUMsSUFBcEUsZ0JBQW9FQSxJQUFwRTtBQUFBO0FBQ0UsaUJBQU0sa0JBQ0osOEJBQ0U7QUFDRUYsWUFBQUEsV0FBVyxFQUFYQSxXQURGO0FBRUVFLFlBQUFBLElBQUksRUFBSkEsSUFGRjtBQUdFQyxZQUFBQSxVQUFVLEVBQUUsT0FIZDtBQUlFQyxZQUFBQSxJQUFJLEVBQUU7QUFKUixXQURGLEVBT0VILE1BUEYsQ0FESSxDQUFOOztBQURGO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBOztBQWNBLFNBQVVKLHlCQUFWO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNFLGlCQUFNLHdCQUFVO0FBQUEsZ0JBQUdFLE9BQUgsU0FBR0EsT0FBSDtBQUFBLGdCQUFZSyxJQUFaLFNBQVlBLElBQVo7QUFBQSxtQkFBdUJBLElBQUksS0FBS0MseUJBQVQsSUFBeUJOLE9BQU8sQ0FBQ0csSUFBeEQ7QUFBQSxXQUFWLEVBQXdFTix1QkFBeEUsQ0FBTjs7QUFERjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFJZSxTQUFVRSw2QkFBVjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDYixpQkFBTSxnQ0FBZUQseUJBQWYsQ0FBTjs7QUFEYTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSIsInNvdXJjZVJvb3QiOiJjb3JlOi8vLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHB1dCwgdGFrZUV2ZXJ5IH0gZnJvbSAncmVkdXgtc2FnYS9lZmZlY3RzJztcblxuaW1wb3J0IHsgU0VORF9NRVNTQUdFIH0gZnJvbSAnLi4vYWN0aW9ucy9zZW5kTWVzc2FnZSc7XG5pbXBvcnQgcG9zdEFjdGl2aXR5IGZyb20gJy4uL2FjdGlvbnMvcG9zdEFjdGl2aXR5JztcbmltcG9ydCB3aGlsZUNvbm5lY3RlZCBmcm9tICcuL2VmZmVjdHMvd2hpbGVDb25uZWN0ZWQnO1xuXG5mdW5jdGlvbiogcG9zdEFjdGl2aXR5V2l0aE1lc3NhZ2UoeyBwYXlsb2FkOiB7IGNoYW5uZWxEYXRhLCBtZXRob2QsIHRleHQgfSB9KSB7XG4gIHlpZWxkIHB1dChcbiAgICBwb3N0QWN0aXZpdHkoXG4gICAgICB7XG4gICAgICAgIGNoYW5uZWxEYXRhLFxuICAgICAgICB0ZXh0LFxuICAgICAgICB0ZXh0Rm9ybWF0OiAncGxhaW4nLFxuICAgICAgICB0eXBlOiAnbWVzc2FnZSdcbiAgICAgIH0sXG4gICAgICBtZXRob2RcbiAgICApXG4gICk7XG59XG5cbmZ1bmN0aW9uKiBzZW5kTWVzc2FnZVRvUG9zdEFjdGl2aXR5KCkge1xuICB5aWVsZCB0YWtlRXZlcnkoKHsgcGF5bG9hZCwgdHlwZSB9KSA9PiB0eXBlID09PSBTRU5EX01FU1NBR0UgJiYgcGF5bG9hZC50ZXh0LCBwb3N0QWN0aXZpdHlXaXRoTWVzc2FnZSk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKiBzZW5kTWVzc2FnZVRvUG9zdEFjdGl2aXR5U2FnYSgpIHtcbiAgeWllbGQgd2hpbGVDb25uZWN0ZWQoc2VuZE1lc3NhZ2VUb1Bvc3RBY3Rpdml0eSk7XG59XG4iXX0=