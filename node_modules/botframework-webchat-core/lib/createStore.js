"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = createStore;
exports.withDevTools = withDevTools;

var _redux = require("redux");

var _reduxDevtoolsExtension = require("redux-devtools-extension");

var _reduxSaga = _interopRequireDefault(require("redux-saga"));

var _reducer = _interopRequireDefault(require("./reducer"));

var _sagaError = _interopRequireDefault(require("./actions/sagaError"));

var _sagas = _interopRequireDefault(require("./sagas"));

// This is for the racing between sagaMiddleware and store

/* eslint no-use-before-define: "off" */
function createEnhancerAndSagaMiddleware(getStore) {
  var sagaMiddleware = (0, _reduxSaga["default"])({
    onError: function onError() {
      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }

      var err = args[0];
      console.error(err);
      var store = getStore();
      store && store.dispatch((0, _sagaError["default"])());
    }
  });

  for (var _len = arguments.length, middlewares = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    middlewares[_key - 1] = arguments[_key];
  }

  return {
    enhancer: _redux.applyMiddleware.apply(void 0, middlewares.concat([sagaMiddleware])),
    sagaMiddleware: sagaMiddleware
  };
}

function createStore(initialState) {
  for (var _len3 = arguments.length, middlewares = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {
    middlewares[_key3 - 1] = arguments[_key3];
  }

  var _createEnhancerAndSag = createEnhancerAndSagaMiddleware.apply(void 0, [function () {
    return store;
  }].concat(middlewares)),
      enhancer = _createEnhancerAndSag.enhancer,
      sagaMiddleware = _createEnhancerAndSag.sagaMiddleware;

  var store = (0, _redux.createStore)(_reducer["default"], initialState || {}, enhancer);
  sagaMiddleware.run(_sagas["default"]);
  return store;
}

function withDevTools(initialState) {
  for (var _len4 = arguments.length, middlewares = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {
    middlewares[_key4 - 1] = arguments[_key4];
  }

  var _createEnhancerAndSag2 = createEnhancerAndSagaMiddleware.apply(void 0, [function () {
    return store;
  }].concat(middlewares)),
      enhancer = _createEnhancerAndSag2.enhancer,
      sagaMiddleware = _createEnhancerAndSag2.sagaMiddleware;

  var store = (0, _redux.createStore)(_reducer["default"], initialState || {}, (0, _reduxDevtoolsExtension.composeWithDevTools)(enhancer));
  sagaMiddleware.run(_sagas["default"]);
  return store;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9jcmVhdGVTdG9yZS50cyJdLCJuYW1lcyI6WyJjcmVhdGVFbmhhbmNlckFuZFNhZ2FNaWRkbGV3YXJlIiwiZ2V0U3RvcmUiLCJzYWdhTWlkZGxld2FyZSIsIm9uRXJyb3IiLCJhcmdzIiwiZXJyIiwiY29uc29sZSIsImVycm9yIiwic3RvcmUiLCJkaXNwYXRjaCIsIm1pZGRsZXdhcmVzIiwiZW5oYW5jZXIiLCJhcHBseU1pZGRsZXdhcmUiLCJjcmVhdGVTdG9yZSIsImluaXRpYWxTdGF0ZSIsInJlZHVjZXIiLCJydW4iLCJzYWdhcyIsIndpdGhEZXZUb29scyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUdBOztBQUNBOztBQUNBOztBQUVBOztBQUNBOztBQUNBOztBQVRBOztBQUNBO0FBVUEsU0FBU0EsK0JBQVQsQ0FBeUNDLFFBQXpDLEVBQW1FO0FBQ2pFLE1BQU1DLGNBQWMsR0FBRywyQkFBcUI7QUFDMUNDLElBQUFBLE9BQU8sRUFBRSxtQkFBYTtBQUFBLHlDQUFUQyxJQUFTO0FBQVRBLFFBQUFBLElBQVM7QUFBQTs7QUFBQSxVQUNiQyxHQURhLEdBQ05ELElBRE07QUFHcEJFLE1BQUFBLE9BQU8sQ0FBQ0MsS0FBUixDQUFjRixHQUFkO0FBRUEsVUFBTUcsS0FBSyxHQUFHUCxRQUFRLEVBQXRCO0FBRUFPLE1BQUFBLEtBQUssSUFBSUEsS0FBSyxDQUFDQyxRQUFOLENBQWUsNEJBQWYsQ0FBVDtBQUNEO0FBVHlDLEdBQXJCLENBQXZCOztBQURpRSxvQ0FBYkMsV0FBYTtBQUFiQSxJQUFBQSxXQUFhO0FBQUE7O0FBYWpFLFNBQU87QUFDTEMsSUFBQUEsUUFBUSxFQUFFQyxxQ0FBbUJGLFdBQW5CLFNBQWdDUixjQUFoQyxHQURMO0FBRUxBLElBQUFBLGNBQWMsRUFBZEE7QUFGSyxHQUFQO0FBSUQ7O0FBRWMsU0FBU1csV0FBVCxDQUFxQkMsWUFBckIsRUFBbUQ7QUFBQSxxQ0FBYkosV0FBYTtBQUFiQSxJQUFBQSxXQUFhO0FBQUE7O0FBQUEsOEJBQzNCViwrQkFBK0IsTUFBL0IsVUFBZ0M7QUFBQSxXQUFNUSxLQUFOO0FBQUEsR0FBaEMsU0FBZ0RFLFdBQWhELEVBRDJCO0FBQUEsTUFDeERDLFFBRHdELHlCQUN4REEsUUFEd0Q7QUFBQSxNQUM5Q1QsY0FEOEMseUJBQzlDQSxjQUQ4Qzs7QUFFaEUsTUFBTU0sS0FBSyxHQUFHLHdCQUFpQk8sbUJBQWpCLEVBQTBCRCxZQUFZLElBQUksRUFBMUMsRUFBOENILFFBQTlDLENBQWQ7QUFFQVQsRUFBQUEsY0FBYyxDQUFDYyxHQUFmLENBQW1CQyxpQkFBbkI7QUFFQSxTQUFPVCxLQUFQO0FBQ0Q7O0FBRU0sU0FBU1UsWUFBVCxDQUFzQkosWUFBdEIsRUFBb0Q7QUFBQSxxQ0FBYkosV0FBYTtBQUFiQSxJQUFBQSxXQUFhO0FBQUE7O0FBQUEsK0JBQ3BCViwrQkFBK0IsTUFBL0IsVUFBZ0M7QUFBQSxXQUFNUSxLQUFOO0FBQUEsR0FBaEMsU0FBZ0RFLFdBQWhELEVBRG9CO0FBQUEsTUFDakRDLFFBRGlELDBCQUNqREEsUUFEaUQ7QUFBQSxNQUN2Q1QsY0FEdUMsMEJBQ3ZDQSxjQUR1Qzs7QUFFekQsTUFBTU0sS0FBSyxHQUFHLHdCQUFpQk8sbUJBQWpCLEVBQTBCRCxZQUFZLElBQUksRUFBMUMsRUFBOEMsaURBQW9CSCxRQUFwQixDQUE5QyxDQUFkO0FBRUFULEVBQUFBLGNBQWMsQ0FBQ2MsR0FBZixDQUFtQkMsaUJBQW5CO0FBRUEsU0FBT1QsS0FBUDtBQUNEIiwic291cmNlUm9vdCI6ImNvcmU6Ly8vIiwic291cmNlc0NvbnRlbnQiOlsiLy8gVGhpcyBpcyBmb3IgdGhlIHJhY2luZyBiZXR3ZWVuIHNhZ2FNaWRkbGV3YXJlIGFuZCBzdG9yZVxuLyogZXNsaW50IG5vLXVzZS1iZWZvcmUtZGVmaW5lOiBcIm9mZlwiICovXG5cbmltcG9ydCB7IGFwcGx5TWlkZGxld2FyZSwgY3JlYXRlU3RvcmUgYXMgY3JlYXRlUmVkdXhTdG9yZSB9IGZyb20gJ3JlZHV4JztcbmltcG9ydCB7IGNvbXBvc2VXaXRoRGV2VG9vbHMgfSBmcm9tICdyZWR1eC1kZXZ0b29scy1leHRlbnNpb24nO1xuaW1wb3J0IGNyZWF0ZVNhZ2FNaWRkbGV3YXJlIGZyb20gJ3JlZHV4LXNhZ2EnO1xuXG5pbXBvcnQgcmVkdWNlciBmcm9tICcuL3JlZHVjZXInO1xuaW1wb3J0IHNhZ2FFcnJvciBmcm9tICcuL2FjdGlvbnMvc2FnYUVycm9yJztcbmltcG9ydCBzYWdhcyBmcm9tICcuL3NhZ2FzJztcblxuZnVuY3Rpb24gY3JlYXRlRW5oYW5jZXJBbmRTYWdhTWlkZGxld2FyZShnZXRTdG9yZSwgLi4ubWlkZGxld2FyZXMpIHtcbiAgY29uc3Qgc2FnYU1pZGRsZXdhcmUgPSBjcmVhdGVTYWdhTWlkZGxld2FyZSh7XG4gICAgb25FcnJvcjogKC4uLmFyZ3MpID0+IHtcbiAgICAgIGNvbnN0IFtlcnJdID0gYXJncztcblxuICAgICAgY29uc29sZS5lcnJvcihlcnIpO1xuXG4gICAgICBjb25zdCBzdG9yZSA9IGdldFN0b3JlKCk7XG5cbiAgICAgIHN0b3JlICYmIHN0b3JlLmRpc3BhdGNoKHNhZ2FFcnJvcigpKTtcbiAgICB9XG4gIH0pO1xuXG4gIHJldHVybiB7XG4gICAgZW5oYW5jZXI6IGFwcGx5TWlkZGxld2FyZSguLi5taWRkbGV3YXJlcywgc2FnYU1pZGRsZXdhcmUpLFxuICAgIHNhZ2FNaWRkbGV3YXJlXG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNyZWF0ZVN0b3JlKGluaXRpYWxTdGF0ZSwgLi4ubWlkZGxld2FyZXMpIHtcbiAgY29uc3QgeyBlbmhhbmNlciwgc2FnYU1pZGRsZXdhcmUgfSA9IGNyZWF0ZUVuaGFuY2VyQW5kU2FnYU1pZGRsZXdhcmUoKCkgPT4gc3RvcmUsIC4uLm1pZGRsZXdhcmVzKTtcbiAgY29uc3Qgc3RvcmUgPSBjcmVhdGVSZWR1eFN0b3JlKHJlZHVjZXIsIGluaXRpYWxTdGF0ZSB8fCB7fSwgZW5oYW5jZXIpO1xuXG4gIHNhZ2FNaWRkbGV3YXJlLnJ1bihzYWdhcyk7XG5cbiAgcmV0dXJuIHN0b3JlO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gd2l0aERldlRvb2xzKGluaXRpYWxTdGF0ZSwgLi4ubWlkZGxld2FyZXMpIHtcbiAgY29uc3QgeyBlbmhhbmNlciwgc2FnYU1pZGRsZXdhcmUgfSA9IGNyZWF0ZUVuaGFuY2VyQW5kU2FnYU1pZGRsZXdhcmUoKCkgPT4gc3RvcmUsIC4uLm1pZGRsZXdhcmVzKTtcbiAgY29uc3Qgc3RvcmUgPSBjcmVhdGVSZWR1eFN0b3JlKHJlZHVjZXIsIGluaXRpYWxTdGF0ZSB8fCB7fSwgY29tcG9zZVdpdGhEZXZUb29scyhlbmhhbmNlcikpO1xuXG4gIHNhZ2FNaWRkbGV3YXJlLnJ1bihzYWdhcyk7XG5cbiAgcmV0dXJuIHN0b3JlO1xufVxuIl19