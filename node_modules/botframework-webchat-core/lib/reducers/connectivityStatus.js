"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = connectivityStatus;

var _connect = require("../actions/connect");

var _reconnect = require("../actions/reconnect");

var _disconnect = require("../../lib/actions/disconnect");

var _sagaError = require("../actions/sagaError");

var DEFAULT_STATE = 'uninitialized';

function connectivityStatus() {
  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_STATE;

  var _ref = arguments.length > 1 ? arguments[1] : undefined,
      type = _ref.type,
      meta = _ref.meta;

  if (state !== 'sagaerror') {
    switch (type) {
      case _connect.CONNECT_PENDING:
      case _reconnect.RECONNECT_PENDING:
        if (state !== 'uninitialized') {
          state = 'reconnecting';
        }

        break;

      case _connect.CONNECT_FULFILLED:
        state = 'connected';
        break;

      case _reconnect.RECONNECT_FULFILLED:
        state = 'reconnected';
        break;

      case _connect.CONNECT_REJECTED:
        state = 'error';
        break;

      case _connect.CONNECT_STILL_PENDING:
        state = 'connectingslow';
        break;

      case _disconnect.DISCONNECT_FULFILLED:
        state = meta && meta.error ? 'error' : 'notconnected';
        break;

      case _sagaError.SAGA_ERROR:
        state = 'sagaerror';
        break;

      default:
        break;
    }
  }

  return state;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9yZWR1Y2Vycy9jb25uZWN0aXZpdHlTdGF0dXMuanMiXSwibmFtZXMiOlsiREVGQVVMVF9TVEFURSIsImNvbm5lY3Rpdml0eVN0YXR1cyIsInN0YXRlIiwidHlwZSIsIm1ldGEiLCJDT05ORUNUX1BFTkRJTkciLCJSRUNPTk5FQ1RfUEVORElORyIsIkNPTk5FQ1RfRlVMRklMTEVEIiwiUkVDT05ORUNUX0ZVTEZJTExFRCIsIkNPTk5FQ1RfUkVKRUNURUQiLCJDT05ORUNUX1NUSUxMX1BFTkRJTkciLCJESVNDT05ORUNUX0ZVTEZJTExFRCIsImVycm9yIiwiU0FHQV9FUlJPUiJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUVBOztBQUVBOztBQUNBOztBQUVBLElBQU1BLGFBQWEsR0FBRyxlQUF0Qjs7QUFFZSxTQUFTQyxrQkFBVCxHQUFtRTtBQUFBLE1BQXZDQyxLQUF1Qyx1RUFBL0JGLGFBQStCOztBQUFBO0FBQUEsTUFBZEcsSUFBYyxRQUFkQSxJQUFjO0FBQUEsTUFBUkMsSUFBUSxRQUFSQSxJQUFROztBQUNoRixNQUFJRixLQUFLLEtBQUssV0FBZCxFQUEyQjtBQUN6QixZQUFRQyxJQUFSO0FBQ0UsV0FBS0Usd0JBQUw7QUFDQSxXQUFLQyw0QkFBTDtBQUNFLFlBQUlKLEtBQUssS0FBSyxlQUFkLEVBQStCO0FBQzdCQSxVQUFBQSxLQUFLLEdBQUcsY0FBUjtBQUNEOztBQUVEOztBQUVGLFdBQUtLLDBCQUFMO0FBQ0VMLFFBQUFBLEtBQUssR0FBRyxXQUFSO0FBQ0E7O0FBRUYsV0FBS00sOEJBQUw7QUFDRU4sUUFBQUEsS0FBSyxHQUFHLGFBQVI7QUFDQTs7QUFFRixXQUFLTyx5QkFBTDtBQUNFUCxRQUFBQSxLQUFLLEdBQUcsT0FBUjtBQUNBOztBQUVGLFdBQUtRLDhCQUFMO0FBQ0VSLFFBQUFBLEtBQUssR0FBRyxnQkFBUjtBQUNBOztBQUVGLFdBQUtTLGdDQUFMO0FBQ0VULFFBQUFBLEtBQUssR0FBR0UsSUFBSSxJQUFJQSxJQUFJLENBQUNRLEtBQWIsR0FBcUIsT0FBckIsR0FBK0IsY0FBdkM7QUFDQTs7QUFFRixXQUFLQyxxQkFBTDtBQUNFWCxRQUFBQSxLQUFLLEdBQUcsV0FBUjtBQUNBOztBQUVGO0FBQ0U7QUFsQ0o7QUFvQ0Q7O0FBRUQsU0FBT0EsS0FBUDtBQUNEIiwic291cmNlUm9vdCI6ImNvcmU6Ly8vIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ09OTkVDVF9GVUxGSUxMRUQsIENPTk5FQ1RfUEVORElORywgQ09OTkVDVF9SRUpFQ1RFRCwgQ09OTkVDVF9TVElMTF9QRU5ESU5HIH0gZnJvbSAnLi4vYWN0aW9ucy9jb25uZWN0JztcblxuaW1wb3J0IHsgUkVDT05ORUNUX1BFTkRJTkcsIFJFQ09OTkVDVF9GVUxGSUxMRUQgfSBmcm9tICcuLi9hY3Rpb25zL3JlY29ubmVjdCc7XG5cbmltcG9ydCB7IERJU0NPTk5FQ1RfRlVMRklMTEVEIH0gZnJvbSAnLi4vLi4vbGliL2FjdGlvbnMvZGlzY29ubmVjdCc7XG5pbXBvcnQgeyBTQUdBX0VSUk9SIH0gZnJvbSAnLi4vYWN0aW9ucy9zYWdhRXJyb3InO1xuXG5jb25zdCBERUZBVUxUX1NUQVRFID0gJ3VuaW5pdGlhbGl6ZWQnO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjb25uZWN0aXZpdHlTdGF0dXMoc3RhdGUgPSBERUZBVUxUX1NUQVRFLCB7IHR5cGUsIG1ldGEgfSkge1xuICBpZiAoc3RhdGUgIT09ICdzYWdhZXJyb3InKSB7XG4gICAgc3dpdGNoICh0eXBlKSB7XG4gICAgICBjYXNlIENPTk5FQ1RfUEVORElORzpcbiAgICAgIGNhc2UgUkVDT05ORUNUX1BFTkRJTkc6XG4gICAgICAgIGlmIChzdGF0ZSAhPT0gJ3VuaW5pdGlhbGl6ZWQnKSB7XG4gICAgICAgICAgc3RhdGUgPSAncmVjb25uZWN0aW5nJztcbiAgICAgICAgfVxuXG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlIENPTk5FQ1RfRlVMRklMTEVEOlxuICAgICAgICBzdGF0ZSA9ICdjb25uZWN0ZWQnO1xuICAgICAgICBicmVhaztcblxuICAgICAgY2FzZSBSRUNPTk5FQ1RfRlVMRklMTEVEOlxuICAgICAgICBzdGF0ZSA9ICdyZWNvbm5lY3RlZCc7XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlIENPTk5FQ1RfUkVKRUNURUQ6XG4gICAgICAgIHN0YXRlID0gJ2Vycm9yJztcbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGNhc2UgQ09OTkVDVF9TVElMTF9QRU5ESU5HOlxuICAgICAgICBzdGF0ZSA9ICdjb25uZWN0aW5nc2xvdyc7XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlIERJU0NPTk5FQ1RfRlVMRklMTEVEOlxuICAgICAgICBzdGF0ZSA9IG1ldGEgJiYgbWV0YS5lcnJvciA/ICdlcnJvcicgOiAnbm90Y29ubmVjdGVkJztcbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGNhc2UgU0FHQV9FUlJPUjpcbiAgICAgICAgc3RhdGUgPSAnc2FnYWVycm9yJztcbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBzdGF0ZTtcbn1cbiJdfQ==