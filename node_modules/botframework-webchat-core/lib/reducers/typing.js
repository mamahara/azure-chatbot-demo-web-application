"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = lastTyping;

var _simpleUpdateIn = _interopRequireDefault(require("simple-update-in"));

var _incomingActivity = require("../actions/incomingActivity");

var _postActivity = require("../actions/postActivity");

/*eslint no-case-declarations: "off"*/

/*eslint no-unused-vars: "off"*/
var DEFAULT_STATE = {};

function lastTyping() {
  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_STATE;

  var _ref = arguments.length > 1 ? arguments[1] : undefined,
      payload = _ref.payload,
      type = _ref.type;

  if (type === _incomingActivity.INCOMING_ACTIVITY || type === _postActivity.POST_ACTIVITY_PENDING) {
    var _payload$activity = payload.activity,
        _payload$activity$fro = _payload$activity.from,
        id = _payload$activity$fro.id,
        name = _payload$activity$fro.name,
        role = _payload$activity$fro.role,
        activityType = _payload$activity.type;

    if (activityType === 'typing') {
      state = (0, _simpleUpdateIn["default"])(state, [id], function () {
        return {
          at: Date.now(),
          name: name,
          role: role
        };
      });
    } else if (activityType === 'message') {
      state = (0, _simpleUpdateIn["default"])(state, [id]);
    }
  }

  return state;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9yZWR1Y2Vycy90eXBpbmcuanMiXSwibmFtZXMiOlsiREVGQVVMVF9TVEFURSIsImxhc3RUeXBpbmciLCJzdGF0ZSIsInBheWxvYWQiLCJ0eXBlIiwiSU5DT01JTkdfQUNUSVZJVFkiLCJQT1NUX0FDVElWSVRZX1BFTkRJTkciLCJhY3Rpdml0eSIsImZyb20iLCJpZCIsIm5hbWUiLCJyb2xlIiwiYWN0aXZpdHlUeXBlIiwiYXQiLCJEYXRlIiwibm93Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFHQTs7QUFFQTs7QUFDQTs7QUFOQTs7QUFDQTtBQU9BLElBQU1BLGFBQWEsR0FBRyxFQUF0Qjs7QUFFZSxTQUFTQyxVQUFULEdBQThEO0FBQUEsTUFBMUNDLEtBQTBDLHVFQUFsQ0YsYUFBa0M7O0FBQUE7QUFBQSxNQUFqQkcsT0FBaUIsUUFBakJBLE9BQWlCO0FBQUEsTUFBUkMsSUFBUSxRQUFSQSxJQUFROztBQUMzRSxNQUFJQSxJQUFJLEtBQUtDLG1DQUFULElBQThCRCxJQUFJLEtBQUtFLG1DQUEzQyxFQUFrRTtBQUFBLDRCQU01REgsT0FONEQsQ0FFOURJLFFBRjhEO0FBQUEsa0RBRzVEQyxJQUg0RDtBQUFBLFFBR3BEQyxFQUhvRCx5QkFHcERBLEVBSG9EO0FBQUEsUUFHaERDLElBSGdELHlCQUdoREEsSUFIZ0Q7QUFBQSxRQUcxQ0MsSUFIMEMseUJBRzFDQSxJQUgwQztBQUFBLFFBSXREQyxZQUpzRCxxQkFJNURSLElBSjREOztBQVFoRSxRQUFJUSxZQUFZLEtBQUssUUFBckIsRUFBK0I7QUFDN0JWLE1BQUFBLEtBQUssR0FBRyxnQ0FBU0EsS0FBVCxFQUFnQixDQUFDTyxFQUFELENBQWhCLEVBQXNCO0FBQUEsZUFBTztBQUNuQ0ksVUFBQUEsRUFBRSxFQUFFQyxJQUFJLENBQUNDLEdBQUwsRUFEK0I7QUFFbkNMLFVBQUFBLElBQUksRUFBSkEsSUFGbUM7QUFHbkNDLFVBQUFBLElBQUksRUFBSkE7QUFIbUMsU0FBUDtBQUFBLE9BQXRCLENBQVI7QUFLRCxLQU5ELE1BTU8sSUFBSUMsWUFBWSxLQUFLLFNBQXJCLEVBQWdDO0FBQ3JDVixNQUFBQSxLQUFLLEdBQUcsZ0NBQVNBLEtBQVQsRUFBZ0IsQ0FBQ08sRUFBRCxDQUFoQixDQUFSO0FBQ0Q7QUFDRjs7QUFFRCxTQUFPUCxLQUFQO0FBQ0QiLCJzb3VyY2VSb290IjoiY29yZTovLy8iLCJzb3VyY2VzQ29udGVudCI6WyIvKmVzbGludCBuby1jYXNlLWRlY2xhcmF0aW9uczogXCJvZmZcIiovXG4vKmVzbGludCBuby11bnVzZWQtdmFyczogXCJvZmZcIiovXG5cbmltcG9ydCB1cGRhdGVJbiBmcm9tICdzaW1wbGUtdXBkYXRlLWluJztcblxuaW1wb3J0IHsgSU5DT01JTkdfQUNUSVZJVFkgfSBmcm9tICcuLi9hY3Rpb25zL2luY29taW5nQWN0aXZpdHknO1xuaW1wb3J0IHsgUE9TVF9BQ1RJVklUWV9QRU5ESU5HIH0gZnJvbSAnLi4vYWN0aW9ucy9wb3N0QWN0aXZpdHknO1xuXG5jb25zdCBERUZBVUxUX1NUQVRFID0ge307XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGxhc3RUeXBpbmcoc3RhdGUgPSBERUZBVUxUX1NUQVRFLCB7IHBheWxvYWQsIHR5cGUgfSkge1xuICBpZiAodHlwZSA9PT0gSU5DT01JTkdfQUNUSVZJVFkgfHwgdHlwZSA9PT0gUE9TVF9BQ1RJVklUWV9QRU5ESU5HKSB7XG4gICAgY29uc3Qge1xuICAgICAgYWN0aXZpdHk6IHtcbiAgICAgICAgZnJvbTogeyBpZCwgbmFtZSwgcm9sZSB9LFxuICAgICAgICB0eXBlOiBhY3Rpdml0eVR5cGVcbiAgICAgIH1cbiAgICB9ID0gcGF5bG9hZDtcblxuICAgIGlmIChhY3Rpdml0eVR5cGUgPT09ICd0eXBpbmcnKSB7XG4gICAgICBzdGF0ZSA9IHVwZGF0ZUluKHN0YXRlLCBbaWRdLCAoKSA9PiAoe1xuICAgICAgICBhdDogRGF0ZS5ub3coKSxcbiAgICAgICAgbmFtZSxcbiAgICAgICAgcm9sZVxuICAgICAgfSkpO1xuICAgIH0gZWxzZSBpZiAoYWN0aXZpdHlUeXBlID09PSAnbWVzc2FnZScpIHtcbiAgICAgIHN0YXRlID0gdXBkYXRlSW4oc3RhdGUsIFtpZF0pO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBzdGF0ZTtcbn1cbiJdfQ==