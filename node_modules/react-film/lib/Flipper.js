"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _glamor = require("glamor");

var _classnames = _interopRequireDefault(require("classnames"));

var _react = _interopRequireWildcard(require("react"));

var _Context = _interopRequireDefault(require("./Context"));

var browser = _interopRequireWildcard(require("./browser"));

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ROOT_CSS = (0, _glamor.css)({
  border: 0,
  outline: 0
});

var _default = function _default(_ref) {
  var ariaLabel = _ref['aria-label'],
      blurFocusOnClick = _ref.blurFocusOnClick,
      children = _ref.children,
      className = _ref.className,
      mode = _ref.mode;

  var _useContext = (0, _react.useContext)(_Context.default),
      dir = _useContext.dir,
      scrollBarPercentage = _useContext.scrollBarPercentage,
      scrollOneLeft = _useContext.scrollOneLeft,
      scrollOneRight = _useContext.scrollOneRight;

  var ref = (0, _react.useRef)();
  var left = mode === 'left';
  var handleClick = (0, _react.useCallback)(function () {
    left ? scrollOneLeft() : scrollOneRight();
    blurFocusOnClick && ref.current.blur();
  }, [blurFocusOnClick, mode, ref, scrollOneLeft, scrollOneRight]);
  var handleKeyDown = (0, _react.useCallback)(function (event) {
    var key = event.key;

    if (key === 'Enter' || key === ' ') {
      event.preventDefault();
      left ? scrollOneLeft() : scrollOneRight();
    }
  }, [mode, ref, scrollOneLeft, scrollOneRight]);
  var hide;

  if (dir === 'rtl' && !browser.chrome) {
    if (left) {
      hide = scrollBarPercentage === '100%' || scrollBarPercentage === '-100%';
    } else {
      hide = scrollBarPercentage === '0%';
    }
  } else {
    if (left) {
      hide = scrollBarPercentage === '0%';
    } else {
      hide = scrollBarPercentage === '100%';
    }
  }

  return _react.default.createElement("button", {
    "aria-label": ariaLabel || (left ? 'left' : 'right'),
    className: (0, _classnames.default)(ROOT_CSS + '', className, {
      hide: hide
    }),
    onClick: handleClick,
    onKeyDown: handleKeyDown,
    type: "button",
    ref: ref
  }, _react.default.createElement("div", {
    className: "slider"
  }, children));
};

exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9GbGlwcGVyLmpzIl0sIm5hbWVzIjpbIlJPT1RfQ1NTIiwiYm9yZGVyIiwib3V0bGluZSIsImFyaWFMYWJlbCIsImJsdXJGb2N1c09uQ2xpY2siLCJjaGlsZHJlbiIsImNsYXNzTmFtZSIsIm1vZGUiLCJDb250ZXh0IiwiZGlyIiwic2Nyb2xsQmFyUGVyY2VudGFnZSIsInNjcm9sbE9uZUxlZnQiLCJzY3JvbGxPbmVSaWdodCIsInJlZiIsImxlZnQiLCJoYW5kbGVDbGljayIsImN1cnJlbnQiLCJibHVyIiwiaGFuZGxlS2V5RG93biIsImV2ZW50Iiwia2V5IiwicHJldmVudERlZmF1bHQiLCJoaWRlIiwiYnJvd3NlciIsImNocm9tZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUVBOztBQUVBOzs7Ozs7QUFFQSxJQUFNQSxRQUFRLEdBQUcsaUJBQUk7QUFDbkJDLEVBQUFBLE1BQU0sRUFBRSxDQURXO0FBRW5CQyxFQUFBQSxPQUFPLEVBQUU7QUFGVSxDQUFKLENBQWpCOztlQUtlLHdCQUE4RTtBQUFBLE1BQTdEQyxTQUE2RCxRQUEzRSxZQUEyRTtBQUFBLE1BQWxEQyxnQkFBa0QsUUFBbERBLGdCQUFrRDtBQUFBLE1BQWhDQyxRQUFnQyxRQUFoQ0EsUUFBZ0M7QUFBQSxNQUF0QkMsU0FBc0IsUUFBdEJBLFNBQXNCO0FBQUEsTUFBWEMsSUFBVyxRQUFYQSxJQUFXOztBQUFBLG9CQUN2Qix1QkFBV0MsZ0JBQVgsQ0FEdUI7QUFBQSxNQUNuRkMsR0FEbUYsZUFDbkZBLEdBRG1GO0FBQUEsTUFDOUVDLG1CQUQ4RSxlQUM5RUEsbUJBRDhFO0FBQUEsTUFDekRDLGFBRHlELGVBQ3pEQSxhQUR5RDtBQUFBLE1BQzFDQyxjQUQwQyxlQUMxQ0EsY0FEMEM7O0FBRTNGLE1BQU1DLEdBQUcsR0FBRyxvQkFBWjtBQUNBLE1BQU1DLElBQUksR0FBR1AsSUFBSSxLQUFLLE1BQXRCO0FBRUEsTUFBTVEsV0FBVyxHQUFHLHdCQUFZLFlBQU07QUFDcENELElBQUFBLElBQUksR0FBR0gsYUFBYSxFQUFoQixHQUFxQkMsY0FBYyxFQUF2QztBQUNBUixJQUFBQSxnQkFBZ0IsSUFBSVMsR0FBRyxDQUFDRyxPQUFKLENBQVlDLElBQVosRUFBcEI7QUFDRCxHQUhtQixFQUdqQixDQUFDYixnQkFBRCxFQUFtQkcsSUFBbkIsRUFBeUJNLEdBQXpCLEVBQThCRixhQUE5QixFQUE2Q0MsY0FBN0MsQ0FIaUIsQ0FBcEI7QUFLQSxNQUFNTSxhQUFhLEdBQUcsd0JBQVksVUFBQUMsS0FBSyxFQUFJO0FBQUEsUUFDakNDLEdBRGlDLEdBQ3pCRCxLQUR5QixDQUNqQ0MsR0FEaUM7O0FBR3pDLFFBQUlBLEdBQUcsS0FBSyxPQUFSLElBQW1CQSxHQUFHLEtBQUssR0FBL0IsRUFBb0M7QUFDbENELE1BQUFBLEtBQUssQ0FBQ0UsY0FBTjtBQUNBUCxNQUFBQSxJQUFJLEdBQUdILGFBQWEsRUFBaEIsR0FBcUJDLGNBQWMsRUFBdkM7QUFDRDtBQUNGLEdBUHFCLEVBT25CLENBQUNMLElBQUQsRUFBT00sR0FBUCxFQUFZRixhQUFaLEVBQTJCQyxjQUEzQixDQVBtQixDQUF0QjtBQVNBLE1BQUlVLElBQUo7O0FBRUEsTUFBSWIsR0FBRyxLQUFLLEtBQVIsSUFBaUIsQ0FBQ2MsT0FBTyxDQUFDQyxNQUE5QixFQUFzQztBQUNwQyxRQUFJVixJQUFKLEVBQVU7QUFDUlEsTUFBQUEsSUFBSSxHQUFHWixtQkFBbUIsS0FBSyxNQUF4QixJQUFrQ0EsbUJBQW1CLEtBQUssT0FBakU7QUFDRCxLQUZELE1BRU87QUFDTFksTUFBQUEsSUFBSSxHQUFHWixtQkFBbUIsS0FBSyxJQUEvQjtBQUNEO0FBQ0YsR0FORCxNQU1PO0FBQ0wsUUFBSUksSUFBSixFQUFVO0FBQ1JRLE1BQUFBLElBQUksR0FBR1osbUJBQW1CLEtBQUssSUFBL0I7QUFDRCxLQUZELE1BRU87QUFDTFksTUFBQUEsSUFBSSxHQUFHWixtQkFBbUIsS0FBSyxNQUEvQjtBQUNEO0FBQ0Y7O0FBRUQsU0FDRTtBQUNFLGtCQUFhUCxTQUFTLEtBQUtXLElBQUksR0FBRyxNQUFILEdBQVksT0FBckIsQ0FEeEI7QUFFRSxJQUFBLFNBQVMsRUFBRyx5QkFDVmQsUUFBUSxHQUFHLEVBREQsRUFFVk0sU0FGVSxFQUdWO0FBQUVnQixNQUFBQSxJQUFJLEVBQUpBO0FBQUYsS0FIVSxDQUZkO0FBT0UsSUFBQSxPQUFPLEVBQUVQLFdBUFg7QUFRRSxJQUFBLFNBQVMsRUFBRUcsYUFSYjtBQVNFLElBQUEsSUFBSSxFQUFDLFFBVFA7QUFVRSxJQUFBLEdBQUcsRUFBRUw7QUFWUCxLQVlFO0FBQUssSUFBQSxTQUFTLEVBQUM7QUFBZixLQUNJUixRQURKLENBWkYsQ0FERjtBQWtCRCxDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3NzIH0gZnJvbSAnZ2xhbW9yJztcbmltcG9ydCBjbGFzc05hbWVzIGZyb20gJ2NsYXNzbmFtZXMnO1xuaW1wb3J0IFJlYWN0LCB7IHVzZUNhbGxiYWNrLCB1c2VDb250ZXh0LCB1c2VSZWYgfSBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCBDb250ZXh0IGZyb20gJy4vQ29udGV4dCc7XG5cbmltcG9ydCAqIGFzIGJyb3dzZXIgZnJvbSAnLi9icm93c2VyJztcblxuY29uc3QgUk9PVF9DU1MgPSBjc3Moe1xuICBib3JkZXI6IDAsXG4gIG91dGxpbmU6IDBcbn0pO1xuXG5leHBvcnQgZGVmYXVsdCAoeyAnYXJpYS1sYWJlbCc6IGFyaWFMYWJlbCwgYmx1ckZvY3VzT25DbGljaywgY2hpbGRyZW4sIGNsYXNzTmFtZSwgbW9kZSB9KSA9PiB7XG4gIGNvbnN0IHsgZGlyLCBzY3JvbGxCYXJQZXJjZW50YWdlLCBzY3JvbGxPbmVMZWZ0LCBzY3JvbGxPbmVSaWdodCB9ID0gdXNlQ29udGV4dChDb250ZXh0KTtcbiAgY29uc3QgcmVmID0gdXNlUmVmKCk7XG4gIGNvbnN0IGxlZnQgPSBtb2RlID09PSAnbGVmdCc7XG5cbiAgY29uc3QgaGFuZGxlQ2xpY2sgPSB1c2VDYWxsYmFjaygoKSA9PiB7XG4gICAgbGVmdCA/IHNjcm9sbE9uZUxlZnQoKSA6IHNjcm9sbE9uZVJpZ2h0KCk7XG4gICAgYmx1ckZvY3VzT25DbGljayAmJiByZWYuY3VycmVudC5ibHVyKCk7XG4gIH0sIFtibHVyRm9jdXNPbkNsaWNrLCBtb2RlLCByZWYsIHNjcm9sbE9uZUxlZnQsIHNjcm9sbE9uZVJpZ2h0XSk7XG5cbiAgY29uc3QgaGFuZGxlS2V5RG93biA9IHVzZUNhbGxiYWNrKGV2ZW50ID0+IHtcbiAgICBjb25zdCB7IGtleSB9ID0gZXZlbnQ7XG5cbiAgICBpZiAoa2V5ID09PSAnRW50ZXInIHx8IGtleSA9PT0gJyAnKSB7XG4gICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgbGVmdCA/IHNjcm9sbE9uZUxlZnQoKSA6IHNjcm9sbE9uZVJpZ2h0KCk7XG4gICAgfVxuICB9LCBbbW9kZSwgcmVmLCBzY3JvbGxPbmVMZWZ0LCBzY3JvbGxPbmVSaWdodF0pO1xuXG4gIGxldCBoaWRlO1xuXG4gIGlmIChkaXIgPT09ICdydGwnICYmICFicm93c2VyLmNocm9tZSkge1xuICAgIGlmIChsZWZ0KSB7XG4gICAgICBoaWRlID0gc2Nyb2xsQmFyUGVyY2VudGFnZSA9PT0gJzEwMCUnIHx8IHNjcm9sbEJhclBlcmNlbnRhZ2UgPT09ICctMTAwJSc7XG4gICAgfSBlbHNlIHtcbiAgICAgIGhpZGUgPSBzY3JvbGxCYXJQZXJjZW50YWdlID09PSAnMCUnO1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICBpZiAobGVmdCkge1xuICAgICAgaGlkZSA9IHNjcm9sbEJhclBlcmNlbnRhZ2UgPT09ICcwJSc7XG4gICAgfSBlbHNlIHtcbiAgICAgIGhpZGUgPSBzY3JvbGxCYXJQZXJjZW50YWdlID09PSAnMTAwJSc7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIChcbiAgICA8YnV0dG9uXG4gICAgICBhcmlhLWxhYmVsPXsgYXJpYUxhYmVsIHx8IChsZWZ0ID8gJ2xlZnQnIDogJ3JpZ2h0JykgfVxuICAgICAgY2xhc3NOYW1lPXsgY2xhc3NOYW1lcyhcbiAgICAgICAgUk9PVF9DU1MgKyAnJyxcbiAgICAgICAgY2xhc3NOYW1lLFxuICAgICAgICB7IGhpZGUgfVxuICAgICAgKSB9XG4gICAgICBvbkNsaWNrPXtoYW5kbGVDbGlja31cbiAgICAgIG9uS2V5RG93bj17aGFuZGxlS2V5RG93bn1cbiAgICAgIHR5cGU9XCJidXR0b25cIlxuICAgICAgcmVmPXtyZWZ9XG4gICAgPlxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJzbGlkZXJcIj5cbiAgICAgICAgeyBjaGlsZHJlbiB9XG4gICAgICA8L2Rpdj5cbiAgICA8L2J1dHRvbj5cbiAgKTtcbn1cbiJdfQ==