"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireWildcard(require("react"));

var _Context = _interopRequireDefault(require("./Context"));

var _createSynthesize = _interopRequireDefault(require("./createSynthesize"));

var _migrateDeprecatedProps = _interopRequireDefault(require("./migrateDeprecatedProps"));

var _useEvent = _interopRequireDefault(require("./useEvent"));

var Composer = function Composer(props) {
  var _migrateDeprecatedPro = (0, _migrateDeprecatedProps["default"])(props, Composer),
      children = _migrateDeprecatedPro.children,
      ponyfillFromProps = _migrateDeprecatedPro.ponyfill; // If we have the parent context, we will use that synthesize() function and its internal queue.


  var _ref = (0, _react.useContext)(_Context["default"]) || {},
      parentPonyfill = _ref.ponyfill,
      parentSynthesize = _ref.synthesize;

  var ponyfill = ponyfillFromProps || parentPonyfill || {
    speechSynthesis: window.speechSynthesis || window.webkitSpeechSynthesis,
    SpeechSynthesisUtterance: window.SpeechSynthesisUtterance || window.webkitSpeechSynthesisUtterance
  }; // If the parent context changed and no longer has a synthesize() function, we will create the queue.
  // This is very unlikely to happen.

  var synthesize = (0, _react.useMemo)(function () {
    return parentSynthesize || (0, _createSynthesize["default"])();
  }, [parentSynthesize]);
  var speechSynthesis = ponyfill.speechSynthesis;

  var _useState = (0, _react.useState)(speechSynthesis.getVoices()),
      _useState2 = (0, _slicedToArray2["default"])(_useState, 2),
      voices = _useState2[0],
      setVoices = _useState2[1];

  (0, _useEvent["default"])(speechSynthesis, 'voiceschanged', function () {
    return setVoices(speechSynthesis.getVoices());
  });
  var context = (0, _react.useMemo)(function () {
    return {
      ponyfill: ponyfill,
      synthesize: synthesize,
      voices: voices
    };
  }, [ponyfill, synthesize, voices]);
  return _react["default"].createElement(_Context["default"].Provider, {
    value: context
  }, typeof children === 'function' ? _react["default"].createElement(_Context["default"].Consumer, null, function (context) {
    return children(context);
  }) : children);
};

Composer.defaultProps = {
  children: undefined,
  ponyfill: undefined
};
Composer.propTypes = {
  children: _propTypes["default"].any,
  ponyfill: _propTypes["default"].shape({
    speechSynthesis: _propTypes["default"].any,
    SpeechSynthesisUtterance: _propTypes["default"].any
  })
};
var _default = Composer;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9Db21wb3Nlci5qcyJdLCJuYW1lcyI6WyJDb21wb3NlciIsInByb3BzIiwiY2hpbGRyZW4iLCJwb255ZmlsbEZyb21Qcm9wcyIsInBvbnlmaWxsIiwiQ29udGV4dCIsInBhcmVudFBvbnlmaWxsIiwicGFyZW50U3ludGhlc2l6ZSIsInN5bnRoZXNpemUiLCJzcGVlY2hTeW50aGVzaXMiLCJ3aW5kb3ciLCJ3ZWJraXRTcGVlY2hTeW50aGVzaXMiLCJTcGVlY2hTeW50aGVzaXNVdHRlcmFuY2UiLCJ3ZWJraXRTcGVlY2hTeW50aGVzaXNVdHRlcmFuY2UiLCJnZXRWb2ljZXMiLCJ2b2ljZXMiLCJzZXRWb2ljZXMiLCJjb250ZXh0IiwiZGVmYXVsdFByb3BzIiwidW5kZWZpbmVkIiwicHJvcFR5cGVzIiwiUHJvcFR5cGVzIiwiYW55Iiwic2hhcGUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFFQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFFQSxJQUFNQSxRQUFRLEdBQUcsU0FBWEEsUUFBVyxDQUFBQyxLQUFLLEVBQUk7QUFBQSw4QkFDMEIsd0NBQXVCQSxLQUF2QixFQUE4QkQsUUFBOUIsQ0FEMUI7QUFBQSxNQUNoQkUsUUFEZ0IseUJBQ2hCQSxRQURnQjtBQUFBLE1BQ0lDLGlCQURKLHlCQUNOQyxRQURNLEVBR3hCOzs7QUFId0IsYUFJMkMsdUJBQVdDLG1CQUFYLEtBQXVCLEVBSmxFO0FBQUEsTUFJTkMsY0FKTSxRQUloQkYsUUFKZ0I7QUFBQSxNQUlzQkcsZ0JBSnRCLFFBSVVDLFVBSlY7O0FBTXhCLE1BQU1KLFFBQVEsR0FBR0QsaUJBQWlCLElBQUlHLGNBQXJCLElBQXVDO0FBQ3RERyxJQUFBQSxlQUFlLEVBQUVDLE1BQU0sQ0FBQ0QsZUFBUCxJQUEwQkMsTUFBTSxDQUFDQyxxQkFESTtBQUV0REMsSUFBQUEsd0JBQXdCLEVBQUVGLE1BQU0sQ0FBQ0Usd0JBQVAsSUFBbUNGLE1BQU0sQ0FBQ0c7QUFGZCxHQUF4RCxDQU53QixDQVd4QjtBQUNBOztBQUNBLE1BQU1MLFVBQVUsR0FBRyxvQkFBUTtBQUFBLFdBQU1ELGdCQUFnQixJQUFJLG1DQUExQjtBQUFBLEdBQVIsRUFBc0QsQ0FBQ0EsZ0JBQUQsQ0FBdEQsQ0FBbkI7QUFid0IsTUFjaEJFLGVBZGdCLEdBY0lMLFFBZEosQ0FjaEJLLGVBZGdCOztBQUFBLGtCQWVJLHFCQUFTQSxlQUFlLENBQUNLLFNBQWhCLEVBQVQsQ0FmSjtBQUFBO0FBQUEsTUFlakJDLE1BZmlCO0FBQUEsTUFlVEMsU0FmUzs7QUFpQnhCLDRCQUFTUCxlQUFULEVBQTBCLGVBQTFCLEVBQTJDO0FBQUEsV0FBTU8sU0FBUyxDQUFDUCxlQUFlLENBQUNLLFNBQWhCLEVBQUQsQ0FBZjtBQUFBLEdBQTNDO0FBRUEsTUFBTUcsT0FBTyxHQUFHLG9CQUFRO0FBQUEsV0FBTztBQUM3QmIsTUFBQUEsUUFBUSxFQUFSQSxRQUQ2QjtBQUU3QkksTUFBQUEsVUFBVSxFQUFWQSxVQUY2QjtBQUc3Qk8sTUFBQUEsTUFBTSxFQUFOQTtBQUg2QixLQUFQO0FBQUEsR0FBUixFQUlaLENBQUNYLFFBQUQsRUFBV0ksVUFBWCxFQUF1Qk8sTUFBdkIsQ0FKWSxDQUFoQjtBQU1BLFNBQ0UsZ0NBQUMsbUJBQUQsQ0FBUyxRQUFUO0FBQWtCLElBQUEsS0FBSyxFQUFHRTtBQUExQixLQUVJLE9BQU9mLFFBQVAsS0FBb0IsVUFBcEIsR0FDRSxnQ0FBQyxtQkFBRCxDQUFTLFFBQVQsUUFDSSxVQUFBZSxPQUFPO0FBQUEsV0FBSWYsUUFBUSxDQUFDZSxPQUFELENBQVo7QUFBQSxHQURYLENBREYsR0FLRWYsUUFQTixDQURGO0FBWUQsQ0FyQ0Q7O0FBdUNBRixRQUFRLENBQUNrQixZQUFULEdBQXdCO0FBQ3RCaEIsRUFBQUEsUUFBUSxFQUFFaUIsU0FEWTtBQUV0QmYsRUFBQUEsUUFBUSxFQUFFZTtBQUZZLENBQXhCO0FBS0FuQixRQUFRLENBQUNvQixTQUFULEdBQXFCO0FBQ25CbEIsRUFBQUEsUUFBUSxFQUFFbUIsc0JBQVVDLEdBREQ7QUFFbkJsQixFQUFBQSxRQUFRLEVBQUVpQixzQkFBVUUsS0FBVixDQUFnQjtBQUN4QmQsSUFBQUEsZUFBZSxFQUFFWSxzQkFBVUMsR0FESDtBQUV4QlYsSUFBQUEsd0JBQXdCLEVBQUVTLHNCQUFVQztBQUZaLEdBQWhCO0FBRlMsQ0FBckI7ZUFRZXRCLFEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IFJlYWN0LCB7IHVzZUNvbnRleHQsIHVzZU1lbW8sIHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnO1xuXG5pbXBvcnQgQ29udGV4dCBmcm9tICcuL0NvbnRleHQnO1xuaW1wb3J0IGNyZWF0ZVN5bnRoZXNpemUgZnJvbSAnLi9jcmVhdGVTeW50aGVzaXplJztcbmltcG9ydCBtaWdyYXRlRGVwcmVjYXRlZFByb3BzIGZyb20gJy4vbWlncmF0ZURlcHJlY2F0ZWRQcm9wcyc7XG5pbXBvcnQgdXNlRXZlbnQgZnJvbSAnLi91c2VFdmVudCc7XG5cbmNvbnN0IENvbXBvc2VyID0gcHJvcHMgPT4ge1xuICBjb25zdCB7IGNoaWxkcmVuLCBwb255ZmlsbDogcG9ueWZpbGxGcm9tUHJvcHMgfSA9IG1pZ3JhdGVEZXByZWNhdGVkUHJvcHMocHJvcHMsIENvbXBvc2VyKTtcblxuICAvLyBJZiB3ZSBoYXZlIHRoZSBwYXJlbnQgY29udGV4dCwgd2Ugd2lsbCB1c2UgdGhhdCBzeW50aGVzaXplKCkgZnVuY3Rpb24gYW5kIGl0cyBpbnRlcm5hbCBxdWV1ZS5cbiAgY29uc3QgeyBwb255ZmlsbDogcGFyZW50UG9ueWZpbGwsIHN5bnRoZXNpemU6IHBhcmVudFN5bnRoZXNpemUgfSA9IHVzZUNvbnRleHQoQ29udGV4dCkgfHwge307XG5cbiAgY29uc3QgcG9ueWZpbGwgPSBwb255ZmlsbEZyb21Qcm9wcyB8fCBwYXJlbnRQb255ZmlsbCB8fCB7XG4gICAgc3BlZWNoU3ludGhlc2lzOiB3aW5kb3cuc3BlZWNoU3ludGhlc2lzIHx8IHdpbmRvdy53ZWJraXRTcGVlY2hTeW50aGVzaXMsXG4gICAgU3BlZWNoU3ludGhlc2lzVXR0ZXJhbmNlOiB3aW5kb3cuU3BlZWNoU3ludGhlc2lzVXR0ZXJhbmNlIHx8IHdpbmRvdy53ZWJraXRTcGVlY2hTeW50aGVzaXNVdHRlcmFuY2UsXG4gIH07XG5cbiAgLy8gSWYgdGhlIHBhcmVudCBjb250ZXh0IGNoYW5nZWQgYW5kIG5vIGxvbmdlciBoYXMgYSBzeW50aGVzaXplKCkgZnVuY3Rpb24sIHdlIHdpbGwgY3JlYXRlIHRoZSBxdWV1ZS5cbiAgLy8gVGhpcyBpcyB2ZXJ5IHVubGlrZWx5IHRvIGhhcHBlbi5cbiAgY29uc3Qgc3ludGhlc2l6ZSA9IHVzZU1lbW8oKCkgPT4gcGFyZW50U3ludGhlc2l6ZSB8fCBjcmVhdGVTeW50aGVzaXplKCksIFtwYXJlbnRTeW50aGVzaXplXSk7XG4gIGNvbnN0IHsgc3BlZWNoU3ludGhlc2lzIH0gPSBwb255ZmlsbDtcbiAgY29uc3QgW3ZvaWNlcywgc2V0Vm9pY2VzXSA9IHVzZVN0YXRlKHNwZWVjaFN5bnRoZXNpcy5nZXRWb2ljZXMoKSk7XG5cbiAgdXNlRXZlbnQoc3BlZWNoU3ludGhlc2lzLCAndm9pY2VzY2hhbmdlZCcsICgpID0+IHNldFZvaWNlcyhzcGVlY2hTeW50aGVzaXMuZ2V0Vm9pY2VzKCkpKTtcblxuICBjb25zdCBjb250ZXh0ID0gdXNlTWVtbygoKSA9PiAoe1xuICAgIHBvbnlmaWxsLFxuICAgIHN5bnRoZXNpemUsXG4gICAgdm9pY2VzXG4gIH0pLCBbcG9ueWZpbGwsIHN5bnRoZXNpemUsIHZvaWNlc10pO1xuXG4gIHJldHVybiAoXG4gICAgPENvbnRleHQuUHJvdmlkZXIgdmFsdWU9eyBjb250ZXh0IH0+XG4gICAgICB7XG4gICAgICAgIHR5cGVvZiBjaGlsZHJlbiA9PT0gJ2Z1bmN0aW9uJyA/XG4gICAgICAgICAgPENvbnRleHQuQ29uc3VtZXI+XG4gICAgICAgICAgICB7IGNvbnRleHQgPT4gY2hpbGRyZW4oY29udGV4dCkgfVxuICAgICAgICAgIDwvQ29udGV4dC5Db25zdW1lcj5cbiAgICAgICAgOlxuICAgICAgICAgIGNoaWxkcmVuXG4gICAgICB9XG4gICAgPC9Db250ZXh0LlByb3ZpZGVyPlxuICApO1xufTtcblxuQ29tcG9zZXIuZGVmYXVsdFByb3BzID0ge1xuICBjaGlsZHJlbjogdW5kZWZpbmVkLFxuICBwb255ZmlsbDogdW5kZWZpbmVkXG59O1xuXG5Db21wb3Nlci5wcm9wVHlwZXMgPSB7XG4gIGNoaWxkcmVuOiBQcm9wVHlwZXMuYW55LFxuICBwb255ZmlsbDogUHJvcFR5cGVzLnNoYXBlKHtcbiAgICBzcGVlY2hTeW50aGVzaXM6IFByb3BUeXBlcy5hbnksXG4gICAgU3BlZWNoU3ludGhlc2lzVXR0ZXJhbmNlOiBQcm9wVHlwZXMuYW55XG4gIH0pXG59O1xuXG5leHBvcnQgZGVmYXVsdCBDb21wb3NlcjtcbiJdfQ==