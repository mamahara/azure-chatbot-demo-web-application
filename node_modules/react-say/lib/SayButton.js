"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireWildcard(require("react"));

var _migrateDeprecatedProps = _interopRequireDefault(require("./migrateDeprecatedProps"));

var _Say = _interopRequireDefault(require("./Say"));

var SayButton = function SayButton(props) {
  var _migrateDeprecatedPro = (0, _migrateDeprecatedProps["default"])(props, SayButton),
      children = _migrateDeprecatedPro.children,
      disabled = _migrateDeprecatedPro.disabled,
      lang = _migrateDeprecatedPro.lang,
      onBoundary = _migrateDeprecatedPro.onBoundary,
      _onEnd = _migrateDeprecatedPro.onEnd,
      onError = _migrateDeprecatedPro.onError,
      onStart = _migrateDeprecatedPro.onStart,
      pitch = _migrateDeprecatedPro.pitch,
      ponyfill = _migrateDeprecatedPro.ponyfill,
      rate = _migrateDeprecatedPro.rate,
      text = _migrateDeprecatedPro.text,
      voice = _migrateDeprecatedPro.voice,
      volume = _migrateDeprecatedPro.volume;

  var _useState = (0, _react.useState)(false),
      _useState2 = (0, _slicedToArray2["default"])(_useState, 2),
      busy = _useState2[0],
      setBusy = _useState2[1];

  var handleClick = (0, _react.useCallback)(function () {
    return setBusy(true);
  });
  var sayProps = {
    lang: lang,
    onBoundary: onBoundary,
    onEnd: function onEnd(event) {
      setBusy(false);
      _onEnd && _onEnd(event);
    },
    onError: onError,
    onStart: onStart,
    pitch: pitch,
    ponyfill: ponyfill,
    rate: rate,
    text: text,
    voice: voice,
    volume: volume
  };
  return _react["default"].createElement(_react["default"].Fragment, null, _react["default"].createElement("button", {
    disabled: typeof disabled === 'boolean' ? disabled : busy,
    onClick: handleClick
  }, children), busy && _react["default"].createElement(_Say["default"], sayProps));
};

SayButton.defaultProps = {
  children: undefined,
  disabled: undefined,
  lang: undefined,
  onBoundary: undefined,
  onEnd: undefined,
  onError: undefined,
  onStart: undefined,
  pitch: undefined,
  ponyfill: undefined,
  rate: undefined,
  text: undefined,
  voice: undefined,
  volume: undefined
};
SayButton.propTypes = {
  children: _propTypes["default"].any,
  disabled: _propTypes["default"].bool,
  lang: _propTypes["default"].string,
  onBoundary: _propTypes["default"].func,
  onEnd: _propTypes["default"].func,
  onError: _propTypes["default"].func,
  onStart: _propTypes["default"].func,
  pitch: _propTypes["default"].number,
  ponyfill: _propTypes["default"].shape({
    speechSynthesis: _propTypes["default"].any.isRequired,
    SpeechSynthesisUtterance: _propTypes["default"].any.isRequired
  }),
  rate: _propTypes["default"].number,
  text: _propTypes["default"].string,
  voice: _propTypes["default"].oneOfType([_propTypes["default"].any, _propTypes["default"].func]),
  volume: _propTypes["default"].number
};
var _default = SayButton;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9TYXlCdXR0b24uanMiXSwibmFtZXMiOlsiU2F5QnV0dG9uIiwicHJvcHMiLCJjaGlsZHJlbiIsImRpc2FibGVkIiwibGFuZyIsIm9uQm91bmRhcnkiLCJvbkVuZCIsIm9uRXJyb3IiLCJvblN0YXJ0IiwicGl0Y2giLCJwb255ZmlsbCIsInJhdGUiLCJ0ZXh0Iiwidm9pY2UiLCJ2b2x1bWUiLCJidXN5Iiwic2V0QnVzeSIsImhhbmRsZUNsaWNrIiwic2F5UHJvcHMiLCJldmVudCIsImRlZmF1bHRQcm9wcyIsInVuZGVmaW5lZCIsInByb3BUeXBlcyIsIlByb3BUeXBlcyIsImFueSIsImJvb2wiLCJzdHJpbmciLCJmdW5jIiwibnVtYmVyIiwic2hhcGUiLCJzcGVlY2hTeW50aGVzaXMiLCJpc1JlcXVpcmVkIiwiU3BlZWNoU3ludGhlc2lzVXR0ZXJhbmNlIiwib25lT2ZUeXBlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBRUE7O0FBQ0E7O0FBRUEsSUFBTUEsU0FBUyxHQUFHLFNBQVpBLFNBQVksQ0FBQUMsS0FBSyxFQUFJO0FBQUEsOEJBZXJCLHdDQUF1QkEsS0FBdkIsRUFBOEJELFNBQTlCLENBZnFCO0FBQUEsTUFFdkJFLFFBRnVCLHlCQUV2QkEsUUFGdUI7QUFBQSxNQUd2QkMsUUFIdUIseUJBR3ZCQSxRQUh1QjtBQUFBLE1BSXZCQyxJQUp1Qix5QkFJdkJBLElBSnVCO0FBQUEsTUFLdkJDLFVBTHVCLHlCQUt2QkEsVUFMdUI7QUFBQSxNQU12QkMsTUFOdUIseUJBTXZCQSxLQU51QjtBQUFBLE1BT3ZCQyxPQVB1Qix5QkFPdkJBLE9BUHVCO0FBQUEsTUFRdkJDLE9BUnVCLHlCQVF2QkEsT0FSdUI7QUFBQSxNQVN2QkMsS0FUdUIseUJBU3ZCQSxLQVR1QjtBQUFBLE1BVXZCQyxRQVZ1Qix5QkFVdkJBLFFBVnVCO0FBQUEsTUFXdkJDLElBWHVCLHlCQVd2QkEsSUFYdUI7QUFBQSxNQVl2QkMsSUFadUIseUJBWXZC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QkFBVUssTUFiSTtBQWNwQmhCLEVBQUFBLElBQUksRUFBRVcsc0JBQVVHLE1BZEk7QUFlcEJiLEVBQUFBLEtBQUssRUFBRVUsc0JBQVVVLFNBQVYsQ0FBb0IsQ0FBQ1Ysc0JBQVVDLEdBQVgsRUFBZ0JELHNCQUFVSSxJQUExQixDQUFwQixDQWZhO0FBZ0JwQmIsRUFBQUEsTUFBTSxFQUFFUyxzQkFBVUs7QUFoQkUsQ0FBdEI7ZUFtQmU1QixTIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBSZWFjdCwgeyB1c2VDYWxsYmFjaywgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCBtaWdyYXRlRGVwcmVjYXRlZFByb3BzIGZyb20gJy4vbWlncmF0ZURlcHJlY2F0ZWRQcm9wcyc7XG5pbXBvcnQgU2F5IGZyb20gJy4vU2F5JztcblxuY29uc3QgU2F5QnV0dG9uID0gcHJvcHMgPT4ge1xuICBjb25zdCB7XG4gICAgY2hpbGRyZW4sXG4gICAgZGlzYWJsZWQsXG4gICAgbGFuZyxcbiAgICBvbkJvdW5kYXJ5LFxuICAgIG9uRW5kLFxuICAgIG9uRXJyb3IsXG4gICAgb25TdGFydCxcbiAgICBwaXRjaCxcbiAgICBwb255ZmlsbCxcbiAgICByYXRlLFxuICAgIHRleHQsXG4gICAgdm9pY2UsXG4gICAgdm9sdW1lXG4gIH0gPSBtaWdyYXRlRGVwcmVjYXRlZFByb3BzKHByb3BzLCBTYXlCdXR0b24pO1xuXG4gIGNvbnN0IFtidXN5LCBzZXRCdXN5XSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgY29uc3QgaGFuZGxlQ2xpY2sgPSB1c2VDYWxsYmFjaygoKSA9PiBzZXRCdXN5KHRydWUpKTtcbiAgY29uc3Qgc2F5UHJvcHMgPSB7XG4gICAgbGFuZyxcbiAgICBvbkJvdW5kYXJ5LFxuICAgIG9uRW5kOiBldmVudCA9PiB7XG4gICAgICBzZXRCdXN5KGZhbHNlKTtcbiAgICAgIG9uRW5kICYmIG9uRW5kKGV2ZW50KTtcbiAgICB9LFxuICAgIG9uRXJyb3IsXG4gICAgb25TdGFydCxcbiAgICBwaXRjaCxcbiAgICBwb255ZmlsbCxcbiAgICByYXRlLFxuICAgIHRleHQsXG4gICAgdm9pY2UsXG4gICAgdm9sdW1lXG4gIH07XG5cbiAgcmV0dXJuIChcbiAgICA8UmVhY3QuRnJhZ21lbnQ+XG4gICAgICA8YnV0dG9uXG4gICAgICAgIGRpc2FibGVkPXsgdHlwZW9mIGRpc2FibGVkID09PSAnYm9vbGVhbicgPyBkaXNhYmxlZCA6IGJ1c3kgfVxuICAgICAgICBvbkNsaWNrPXsgaGFuZGxlQ2xpY2sgfVxuICAgICAgPlxuICAgICAgICB7IGNoaWxkcmVuIH1cbiAgICAgIDwvYnV0dG9uPlxuICAgICAgeyBidXN5ICYmIDxTYXkgeyAuLi5zYXlQcm9wcyB9IC8+IH1cbiAgICA8L1JlYWN0LkZyYWdtZW50PlxuICApO1xufTtcblxuU2F5QnV0dG9uLmRlZmF1bHRQcm9wcyA9IHtcbiAgY2hpbGRyZW46IHVuZGVmaW5lZCxcbiAgZGlzYWJsZWQ6IHVuZGVmaW5lZCxcbiAgbGFuZzogdW5kZWZpbmVkLFxuICBvbkJvdW5kYXJ5OiB1bmRlZmluZWQsXG4gIG9uRW5kOiB1bmRlZmluZWQsXG4gIG9uRXJyb3I6IHVuZGVmaW5lZCxcbiAgb25TdGFydDogdW5kZWZpbmVkLFxuICBwaXRjaDogdW5kZWZpbmVkLFxuICBwb255ZmlsbDogdW5kZWZpbmVkLFxuICByYXRlOiB1bmRlZmluZWQsXG4gIHRleHQ6IHVuZGVmaW5lZCxcbiAgdm9pY2U6IHVuZGVmaW5lZCxcbiAgdm9sdW1lOiB1bmRlZmluZWRcbn07XG5cblNheUJ1dHRvbi5wcm9wVHlwZXMgPSB7XG4gIGNoaWxkcmVuOiBQcm9wVHlwZXMuYW55LFxuICBkaXNhYmxlZDogUHJvcFR5cGVzLmJvb2wsXG4gIGxhbmc6IFByb3BUeXBlcy5zdHJpbmcsXG4gIG9uQm91bmRhcnk6IFByb3BUeXBlcy5mdW5jLFxuICBvbkVuZDogUHJvcFR5cGVzLmZ1bmMsXG4gIG9uRXJyb3I6IFByb3BUeXBlcy5mdW5jLFxuICBvblN0YXJ0OiBQcm9wVHlwZXMuZnVuYyxcbiAgcGl0Y2g6IFByb3BUeXBlcy5udW1iZXIsXG4gIHBvbnlmaWxsOiBQcm9wVHlwZXMuc2hhcGUoe1xuICAgIHNwZWVjaFN5bnRoZXNpczogUHJvcFR5cGVzLmFueS5pc1JlcXVpcmVkLFxuICAgIFNwZWVjaFN5bnRoZXNpc1V0dGVyYW5jZTogUHJvcFR5cGVzLmFueS5pc1JlcXVpcmVkXG4gIH0pLFxuICByYXRlOiBQcm9wVHlwZXMubnVtYmVyLFxuICB0ZXh0OiBQcm9wVHlwZXMuc3RyaW5nLFxuICB2b2ljZTogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLmFueSwgUHJvcFR5cGVzLmZ1bmNdKSxcbiAgdm9sdW1lOiBQcm9wVHlwZXMubnVtYmVyXG59O1xuXG5leHBvcnQgZGVmYXVsdCBTYXlCdXR0b25cbiJdfQ==