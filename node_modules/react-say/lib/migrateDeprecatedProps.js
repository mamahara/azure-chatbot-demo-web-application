"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = migrateDeprecatedProps;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _Say = _interopRequireDefault(require("./Say"));

var _SayButton = _interopRequireDefault(require("./SayButton"));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var warnings = {
  ponyfill: true,
  saySpeak: true
};

function migrateDeprecatedProps(_ref, componentType) {
  var ponyfill = _ref.ponyfill,
      speak = _ref.speak,
      speechSynthesis = _ref.speechSynthesis,
      speechSynthesisUtterance = _ref.speechSynthesisUtterance,
      text = _ref.text,
      otherProps = (0, _objectWithoutProperties2["default"])(_ref, ["ponyfill", "speak", "speechSynthesis", "speechSynthesisUtterance", "text"]);

  if (!ponyfill && (speechSynthesis || speechSynthesisUtterance)) {
    if (warnings.ponyfill) {
      console.warn('react-say: "speechSynthesis" and "speechSynthesisUtterance" props has been renamed to "ponyfill". Please update your code. The deprecated props will be removed in version >= 3.0.0.');
      warnings.ponyfill = false;
    }

    ponyfill = {
      speechSynthesis: speechSynthesis,
      SpeechSynthesisUtterance: speechSynthesisUtterance
    };
  }

  if (componentType === _Say["default"] || componentType === _SayButton["default"]) {
    if (speak && !text) {
      if (warnings.saySpeak) {
        console.warn('react-say: "speak" prop has been renamed to "text". Please update your code. The deprecated props will be removed in version >= 3.0.0.');
        warnings.saySpeak = false;
      }

      text = speak;
    }
  }

  return _objectSpread({
    ponyfill: ponyfill,
    text: text
  }, otherProps);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9taWdyYXRlRGVwcmVjYXRlZFByb3BzLmpzIl0sIm5hbWVzIjpbIndhcm5pbmdzIiwicG9ueWZpbGwiLCJzYXlTcGVhayIsIm1pZ3JhdGVEZXByZWNhdGVkUHJvcHMiLCJjb21wb25lbnRUeXBlIiwic3BlYWsiLCJzcGVlY2hTeW50aGVzaXMiLCJzcGVlY2hTeW50aGVzaXNVdHRlcmFuY2UiLCJ0ZXh0Iiwib3RoZXJQcm9wcyIsImNvbnNvbGUiLCJ3YXJuIiwiU3BlZWNoU3ludGhlc2lzVXR0ZXJhbmNlIiwiU2F5IiwiU2F5QnV0dG9uIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQUE7O0FBQ0E7Ozs7OztBQUVBLElBQU1BLFFBQVEsR0FBRztBQUNmQyxFQUFBQSxRQUFRLEVBQUUsSUFESztBQUVmQyxFQUFBQSxRQUFRLEVBQUU7QUFGSyxDQUFqQjs7QUFLZSxTQUFTQyxzQkFBVCxPQVNiQyxhQVRhLEVBVWI7QUFBQSxNQVJFSCxRQVFGLFFBUkVBLFFBUUY7QUFBQSxNQVBFSSxLQU9GLFFBUEVBLEtBT0Y7QUFBQSxNQU5FQyxlQU1GLFFBTkVBLGVBTUY7QUFBQSxNQUxFQyx3QkFLRixRQUxFQSx3QkFLRjtBQUFBLE1BSkVDLElBSUYsUUFKRUEsSUFJRjtBQUFBLE1BSEtDLFVBR0w7O0FBQ0EsTUFDRSxDQUFDUixRQUFELEtBQ0lLLGVBQWUsSUFBSUMsd0JBRHZCLENBREYsRUFHRTtBQUNBLFFBQUlQLFFBQVEsQ0FBQ0MsUUFBYixFQUF1QjtBQUNyQlMsTUFBQUEsT0FBTyxDQUFDQyxJQUFSLENBQWEsc0xBQWI7QUFFQVgsTUFBQUEsUUFBUSxDQUFDQyxRQUFULEdBQW9CLEtBQXBCO0FBQ0Q7O0FBRURBLElBQUFBLFFBQVEsR0FBRztBQUNUSyxNQUFBQSxlQUFlLEVBQWZBLGVBRFM7QUFFVE0sTUFBQUEsd0JBQXdCLEVBQUVMO0FBRmpCLEtBQVg7QUFJRDs7QUFFRCxNQUFJSCxhQUFhLEtBQUtTLGVBQWxCLElBQXlCVCxhQUFhLEtBQUtVLHFCQUEvQyxFQUEwRDtBQUN4RCxRQUFJVCxLQUFLLElBQUksQ0FBQ0csSUFBZCxFQUFvQjtBQUNsQixVQUFJUixRQUFRLENBQUNFLFFBQWIsRUFBdUI7QUFDckJRLFFBQUFBLE9BQU8sQ0FBQ0MsSUFBUixDQUFhLHdJQUFiO0FBRUFYLFFBQUFBLFFBQVEsQ0FBQ0UsUUFBVCxHQUFvQixLQUFwQjtBQUNEOztBQUVETSxNQUFBQSxJQUFJLEdBQUdILEtBQVA7QUFDRDtBQUNGOztBQUVEO0FBQ0VKLElBQUFBLFFBQVEsRUFBUkEsUUFERjtBQUVFTyxJQUFBQSxJQUFJLEVBQUpBO0FBRkYsS0FHS0MsVUFITDtBQUtEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFNheSBmcm9tICcuL1NheSc7XG5pbXBvcnQgU2F5QnV0dG9uIGZyb20gJy4vU2F5QnV0dG9uJztcblxuY29uc3Qgd2FybmluZ3MgPSB7XG4gIHBvbnlmaWxsOiB0cnVlLFxuICBzYXlTcGVhazogdHJ1ZVxufTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gbWlncmF0ZURlcHJlY2F0ZWRQcm9wcyhcbiAge1xuICAgIHBvbnlmaWxsLFxuICAgIHNwZWFrLFxuICAgIHNwZWVjaFN5bnRoZXNpcyxcbiAgICBzcGVlY2hTeW50aGVzaXNVdHRlcmFuY2UsXG4gICAgdGV4dCxcbiAgICAuLi5vdGhlclByb3BzXG4gIH0sXG4gIGNvbXBvbmVudFR5cGVcbikge1xuICBpZiAoXG4gICAgIXBvbnlmaWxsXG4gICAgJiYgKHNwZWVjaFN5bnRoZXNpcyB8fCBzcGVlY2hTeW50aGVzaXNVdHRlcmFuY2UpXG4gICkge1xuICAgIGlmICh3YXJuaW5ncy5wb255ZmlsbCkge1xuICAgICAgY29uc29sZS53YXJuKCdyZWFjdC1zYXk6IFwic3BlZWNoU3ludGhlc2lzXCIgYW5kIFwic3BlZWNoU3ludGhlc2lzVXR0ZXJhbmNlXCIgcHJvcHMgaGFzIGJlZW4gcmVuYW1lZCB0byBcInBvbnlmaWxsXCIuIFBsZWFzZSB1cGRhdGUgeW91ciBjb2RlLiBUaGUgZGVwcmVjYXRlZCBwcm9wcyB3aWxsIGJlIHJlbW92ZWQgaW4gdmVyc2lvbiA+PSAzLjAuMC4nKTtcblxuICAgICAgd2FybmluZ3MucG9ueWZpbGwgPSBmYWxzZTtcbiAgICB9XG5cbiAgICBwb255ZmlsbCA9IHtcbiAgICAgIHNwZWVjaFN5bnRoZXNpcyxcbiAgICAgIFNwZWVjaFN5bnRoZXNpc1V0dGVyYW5jZTogc3BlZWNoU3ludGhlc2lzVXR0ZXJhbmNlXG4gICAgfTtcbiAgfVxuXG4gIGlmIChjb21wb25lbnRUeXBlID09PSBTYXkgfHwgY29tcG9uZW50VHlwZSA9PT0gU2F5QnV0dG9uKSB7XG4gICAgaWYgKHNwZWFrICYmICF0ZXh0KSB7XG4gICAgICBpZiAod2FybmluZ3Muc2F5U3BlYWspIHtcbiAgICAgICAgY29uc29sZS53YXJuKCdyZWFjdC1zYXk6IFwic3BlYWtcIiBwcm9wIGhhcyBiZWVuIHJlbmFtZWQgdG8gXCJ0ZXh0XCIuIFBsZWFzZSB1cGRhdGUgeW91ciBjb2RlLiBUaGUgZGVwcmVjYXRlZCBwcm9wcyB3aWxsIGJlIHJlbW92ZWQgaW4gdmVyc2lvbiA+PSAzLjAuMC4nKTtcblxuICAgICAgICB3YXJuaW5ncy5zYXlTcGVhayA9IGZhbHNlO1xuICAgICAgfVxuXG4gICAgICB0ZXh0ID0gc3BlYWs7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBwb255ZmlsbCxcbiAgICB0ZXh0LFxuICAgIC4uLm90aGVyUHJvcHNcbiAgfTtcbn1cbiJdfQ==