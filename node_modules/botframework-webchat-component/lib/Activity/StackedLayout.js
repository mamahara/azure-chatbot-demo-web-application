"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.connectStackedLayout = exports.default = void 0;

var _glamor = require("glamor");

var _classnames = _interopRequireDefault(require("classnames"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _Bubble = _interopRequireDefault(require("./Bubble"));

var _connectToWebChat = _interopRequireDefault(require("../connectToWebChat"));

var _isZeroOrPositive = _interopRequireDefault(require("../Utils/isZeroOrPositive"));

var _ScreenReaderText = _interopRequireDefault(require("../ScreenReaderText"));

var _textFormatToContentType = _interopRequireDefault(require("../Utils/textFormatToContentType"));

var _useAvatarForBot3 = _interopRequireDefault(require("../hooks/useAvatarForBot"));

var _useAvatarForUser3 = _interopRequireDefault(require("../hooks/useAvatarForUser"));

var _useLocalizer = _interopRequireDefault(require("../hooks/useLocalizer"));

var _useStyleOptions3 = _interopRequireDefault(require("../hooks/useStyleOptions"));

var _useStyleSet3 = _interopRequireDefault(require("../hooks/useStyleSet"));

var _useUniqueId = _interopRequireDefault(require("../hooks/internal/useUniqueId"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var ROOT_CSS = (0, _glamor.css)({
  '&.webchat__stacked-layout': {
    position: 'relative',
    // This is to keep screen reader text in the destinated area.
    '& .webchat__stacked-layout__attachment-row, & .webchat__stacked-layout__main, & .webchat__stacked-layout__message-row, & .webchat__stacked-layout__status': {
      display: 'flex'
    },
    '& .webchat__stacked-layout__alignment-pad': {
      flexShrink: 0
    },
    '& .webchat__stacked-layout__attachment': {
      width: '100%'
    },
    '& .webchat__stacked-layout__avatar-gutter': {
      display: 'flex',
      flexDirection: 'column',
      flexShrink: 0
    },
    '&.webchat__stacked-layout--from-user': {
      '& .webchat__stacked-layout__attachment-row, & .webchat__stacked-layout__main, & .webchat__stacked-layout__message-row, & .webchat__stacked-layout__status': {
        flexDirection: 'row-reverse'
      }
    },
    '& .webchat__stacked-layout__content': {
      flex: 1,
      // This is for bottom aligning an avatar with a message bubble shorter than the avatar.
      // Related to the test at activityGrouping.avatarMiddleware.atBottom.js.
      display: 'flex',
      flexDirection: 'column',
      // This "overflow: hidden" is to make sure text overflow we get clipped correctly.
      // Related to the test at basic.js "long URLs with keep-all".
      overflow: 'hidden'
    },
    '& .webchat__stacked-layout__nub-pad': {
      flexShrink: 0
    }
  }
});

var connectStackedLayout = function connectStackedLayout() {
  for (var _len = arguments.length, selectors = new Array(_len), _key = 0; _key < _len; _key++) {
    selectors[_key] = arguments[_key];
  }

  return _connectToWebChat.default.apply(void 0, [function (_ref, _ref2) {
    var language = _ref.language,
        _ref$styleSet$options = _ref.styleSet.options,
        botAvatarInitials = _ref$styleSet$options.botAvatarInitials,
        userAvatarInitials = _ref$styleSet$options.userAvatarInitials;
    var _ref2$activity = _ref2.activity;
    _ref2$activity = _ref2$activity === void 0 ? {} : _ref2$activity;
    var _ref2$activity$from = _ref2$activity.from;
    _ref2$activity$from = _ref2$activity$from === void 0 ? {} : _ref2$activity$from;
    var role = _ref2$activity$from.role;
    return {
      avatarInitials: role === 'user' ? userAvatarInitials : botAvatarInitials,
      language: language,
      // TODO: [P4] We want to deprecate botAvatarInitials/userAvatarInitials because they are not as helpful as avatarInitials
      botAvatarInitials: botAvatarInitials,
      userAvatarInitials: userAvatarInitials
    };
  }].concat(selectors));
};

exports.connectStackedLayout = connectStackedLayout;

var StackedLayout = function StackedLayout(_ref3) {
  var activity = _ref3.activity,
      hideTimestamp = _ref3.hideTimestamp,
      renderActivityStatus = _ref3.renderActivityStatus,
      renderAttachment = _ref3.renderAttachment,
      renderAvatar = _ref3.renderAvatar,
      showCallout = _ref3.showCallout;

  var _useStyleOptions = (0, _useStyleOptions3.default)(),
      _useStyleOptions2 = _slicedToArray(_useStyleOptions, 1),
      _useStyleOptions2$ = _useStyleOptions2[0],
      bubbleNubOffset = _useStyleOptions2$.bubbleNubOffset,
      bubbleNubSize = _useStyleOptions2$.bubbleNubSize,
      bubbleFromUserNubOffset = _useStyleOptions2$.bubbleFromUserNubOffset,
      bubbleFromUserNubSize = _useStyleOptions2$.bubbleFromUserNubSize;

  var _useAvatarForBot = (0, _useAvatarForBot3.default)(),
      _useAvatarForBot2 = _slicedToArray(_useAvatarForBot, 1),
      botInitials = _useAvatarForBot2[0].initials;

  var _useAvatarForUser = (0, _useAvatarForUser3.default)(),
      _useAvatarForUser2 = _slicedToArray(_useAvatarForUser, 1),
      userInitials = _useAvatarForUser2[0].initials;

  var _useStyleSet = (0, _useStyleSet3.default)(),
      _useStyleSet2 = _slicedToArray(_useStyleSet, 1),
      stackedLayoutStyleSet = _useStyleSet2[0].stackedLayout;

  var ariaLabelId = (0, _useUniqueId.default)('webchat__stacked-layout__id');
  var localize = (0, _useLocalizer.default)();
  var showActivityStatus = typeof renderActivityStatus === 'function';
  var _activity$attachments = activity.attachments,
      attachments = _activity$attachments === void 0 ? [] : _activity$attachments,
      _activity$channelData = activity.channelData;
  _activity$channelData = _activity$channelData === void 0 ? {} : _activity$channelData;
  var _activity$channelData2 = _activity$channelData.messageBack;
  _activity$channelData2 = _activity$channelData2 === void 0 ? {} : _activity$channelData2;
  var messageBackDisplayText = _activity$channelData2.displayText,
      _activity$from = activity.from;
  _activity$from = _activity$from === void 0 ? {} : _activity$from;
  var role = _activity$from.role,
      text = activity.text,
      textFormat = activity.textFormat;
  var activityDisplayText = messageBackDisplayText || text;
  var fromUser = role === 'user';
  var attachedAlt = localize(fromUser ? 'ACTIVITY_YOU_ATTACHED_ALT' : 'ACTIVITY_BOT_ATTACHED_ALT');
  var greetingAlt = (fromUser ? localize('ACTIVITY_YOU_SAID_ALT') : localize('ACTIVITY_BOT_SAID_ALT', botInitials || '')).replace(/[\t-\r \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000\uFEFF]{2,}/g, ' ');
  var initials = fromUser ? userInitials : botInitials;
  var nubOffset = fromUser ? bubbleFromUserNubOffset : bubbleNubOffset;
  var nubSize = fromUser ? bubbleFromUserNubSize : bubbleNubSize;
  var otherInitials = fromUser ? botInitials : userInitials;
  var otherNubSize = fromUser ? bubbleNubSize : bubbleFromUserNubSize;
  var hasAvatar = initials || typeof initials === 'string';
  var hasOtherAvatar = otherInitials || typeof otherInitials === 'string';
  var hasNub = typeof nubSize === 'number';
  var hasOtherNub = typeof otherNubSize === 'number';
  var topAlignedCallout = (0, _isZeroOrPositive.default)(nubOffset);
  var extraTrailing = !hasOtherAvatar && hasOtherNub; // This is for bot message with user nub and no user avatar. And vice versa.

  var showAvatar = showCallout && hasAvatar && !!renderAvatar;
  var showNub = showCallout && hasNub && (topAlignedCallout || !attachments.length);
  return /*#__PURE__*/_react.default.createElement("div", {
    "aria-labelledby": ariaLabelId,
    "aria-roledescription": "activity",
    className: (0, _classnames.default)('webchat__stacked-layout', ROOT_CSS + '', stackedLayoutStyleSet + '', {
      'webchat__stacked-layout--extra-trailing': extraTrailing,
      'webchat__stacked-layout--from-user': fromUser,
      'webchat__stacked-layout--hide-avatar': hasAvatar && !showAvatar,
      'webchat__stacked-layout--hide-nub': hasNub && !showNub,
      'webchat__stacked-layout--no-message': !activityDisplayText,
      'webchat__stacked-layout--show-avatar': showAvatar,
      'webchat__stacked-layout--show-nub': showNub,
      'webchat__stacked-layout--top-callout': topAlignedCallout
    }),
    role: "group"
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "webchat__stacked-layout__main"
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "webchat__stacked-layout__avatar-gutter"
  }, showAvatar && renderAvatar({
    activity: activity
  })), /*#__PURE__*/_react.default.createElement("div", {
    className: "webchat__stacked-layout__content"
  }, !!activityDisplayText && /*#__PURE__*/_react.default.createElement("div", {
    "aria-roledescription": "message",
    className: "webchat__stacked-layout__message-row" // Disable "Prop `id` is forbidden on DOM Nodes" rule because we are using the ID prop for accessibility.

    /* eslint-disable-next-line react/forbid-dom-props */
    ,
    id: ariaLabelId
  }, /*#__PURE__*/_react.default.createElement(_ScreenReaderText.default, {
    text: greetingAlt
  }), /*#__PURE__*/_react.default.createElement(_Bubble.default, {
    className: "webchat__stacked-layout__message",
    fromUser: fromUser,
    nub: showNub || (hasAvatar || hasNub) && 'hidden'
  }, renderAttachment({
    activity: activity,
    attachment: {
      content: activityDisplayText,
      contentType: (0, _textFormatToContentType.default)(textFormat)
    }
  }))), attachments.map(function (attachment, index) {
    return /*#__PURE__*/_react.default.createElement("div", {
      "aria-roledescription": "attachment",
      className: (0, _classnames.default)('webchat__stacked-layout__attachment-row', {
        'webchat__stacked-layout__attachment-row--first': !index
      })
      /* attachments do not have an ID, it is always indexed by number */

      /* eslint-disable-next-line react/no-array-index-key */
      ,
      key: index
    }, /*#__PURE__*/_react.default.createElement(_ScreenReaderText.default, {
      text: attachedAlt
    }), /*#__PURE__*/_react.default.createElement(_Bubble.default, {
      className: "webchat__stacked-layout__attachment",
      fromUser: fromUser
      /* eslint-disable-next-line react/no-array-index-key */
      ,
      key: index,
      nub: (hasAvatar || hasNub) && 'hidden'
    }, renderAttachment({
      activity: activity,
      attachment: attachment
    })));
  })), /*#__PURE__*/_react.default.createElement("div", {
    className: "webchat__stacked-layout__alignment-pad"
  })), showActivityStatus && /*#__PURE__*/_react.default.createElement("div", {
    className: "webchat__stacked-layout__status"
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "webchat__stacked-layout__avatar-gutter"
  }), /*#__PURE__*/_react.default.createElement("div", {
    className: "webchat__stacked-layout__nub-pad"
  }), renderActivityStatus({
    hideTimestamp: hideTimestamp
  }), /*#__PURE__*/_react.default.createElement("div", {
    className: "webchat__stacked-layout__alignment-pad"
  })));
};

StackedLayout.defaultProps = {
  hideTimestamp: false,
  renderActivityStatus: false,
  renderAvatar: false,
  showCallout: true
};
StackedLayout.propTypes = {
  activity: _propTypes.default.shape({
    attachments: _propTypes.default.array,
    channelData: _propTypes.default.shape({
      messageBack: _propTypes.default.shape({
        displayText: _propTypes.default.string
      })
    }),
    from: _propTypes.default.shape({
      role: _propTypes.default.string.isRequired
    }).isRequired,
    text: _propTypes.default.string,
    textFormat: _propTypes.default.string,
    timestamp: _propTypes.default.string,
    type: _propTypes.default.string.isRequired
  }).isRequired,
  hideTimestamp: _propTypes.default.bool,
  renderActivityStatus: _propTypes.default.oneOfType([_propTypes.default.oneOf([false]), _propTypes.default.func]),
  renderAttachment: _propTypes.default.func.isRequired,
  renderAvatar: _propTypes.default.oneOfType([_propTypes.default.oneOf([false]), _propTypes.default.func]),
  showCallout: _propTypes.default.bool
};
var _default = StackedLayout;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9BY3Rpdml0eS9TdGFja2VkTGF5b3V0LmpzIl0sIm5hbWVzIjpbIlJPT1RfQ1NTIiwicG9zaXRpb24iLCJkaXNwbGF5IiwiZmxleFNocmluayIsIndpZHRoIiwiZmxleERpcmVjdGlvbiIsImZsZXgiLCJvdmVyZmxvdyIsImNvbm5lY3RTdGFja2VkTGF5b3V0Iiwic2VsZWN0b3JzIiwiY29ubmVjdFRvV2ViQ2hhdCIsImxhbmd1YWdlIiwic3R5bGVTZXQiLCJvcHRpb25zIiwiYm90QXZhdGFySW5pdGlhbHMiLCJ1c2VyQXZhdGFySW5pdGlhbHMiLCJhY3Rpdml0eSIsImZyb20iLCJyb2xlIiwiYXZhdGFySW5pdGlhbHMiLCJTdGFja2VkTGF5b3V0IiwiaGlkZVRpbWVzdGFtcCIsInJlbmRlckFjdGl2aXR5U3RhdHVzIiwicmVuZGVyQXR0YWNobWVudCIsInJlbmRlckF2YXRhciIsInNob3dDYWxsb3V0IiwiYnViYmxlTnViT2Zmc2V0IiwiYnViYmxlTnViU2l6ZSIsImJ1YmJsZUZyb21Vc2VyTnViT2Zmc2V0IiwiYnViYmxlRnJvbVVzZXJOdWJTaXplIiwiYm90SW5pdGlhbHMiLCJpbml0aWFscyIsInVzZXJJbml0aWFscyIsInN0YWNrZWRMYXlvdXRTdHlsZVNldCIsInN0YWNrZWRMYXlvdXQiLCJhcmlhTGFiZWxJZCIsImxvY2FsaXplIiwic2hvd0FjdGl2aXR5U3RhdHVzIiwiYXR0YWNobWVudHMiLCJjaGFubmVsRGF0YSIsIm1lc3NhZ2VCYWNrIiwibWVzc2FnZUJhY2tEaXNwbGF5VGV4dCIsImRpc3BsYXlUZXh0IiwidGV4dCIsInRleHRGb3JtYXQiLCJhY3Rpdml0eURpc3BsYXlUZXh0IiwiZnJvbVVzZXIiLCJhdHRhY2hlZEFsdCIsImdyZWV0aW5nQWx0IiwicmVwbGFjZSIsIm51Yk9mZnNldCIsIm51YlNpemUiLCJvdGhlckluaXRpYWxzIiwib3RoZXJOdWJTaXplIiwiaGFzQXZhdGFyIiwiaGFzT3RoZXJBdmF0YXIiLCJoYXNOdWIiLCJoYXNPdGhlck51YiIsInRvcEFsaWduZWRDYWxsb3V0IiwiZXh0cmFUcmFpbGluZyIsInNob3dBdmF0YXIiLCJzaG93TnViIiwibGVuZ3RoIiwiYXR0YWNobWVudCIsImNvbnRlbnQiLCJjb250ZW50VHlwZSIsIm1hcCIsImluZGV4IiwiZGVmYXVsdFByb3BzIiwicHJvcFR5cGVzIiwiUHJvcFR5cGVzIiwic2hhcGUiLCJhcnJheSIsInN0cmluZyIsImlzUmVxdWlyZWQiLCJ0aW1lc3RhbXAiLCJ0eXBlIiwiYm9vbCIsIm9uZU9mVHlwZSIsIm9uZU9mIiwiZnVuYyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUVBOztBQUNBOztBQUNBOztBQUNBOztBQUVBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOzs7Ozs7Ozs7Ozs7Ozs7O0FBRUEsSUFBTUEsUUFBUSxHQUFHLGlCQUFJO0FBQ25CLCtCQUE2QjtBQUMzQkMsSUFBQUEsUUFBUSxFQUFFLFVBRGlCO0FBQ0w7QUFFdEIsaUtBQTZKO0FBQzNKQyxNQUFBQSxPQUFPLEVBQUU7QUFEa0osS0FIbEk7QUFPM0IsaURBQTZDO0FBQzNDQyxNQUFBQSxVQUFVLEVBQUU7QUFEK0IsS0FQbEI7QUFXM0IsOENBQTBDO0FBQ3hDQyxNQUFBQSxLQUFLLEVBQUU7QUFEaUMsS0FYZjtBQWUzQixpREFBNkM7QUFDM0NGLE1BQUFBLE9BQU8sRUFBRSxNQURrQztBQUUzQ0csTUFBQUEsYUFBYSxFQUFFLFFBRjRCO0FBRzNDRixNQUFBQSxVQUFVLEVBQUU7QUFIK0IsS0FmbEI7QUFxQjNCLDRDQUF3QztBQUN0QyxtS0FBNko7QUFDM0pFLFFBQUFBLGFBQWEsRUFBRTtBQUQ0STtBQUR2SCxLQXJCYjtBQTJCM0IsMkNBQXVDO0FBQ3JDQyxNQUFBQSxJQUFJLEVBQUUsQ0FEK0I7QUFHckM7QUFDQTtBQUNBSixNQUFBQSxPQUFPLEVBQUUsTUFMNEI7QUFNckNHLE1BQUFBLGFBQWEsRUFBRSxRQU5zQjtBQVFyQztB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QVYsQ0FBb0IsQ0FBQ1IsbUJBQVVTLEtBQVYsQ0FBZ0IsQ0FBQyxLQUFELENBQWhCLENBQUQsRUFBMkJULG1CQUFVVSxJQUFyQyxDQUFwQixDQW5CVTtBQW9CeEJ2RCxFQUFBQSxXQUFXLEVBQUU2QyxtQkFBVU87QUFwQkMsQ0FBMUI7ZUF1QmV6RCxhIiwic291cmNlUm9vdCI6ImNvbXBvbmVudDovLy8iLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQgY29tcGxleGl0eTogW1wiZXJyb3JcIiwgMzBdICovXG5cbmltcG9ydCB7IGNzcyB9IGZyb20gJ2dsYW1vcic7XG5pbXBvcnQgY2xhc3NOYW1lcyBmcm9tICdjbGFzc25hbWVzJztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuXG5pbXBvcnQgQnViYmxlIGZyb20gJy4vQnViYmxlJztcbmltcG9ydCBjb25uZWN0VG9XZWJDaGF0IGZyb20gJy4uL2Nvbm5lY3RUb1dlYkNoYXQnO1xuaW1wb3J0IGlzWmVyb09yUG9zaXRpdmUgZnJvbSAnLi4vVXRpbHMvaXNaZXJvT3JQb3NpdGl2ZSc7XG5pbXBvcnQgU2NyZWVuUmVhZGVyVGV4dCBmcm9tICcuLi9TY3JlZW5SZWFkZXJUZXh0JztcbmltcG9ydCB0ZXh0Rm9ybWF0VG9Db250ZW50VHlwZSBmcm9tICcuLi9VdGlscy90ZXh0Rm9ybWF0VG9Db250ZW50VHlwZSc7XG5pbXBvcnQgdXNlQXZhdGFyRm9yQm90IGZyb20gJy4uL2hvb2tzL3VzZUF2YXRhckZvckJvdCc7XG5pbXBvcnQgdXNlQXZhdGFyRm9yVXNlciBmcm9tICcuLi9ob29rcy91c2VBdmF0YXJGb3JVc2VyJztcbmltcG9ydCB1c2VMb2NhbGl6ZXIgZnJvbSAnLi4vaG9va3MvdXNlTG9jYWxpemVyJztcbmltcG9ydCB1c2VTdHlsZU9wdGlvbnMgZnJvbSAnLi4vaG9va3MvdXNlU3R5bGVPcHRpb25zJztcbmltcG9ydCB1c2VTdHlsZVNldCBmcm9tICcuLi9ob29rcy91c2VTdHlsZVNldCc7XG5pbXBvcnQgdXNlVW5pcXVlSWQgZnJvbSAnLi4vaG9va3MvaW50ZXJuYWwvdXNlVW5pcXVlSWQnO1xuXG5jb25zdCBST09UX0NTUyA9IGNzcyh7XG4gICcmLndlYmNoYXRfX3N0YWNrZWQtbGF5b3V0Jzoge1xuICAgIHBvc2l0aW9uOiAncmVsYXRpdmUnLCAvLyBUaGlzIGlzIHRvIGtlZXAgc2NyZWVuIHJlYWRlciB0ZXh0IGluIHRoZSBkZXN0aW5hdGVkIGFyZWEuXG5cbiAgICAnJiAud2ViY2hhdF9fc3RhY2tlZC1sYXlvdXRfX2F0dGFjaG1lbnQtcm93LCAmIC53ZWJjaGF0X19zdGFja2VkLWxheW91dF9fbWFpbiwgJiAud2ViY2hhdF9fc3RhY2tlZC1sYXlvdXRfX21lc3NhZ2Utcm93LCAmIC53ZWJjaGF0X19zdGFja2VkLWxheW91dF9fc3RhdHVzJzoge1xuICAgICAgZGlzcGxheTogJ2ZsZXgnXG4gICAgfSxcblxuICAgICcmIC53ZWJjaGF0X19zdGFja2VkLWxheW91dF9fYWxpZ25tZW50LXBhZCc6IHtcbiAgICAgIGZsZXhTaHJpbms6IDBcbiAgICB9LFxuXG4gICAgJyYgLndlYmNoYXRfX3N0YWNrZWQtbGF5b3V0X19hdHRhY2htZW50Jzoge1xuICAgICAgd2lkdGg6ICcxMDAlJ1xuICAgIH0sXG5cbiAgICAnJiAud2ViY2hhdF9fc3RhY2tlZC1sYXlvdXRfX2F2YXRhci1ndXR0ZXInOiB7XG4gICAgICBkaXNwbGF5OiAnZmxleCcsXG4gICAgICBmbGV4RGlyZWN0aW9uOiAnY29sdW1uJyxcbiAgICAgIGZsZXhTaHJpbms6IDBcbiAgICB9LFxuXG4gICAgJyYud2ViY2hhdF9fc3RhY2tlZC1sYXlvdXQtLWZyb20tdXNlcic6IHtcbiAgICAgICcmIC53ZWJjaGF0X19zdGFja2VkLWxheW91dF9fYXR0YWNobWVudC1yb3csICYgLndlYmNoYXRfX3N0YWNrZWQtbGF5b3V0X19tYWluLCAmIC53ZWJjaGF0X19zdGFja2VkLWxheW91dF9fbWVzc2FnZS1yb3csICYgLndlYmNoYXRfX3N0YWNrZWQtbGF5b3V0X19zdGF0dXMnOiB7XG4gICAgICAgIGZsZXhEaXJlY3Rpb246ICdyb3ctcmV2ZXJzZSdcbiAgICAgIH1cbiAgICB9LFxuXG4gICAgJyYgLndlYmNoYXRfX3N0YWNrZWQtbGF5b3V0X19jb250ZW50Jzoge1xuICAgICAgZmxleDogMSxcblxuICAgICAgLy8gVGhpcyBpcyBmb3IgYm90dG9tIGFsaWduaW5nIGFuIGF2YXRhciB3aXRoIGEgbWVzc2FnZSBidWJibGUgc2hvcnRlciB0aGFuIHRoZSBhdmF0YXIuXG4gICAgICAvLyBSZWxhdGVkIHRvIHRoZSB0ZXN0IGF0IGFjdGl2aXR5R3JvdXBpbmcuYXZhdGFyTWlkZGxld2FyZS5hdEJvdHRvbS5qcy5cbiAgICAgIGRpc3BsYXk6ICdmbGV4JyxcbiAgICAgIGZsZXhEaXJlY3Rpb246ICdjb2x1bW4nLFxuXG4gICAgICAvLyBUaGlzIFwib3ZlcmZsb3c6IGhpZGRlblwiIGlzIHRvIG1ha2Ugc3VyZSB0ZXh0IG92ZXJmbG93IHdlIGdldCBjbGlwcGVkIGNvcnJlY3RseS5cbiAgICAgIC8vIFJlbGF0ZWQgdG8gdGhlIHRlc3QgYXQgYmFzaWMuanMgXCJsb25nIFVSTHMgd2l0aCBrZWVwLWFsbFwiLlxuICAgICAgb3ZlcmZsb3c6ICdoaWRkZW4nXG4gICAgfSxcblxuICAgICcmIC53ZWJjaGF0X19zdGFja2VkLWxheW91dF9fbnViLXBhZCc6IHtcbiAgICAgIGZsZXhTaHJpbms6IDBcbiAgICB9XG4gIH1cbn0pO1xuXG5jb25zdCBjb25uZWN0U3RhY2tlZExheW91dCA9ICguLi5zZWxlY3RvcnMpID0+XG4gIGNvbm5lY3RUb1dlYkNoYXQoXG4gICAgKFxuICAgICAge1xuICAgICAgICBsYW5ndWFnZSxcbiAgICAgICAgc3R5bGVTZXQ6IHtcbiAgICAgICAgICBvcHRpb25zOiB7IGJvdEF2YXRhckluaXRpYWxzLCB1c2VyQXZhdGFySW5pdGlhbHMgfVxuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgeyBhY3Rpdml0eTogeyBmcm9tOiB7IHJvbGUgfSA9IHt9IH0gPSB7fSB9XG4gICAgKSA9PiAoe1xuICAgICAgYXZhdGFySW5pdGlhbHM6IHJvbGUgPT09ICd1c2VyJyA/IHVzZXJBdmF0YXJJbml0aWFscyA6IGJvdEF2YXRhckluaXRpYWxzLFxuICAgICAgbGFuZ3VhZ2UsXG5cbiAgICAgIC8vIFRPRE86IFtQNF0gV2Ugd2FudCB0byBkZXByZWNhdGUgYm90QXZhdGFySW5pdGlhbHMvdXNlckF2YXRhckluaXRpYWxzIGJlY2F1c2UgdGhleSBhcmUgbm90IGFzIGhlbHBmdWwgYXMgYXZhdGFySW5pdGlhbHNcbiAgICAgIGJvdEF2YXRhckluaXRpYWxzLFxuICAgICAgdXNlckF2YXRhckluaXRpYWxzXG4gICAgfSksXG4gICAgLi4uc2VsZWN0b3JzXG4gICk7XG5cbmNvbnN0IFN0YWNrZWRMYXlvdXQgPSAoe1xuICBhY3Rpdml0eSxcbiAgaGlkZVRpbWVzdGFtcCxcbiAgcmVuZGVyQWN0aXZpdHlTdGF0dXMsXG4gIHJlbmRlckF0dGFjaG1lbnQsXG4gIHJlbmRlckF2YXRhcixcbiAgc2hvd0NhbGxvdXRcbn0pID0+IHtcbiAgY29uc3QgW3sgYnViYmxlTnViT2Zmc2V0LCBidWJibGVOdWJTaXplLCBidWJibGVGcm9tVXNlck51Yk9mZnNldCwgYnViYmxlRnJvbVVzZXJOdWJTaXplIH1dID0gdXNlU3R5bGVPcHRpb25zKCk7XG4gIGNvbnN0IFt7IGluaXRpYWxzOiBib3RJbml0aWFscyB9XSA9IHVzZUF2YXRhckZvckJvdCgpO1xuICBjb25zdCBbeyBpbml0aWFsczogdXNlckluaXRpYWxzIH1dID0gdXNlQXZhdGFyRm9yVXNlcigpO1xuICBjb25zdCBbeyBzdGFja2VkTGF5b3V0OiBzdGFja2VkTGF5b3V0U3R5bGVTZXQgfV0gPSB1c2VTdHlsZVNldCgpO1xuICBjb25zdCBhcmlhTGFiZWxJZCA9IHVzZVVuaXF1ZUlkKCd3ZWJjaGF0X19zdGFja2VkLWxheW91dF9faWQnKTtcbiAgY29uc3QgbG9jYWxpemUgPSB1c2VMb2NhbGl6ZXIoKTtcbiAgY29uc3Qgc2hvd0FjdGl2aXR5U3RhdHVzID0gdHlwZW9mIHJlbmRlckFjdGl2aXR5U3RhdHVzID09PSAnZnVuY3Rpb24nO1xuXG4gIGNvbnN0IHtcbiAgICBhdHRhY2htZW50cyA9IFtdLFxuICAgIGNoYW5uZWxEYXRhOiB7IG1lc3NhZ2VCYWNrOiB7IGRpc3BsYXlUZXh0OiBtZXNzYWdlQmFja0Rpc3BsYXlUZXh0IH0gPSB7fSB9ID0ge30sXG4gICAgZnJvbTogeyByb2xlIH0gPSB7fSxcbiAgICB0ZXh0LFxuICAgIHRleHRGb3JtYXRcbiAgfSA9IGFjdGl2aXR5O1xuXG4gIGNvbnN0IGFjdGl2aXR5RGlzcGxheVRleHQgPSBtZXNzYWdlQmFja0Rpc3BsYXlUZXh0IHx8IHRleHQ7XG4gIGNvbnN0IGZyb21Vc2VyID0gcm9sZSA9PT0gJ3VzZXInO1xuXG4gIGNvbnN0IGF0dGFjaGVkQWx0ID0gbG9jYWxpemUoZnJvbVVzZXIgPyAnQUNUSVZJVFlfWU9VX0FUVEFDSEVEX0FMVCcgOiAnQUNUSVZJVFlfQk9UX0FUVEFDSEVEX0FMVCcpO1xuICBjb25zdCBncmVldGluZ0FsdCA9IChmcm9tVXNlclxuICAgID8gbG9jYWxpemUoJ0FDVElWSVRZX1lPVV9TQUlEX0FMVCcpXG4gICAgOiBsb2NhbGl6ZSgnQUNUSVZJVFlfQk9UX1NBSURfQUxUJywgYm90SW5pdGlhbHMgfHwgJycpXG4gICkucmVwbGFjZSgvXFxzezIsfS9ndSwgJyAnKTtcblxuICBjb25zdCBpbml0aWFscyA9IGZyb21Vc2VyID8gdXNlckluaXRpYWxzIDogYm90SW5pdGlhbHM7XG4gIGNvbnN0IG51Yk9mZnNldCA9IGZyb21Vc2VyID8gYnViYmxlRnJvbVVzZXJOdWJPZmZzZXQgOiBidWJibGVOdWJPZmZzZXQ7XG4gIGNvbnN0IG51YlNpemUgPSBmcm9tVXNlciA/IGJ1YmJsZUZyb21Vc2VyTnViU2l6ZSA6IGJ1YmJsZU51YlNpemU7XG4gIGNvbnN0IG90aGVySW5pdGlhbHMgPSBmcm9tVXNlciA/IGJvdEluaXRpYWxzIDogdXNlckluaXRpYWxzO1xuICBjb25zdCBvdGhlck51YlNpemUgPSBmcm9tVXNlciA/IGJ1YmJsZU51YlNpemUgOiBidWJibGVGcm9tVXNlck51YlNpemU7XG5cbiAgY29uc3QgaGFzQXZhdGFyID0gaW5pdGlhbHMgfHwgdHlwZW9mIGluaXRpYWxzID09PSAnc3RyaW5nJztcbiAgY29uc3QgaGFzT3RoZXJBdmF0YXIgPSBvdGhlckluaXRpYWxzIHx8IHR5cGVvZiBvdGhlckluaXRpYWxzID09PSAnc3RyaW5nJztcbiAgY29uc3QgaGFzTnViID0gdHlwZW9mIG51YlNpemUgPT09ICdudW1iZXInO1xuICBjb25zdCBoYXNPdGhlck51YiA9IHR5cGVvZiBvdGhlck51YlNpemUgPT09ICdudW1iZXInO1xuICBjb25zdCB0b3BBbGlnbmVkQ2FsbG91dCA9IGlzWmVyb09yUG9zaXRpdmUobnViT2Zmc2V0KTtcblxuICBjb25zdCBleHRyYVRyYWlsaW5nID0gIWhhc090aGVyQXZhdGFyICYmIGhhc090aGVyTnViOyAvLyBUaGlzIGlzIGZvciBib3QgbWVzc2FnZSB3aXRoIHVzZXIgbnViIGFuZCBubyB1c2VyIGF2YXRhci4gQW5kIHZpY2UgdmVyc2EuXG5cbiAgY29uc3Qgc2hvd0F2YXRhciA9IHNob3dDYWxsb3V0ICYmIGhhc0F2YXRhciAmJiAhIXJlbmRlckF2YXRhcjtcbiAgY29uc3Qgc2hvd051YiA9IHNob3dDYWxsb3V0ICYmIGhhc051YiAmJiAodG9wQWxpZ25lZENhbGxvdXQgfHwgIWF0dGFjaG1lbnRzLmxlbmd0aCk7XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2XG4gICAgICBhcmlhLWxhYmVsbGVkYnk9e2FyaWFMYWJlbElkfVxuICAgICAgYXJpYS1yb2xlZGVzY3JpcHRpb249XCJhY3Rpdml0eVwiXG4gICAgICBjbGFzc05hbWU9e2NsYXNzTmFtZXMoJ3dlYmNoYXRfX3N0YWNrZWQtbGF5b3V0JywgUk9PVF9DU1MgKyAnJywgc3RhY2tlZExheW91dFN0eWxlU2V0ICsgJycsIHtcbiAgICAgICAgJ3dlYmNoYXRfX3N0YWNrZWQtbGF5b3V0LS1leHRyYS10cmFpbGluZyc6IGV4dHJhVHJhaWxpbmcsXG4gICAgICAgICd3ZWJjaGF0X19zdGFja2VkLWxheW91dC0tZnJvbS11c2VyJzogZnJvbVVzZXIsXG4gICAgICAgICd3ZWJjaGF0X19zdGFja2VkLWxheW91dC0taGlkZS1hdmF0YXInOiBoYXNBdmF0YXIgJiYgIXNob3dBdmF0YXIsXG4gICAgICAgICd3ZWJjaGF0X19zdGFja2VkLWxheW91dC0taGlkZS1udWInOiBoYXNOdWIgJiYgIXNob3dOdWIsXG4gICAgICAgICd3ZWJjaGF0X19zdGFja2VkLWxheW91dC0tbm8tbWVzc2FnZSc6ICFhY3Rpdml0eURpc3BsYXlUZXh0LFxuICAgICAgICAnd2ViY2hhdF9fc3RhY2tlZC1sYXlvdXQtLXNob3ctYXZhdGFyJzogc2hvd0F2YXRhcixcbiAgICAgICAgJ3dlYmNoYXRfX3N0YWNrZWQtbGF5b3V0LS1zaG93LW51Yic6IHNob3dOdWIsXG4gICAgICAgICd3ZWJjaGF0X19zdGFja2VkLWxheW91dC0tdG9wLWNhbGxvdXQnOiB0b3BBbGlnbmVkQ2FsbG91dFxuICAgICAgfSl9XG4gICAgICByb2xlPVwiZ3JvdXBcIlxuICAgID5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwid2ViY2hhdF9fc3RhY2tlZC1sYXlvdXRfX21haW5cIj5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ3ZWJjaGF0X19zdGFja2VkLWxheW91dF9fYXZhdGFyLWd1dHRlclwiPntzaG93QXZhdGFyICYmIHJlbmRlckF2YXRhcih7IGFjdGl2aXR5IH0pfTwvZGl2PlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIndlYmNoYXRfX3N0YWNrZWQtbGF5b3V0X19jb250ZW50XCI+XG4gICAgICAgICAgeyEhYWN0aXZpdHlEaXNwbGF5VGV4dCAmJiAoXG4gICAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICAgIGFyaWEtcm9sZWRlc2NyaXB0aW9uPVwibWVzc2FnZVwiXG4gICAgICAgICAgICAgIGNsYXNzTmFtZT1cIndlYmNoYXRfX3N0YWNrZWQtbGF5b3V0X19tZXNzYWdlLXJvd1wiXG4gICAgICAgICAgICAgIC8vIERpc2FibGUgXCJQcm9wIGBpZGAgaXMgZm9yYmlkZGVuIG9uIERPTSBOb2Rlc1wiIHJ1bGUgYmVjYXVzZSB3ZSBhcmUgdXNpbmcgdGhlIElEIHByb3AgZm9yIGFjY2Vzc2liaWxpdHkuXG4gICAgICAgICAgICAgIC8qIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSByZWFjdC9mb3JiaWQtZG9tLXByb3BzICovXG4gICAgICAgICAgICAgIGlkPXthcmlhTGFiZWxJZH1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgPFNjcmVlblJlYWRlclRleHQgdGV4dD17Z3JlZXRpbmdBbHR9IC8+XG4gICAgICAgICAgICAgIDxCdWJibGVcbiAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJ3ZWJjaGF0X19zdGFja2VkLWxheW91dF9fbWVzc2FnZVwiXG4gICAgICAgICAgICAgICAgZnJvbVVzZXI9e2Zyb21Vc2VyfVxuICAgICAgICAgICAgICAgIG51Yj17c2hvd051YiB8fCAoKGhhc0F2YXRhciB8fCBoYXNOdWIpICYmICdoaWRkZW4nKX1cbiAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgIHtyZW5kZXJBdHRhY2htZW50KHtcbiAgICAgICAgICAgICAgICAgIGFjdGl2aXR5LFxuICAgICAgICAgICAgICAgICAgYXR0YWNobWVudDoge1xuICAgICAgICAgICAgICAgICAgICBjb250ZW50OiBhY3Rpdml0eURpc3BsYXlUZXh0LFxuICAgICAgICAgICAgICAgICAgICBjb250ZW50VHlwZTogdGV4dEZvcm1hdFRvQ29udGVudFR5cGUodGV4dEZvcm1hdClcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KX1cbiAgICAgICAgICAgICAgPC9CdWJibGU+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICApfVxuICAgICAgICAgIHthdHRhY2htZW50cy5tYXAoKGF0dGFjaG1lbnQsIGluZGV4KSA9PiAoXG4gICAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICAgIGFyaWEtcm9sZWRlc2NyaXB0aW9uPVwiYXR0YWNobWVudFwiXG4gICAgICAgICAgICAgIGNsYXNzTmFtZT17Y2xhc3NOYW1lcygnd2ViY2hhdF9fc3RhY2tlZC1sYXlvdXRfX2F0dGFjaG1lbnQtcm93Jywge1xuICAgICAgICAgICAgICAgICd3ZWJjaGF0X19zdGFja2VkLWxheW91dF9fYXR0YWNobWVudC1yb3ctLWZpcnN0JzogIWluZGV4XG4gICAgICAgICAgICAgIH0pfVxuICAgICAgICAgICAgICAvKiBhdHRhY2htZW50cyBkbyBub3QgaGF2ZSBhbiBJRCwgaXQgaXMgYWx3YXlzIGluZGV4ZWQgYnkgbnVtYmVyICovXG4gICAgICAgICAgICAgIC8qIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSByZWFjdC9uby1hcnJheS1pbmRleC1rZXkgKi9cbiAgICAgICAgICAgICAga2V5PXtpbmRleH1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgPFNjcmVlblJlYWRlclRleHQgdGV4dD17YXR0YWNoZWRBbHR9IC8+XG4gICAgICAgICAgICAgIDxCdWJibGVcbiAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJ3ZWJjaGF0X19zdGFja2VkLWxheW91dF9fYXR0YWNobWVudFwiXG4gICAgICAgICAgICAgICAgZnJvbVVzZXI9e2Zyb21Vc2VyfVxuICAgICAgICAgICAgICAgIC8qIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSByZWFjdC9uby1hcnJheS1pbmRleC1rZXkgKi9cbiAgICAgICAgICAgICAgICBrZXk9e2luZGV4fVxuICAgICAgICAgICAgICAgIG51Yj17KGhhc0F2YXRhciB8fCBoYXNOdWIpICYmICdoaWRkZW4nfVxuICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAge3JlbmRlckF0dGFjaG1lbnQoeyBhY3Rpdml0eSwgYXR0YWNobWVudCB9KX1cbiAgICAgICAgICAgICAgPC9CdWJibGU+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICApKX1cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwid2ViY2hhdF9fc3RhY2tlZC1sYXlvdXRfX2FsaWdubWVudC1wYWRcIiAvPlxuICAgICAgPC9kaXY+XG4gICAgICB7c2hvd0FjdGl2aXR5U3RhdHVzICYmIChcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ3ZWJjaGF0X19zdGFja2VkLWxheW91dF9fc3RhdHVzXCI+XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ3ZWJjaGF0X19zdGFja2VkLWxheW91dF9fYXZhdGFyLWd1dHRlclwiIC8+XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ3ZWJjaGF0X19zdGFja2VkLWxheW91dF9fbnViLXBhZFwiIC8+XG4gICAgICAgICAge3JlbmRlckFjdGl2aXR5U3RhdHVzKHsgaGlkZVRpbWVzdGFtcCB9KX1cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIndlYmNoYXRfX3N0YWNrZWQtbGF5b3V0X19hbGlnbm1lbnQtcGFkXCIgLz5cbiAgICAgICAgPC9kaXY+XG4gICAgICApfVxuICAgIDwvZGl2PlxuICApO1xufTtcblxuU3RhY2tlZExheW91dC5kZWZhdWx0UHJvcHMgPSB7XG4gIGhpZGVUaW1lc3RhbXA6IGZhbHNlLFxuICByZW5kZXJBY3Rpdml0eVN0YXR1czogZmFsc2UsXG4gIHJlbmRlckF2YXRhcjogZmFsc2UsXG4gIHNob3dDYWxsb3V0OiB0cnVlXG59O1xuXG5TdGFja2VkTGF5b3V0LnByb3BUeXBlcyA9IHtcbiAgYWN0aXZpdHk6IFByb3BUeXBlcy5zaGFwZSh7XG4gICAgYXR0YWNobWVudHM6IFByb3BUeXBlcy5hcnJheSxcbiAgICBjaGFubmVsRGF0YTogUHJvcFR5cGVzLnNoYXBlKHtcbiAgICAgIG1lc3NhZ2VCYWNrOiBQcm9wVHlwZXMuc2hhcGUoe1xuICAgICAgICBkaXNwbGF5VGV4dDogUHJvcFR5cGVzLnN0cmluZ1xuICAgICAgfSlcbiAgICB9KSxcbiAgICBmcm9tOiBQcm9wVHlwZXMuc2hhcGUoe1xuICAgICAgcm9sZTogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkXG4gICAgfSkuaXNSZXF1aXJlZCxcbiAgICB0ZXh0OiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIHRleHRGb3JtYXQ6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgdGltZXN0YW1wOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIHR5cGU6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZFxuICB9KS5pc1JlcXVpcmVkLFxuICBoaWRlVGltZXN0YW1wOiBQcm9wVHlwZXMuYm9vbCxcbiAgcmVuZGVyQWN0aXZpdHlTdGF0dXM6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5vbmVPZihbZmFsc2VdKSwgUHJvcFR5cGVzLmZ1bmNdKSxcbiAgcmVuZGVyQXR0YWNobWVudDogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbiAgcmVuZGVyQXZhdGFyOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMub25lT2YoW2ZhbHNlXSksIFByb3BUeXBlcy5mdW5jXSksXG4gIHNob3dDYWxsb3V0OiBQcm9wVHlwZXMuYm9vbFxufTtcblxuZXhwb3J0IGRlZmF1bHQgU3RhY2tlZExheW91dDtcblxuZXhwb3J0IHsgY29ubmVjdFN0YWNrZWRMYXlvdXQgfTtcbiJdfQ==