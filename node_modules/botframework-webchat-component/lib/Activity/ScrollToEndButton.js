"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _classnames = _interopRequireDefault(require("classnames"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireWildcard(require("react"));

var _useDirection3 = _interopRequireDefault(require("../hooks/useDirection"));

var _useLocalizer = _interopRequireDefault(require("../hooks/useLocalizer"));

var _useScrollToEnd = _interopRequireDefault(require("../hooks/useScrollToEnd"));

var _useStyleSet3 = _interopRequireDefault(require("../hooks/useStyleSet"));

var _detectBrowser = require("../Utils/detectBrowser");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var ScrollToEndButton = /*#__PURE__*/(0, _react.forwardRef)(function (_ref, ref) {
  var ariaValueMax = _ref['aria-valuemax'],
      ariaValueMin = _ref['aria-valuemin'],
      ariaValueNow = _ref['aria-valuenow'],
      className = _ref.className,
      onClick = _ref.onClick;

  var _useStyleSet = (0, _useStyleSet3.default)(),
      _useStyleSet2 = _slicedToArray(_useStyleSet, 1),
      scrollToEndButtonStyleSet = _useStyleSet2[0].scrollToEndButton;

  var _useDirection = (0, _useDirection3.default)(),
      _useDirection2 = _slicedToArray(_useDirection, 1),
      direction = _useDirection2[0];

  var localize = (0, _useLocalizer.default)();
  var scrollToEnd = (0, _useScrollToEnd.default)();
  var handleClick = (0, _react.useCallback)(function (event) {
    onClick && onClick(event);
    scrollToEnd();
  }, [onClick, scrollToEnd]);
  var handleKeyPress = (0, _react.useCallback)(function (event) {
    if (event.key === 'Enter' || event.key === ' ') {
      event.preventDefault();
      onClick && onClick(event);
      scrollToEnd();
    }
  }, [onClick, scrollToEnd]);
  var newMessageText = localize('TRANSCRIPT_NEW_MESSAGES');
  return /*#__PURE__*/_react.default.createElement("li", {
    "aria-label": newMessageText,
    "aria-valuemax": ariaValueMax,
    "aria-valuemin": ariaValueMin,
    "aria-valuenow": ariaValueNow,
    className: (0, _classnames.default)('webchat__scrollToEndButton', scrollToEndButtonStyleSet + '', className + '', direction === 'rtl' ? 'webchat__overlay--rtl' : ''),
    onClick: handleClick,
    onKeyPress: handleKeyPress,
    ref: ref // iOS VoiceOver does not support role="separator" and treat it as role="presentation", which become invisible to VoiceOver.
    ,
    role: _detectBrowser.safari ? undefined : 'separator',
    tabIndex: 0
  }, newMessageText);
});
ScrollToEndButton.defaultProps = {
  'aria-valuemin': 0,
  className: '',
  onClick: undefined
};
ScrollToEndButton.displayName = 'ScrollToEndButton';
ScrollToEndButton.propTypes = {
  'aria-valuemax': _propTypes.default.number.isRequired,
  'aria-valuemin': _propTypes.default.number,
  'aria-valuenow': _propTypes.default.number.isRequired,
  className: _propTypes.default.string,
  onClick: _propTypes.default.func
};
var _default = ScrollToEndButton;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9BY3Rpdml0eS9TY3JvbGxUb0VuZEJ1dHRvbi5qcyJdLCJuYW1lcyI6WyJTY3JvbGxUb0VuZEJ1dHRvbiIsInJlZiIsImFyaWFWYWx1ZU1heCIsImFyaWFWYWx1ZU1pbiIsImFyaWFWYWx1ZU5vdyIsImNsYXNzTmFtZSIsIm9uQ2xpY2siLCJzY3JvbGxUb0VuZEJ1dHRvblN0eWxlU2V0Iiwic2Nyb2xsVG9FbmRCdXR0b24iLCJkaXJlY3Rpb24iLCJsb2NhbGl6ZSIsInNjcm9sbFRvRW5kIiwiaGFuZGxlQ2xpY2siLCJldmVudCIsImhhbmRsZUtleVByZXNzIiwia2V5IiwicHJldmVudERlZmF1bHQiLCJuZXdNZXNzYWdlVGV4dCIsInNhZmFyaSIsInVuZGVmaW5lZCIsImRlZmF1bHRQcm9wcyIsImRpc3BsYXlOYW1lIiwicHJvcFR5cGVzIiwiUHJvcFR5cGVzIiwibnVtYmVyIiwiaXNSZXF1aXJlZCIsInN0cmluZyIsImZ1bmMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUVBOztBQUNBOztBQUNBOztBQUNBOztBQUVBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUVBLElBQU1BLGlCQUFpQixnQkFBRyx1QkFDeEIsZ0JBRUVDLEdBRkYsRUFHSztBQUFBLE1BRmdCQyxZQUVoQixRQUZELGVBRUM7QUFBQSxNQUYrQ0MsWUFFL0MsUUFGOEIsZUFFOUI7QUFBQSxNQUY4RUMsWUFFOUUsUUFGNkQsZUFFN0Q7QUFBQSxNQUY0RkMsU0FFNUYsUUFGNEZBLFNBRTVGO0FBQUEsTUFGdUdDLE9BRXZHLFFBRnVHQSxPQUV2Rzs7QUFBQSxxQkFDd0QsNEJBRHhEO0FBQUE7QUFBQSxNQUN5QkMseUJBRHpCLG9CQUNNQyxpQkFETjs7QUFBQSxzQkFFaUIsNkJBRmpCO0FBQUE7QUFBQSxNQUVJQyxTQUZKOztBQUdILE1BQU1DLFFBQVEsR0FBRyw0QkFBakI7QUFDQSxNQUFNQyxXQUFXLEdBQUcsOEJBQXBCO0FBRUEsTUFBTUMsV0FBVyxHQUFHLHdCQUNsQixVQUFBQyxLQUFLLEVBQUk7QUFDUFAsSUFBQUEsT0FBTyxJQUFJQSxPQUFPLENBQUNPLEtBQUQsQ0FBbEI7QUFDQUYsSUFBQUEsV0FBVztBQUNaLEdBSmlCLEVBS2xCLENBQUNMLE9BQUQsRUFBVUssV0FBVixDQUxrQixDQUFwQjtBQVFBLE1BQU1HLGNBQWMsR0FBRyx3QkFDckIsVUFBQUQsS0FBSyxFQUFJO0FBQ1AsUUFBSUEsS0FBSyxDQUFDRSxHQUFOLEtBQWMsT0FBZCxJQUF5QkYsS0FBSyxDQUFDRSxHQUFOLEtBQWMsR0FBM0MsRUFBZ0Q7QUFDOUNGLE1BQUFBLEtBQUssQ0FBQ0csY0FBTjtBQUVBVixNQUFBQSxPQUFPLElBQUlBLE9BQU8sQ0FBQ08sS0FBRCxDQUFsQjtBQUNBRixNQUFBQSxXQUFXO0FBQ1o7QUFDRixHQVJvQixFQVNyQixDQUFDTCxPQUFELEVBQVVLLFdBQVYsQ0FUcUIsQ0FBdkI7QUFZQSxNQUFNTSxjQUFjLEdBQUdQLFFBQVEsQ0FBQyx5QkFBRCxDQUEvQjtBQUVBLHNCQUNFO0FBQ0Usa0JBQVlPLGNBRGQ7QUFFRSxxQkFBZWYsWUFGakI7QUFHRSxxQkFBZUMsWUFIakI7QUFJRSxxQkFBZUMsWUFKakI7QUFLRSxJQUFBLFNBQVMsRUFBRSx5QkFDVCw0QkFEUyxFQUVURyx5QkFBeUIsR0FBRyxFQUZuQixFQUdURixTQUFTLEdBQUcsRUFISCxFQUlUSSxTQUFTLEtBQUssS0FBZCxHQUFzQix1QkFBdEIsR0FBZ0QsRUFKdkMsQ0FMYjtBQVdFLElBQUEsT0FBTyxFQUFFRyxXQVhYO0FBWUUsSUFBQSxVQUFVLEVBQUVFLGNBWmQ7QUFhRSxJQUFBLEdBQUcsRUFBRWIsR0FiUCxDQWNFO0FBZEY7QUFlRSxJQUFBLElBQUksRUFBRWlCLHdCQUFTQyxTQUFULEdBQXFCLFdBZjdCO0FBZ0JFLElBQUEsUUFBUSxFQUFFO0FBaEJaLEtBa0JHRixjQWxCSCxDQURGO0FBc0JELENBdER1QixDQUExQjtBQXlEQWpCLGlCQUFpQixDQUFDb0IsWUFBbEIsR0FBaUM7QUFDL0IsbUJBQWlCLENBRGM7QUFFL0JmLEVBQUFBLFNBQVMsRUFBRSxFQUZvQjtBQUcvQkMsRUFBQUEsT0FBTyxFQUFFYTtBQUhzQixDQUFqQztBQU1BbkIsaUJBQWlCLENBQUNxQixXQUFsQixHQUFnQyxtQkFBaEM7QUFFQXJCLGlCQUFpQixDQUFDc0IsU0FBbEIsR0FBOEI7QUFDNUIsbUJBQWlCQyxtQkFBVUMsTUFBVixDQUFpQkMsVUFETjtBQUU1QixtQkFBaUJGLG1CQUFVQyxNQUZDO0FBRzVCLG1CQUFpQkQsbUJBQVVDLE1BQVYsQ0FBaUJDLFVBSE47QUFJNUJwQixFQUFBQSxTQUFTLEVBQUVrQixtQkFBVUcsTUFKTztBQUs1QnBCLEVBQUFBLE9BQU8sRUFBRWlCLG1CQUFVSTtBQUxTLENBQTlCO2VBUWUzQixpQiIsInNvdXJjZVJvb3QiOiJjb21wb25lbnQ6Ly8vIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNsYXNzTmFtZXMgZnJvbSAnY2xhc3NuYW1lcyc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IFJlYWN0LCB7IGZvcndhcmRSZWYsIHVzZUNhbGxiYWNrIH0gZnJvbSAncmVhY3QnO1xuXG5pbXBvcnQgdXNlRGlyZWN0aW9uIGZyb20gJy4uL2hvb2tzL3VzZURpcmVjdGlvbic7XG5pbXBvcnQgdXNlTG9jYWxpemVyIGZyb20gJy4uL2hvb2tzL3VzZUxvY2FsaXplcic7XG5pbXBvcnQgdXNlU2Nyb2xsVG9FbmQgZnJvbSAnLi4vaG9va3MvdXNlU2Nyb2xsVG9FbmQnO1xuaW1wb3J0IHVzZVN0eWxlU2V0IGZyb20gJy4uL2hvb2tzL3VzZVN0eWxlU2V0JztcblxuaW1wb3J0IHsgc2FmYXJpIH0gZnJvbSAnLi4vVXRpbHMvZGV0ZWN0QnJvd3Nlcic7XG5cbmNvbnN0IFNjcm9sbFRvRW5kQnV0dG9uID0gZm9yd2FyZFJlZihcbiAgKFxuICAgIHsgJ2FyaWEtdmFsdWVtYXgnOiBhcmlhVmFsdWVNYXgsICdhcmlhLXZhbHVlbWluJzogYXJpYVZhbHVlTWluLCAnYXJpYS12YWx1ZW5vdyc6IGFyaWFWYWx1ZU5vdywgY2xhc3NOYW1lLCBvbkNsaWNrIH0sXG4gICAgcmVmXG4gICkgPT4ge1xuICAgIGNvbnN0IFt7IHNjcm9sbFRvRW5kQnV0dG9uOiBzY3JvbGxUb0VuZEJ1dHRvblN0eWxlU2V0IH1dID0gdXNlU3R5bGVTZXQoKTtcbiAgICBjb25zdCBbZGlyZWN0aW9uXSA9IHVzZURpcmVjdGlvbigpO1xuICAgIGNvbnN0IGxvY2FsaXplID0gdXNlTG9jYWxpemVyKCk7XG4gICAgY29uc3Qgc2Nyb2xsVG9FbmQgPSB1c2VTY3JvbGxUb0VuZCgpO1xuXG4gICAgY29uc3QgaGFuZGxlQ2xpY2sgPSB1c2VDYWxsYmFjayhcbiAgICAgIGV2ZW50ID0+IHtcbiAgICAgICAgb25DbGljayAmJiBvbkNsaWNrKGV2ZW50KTtcbiAgICAgICAgc2Nyb2xsVG9FbmQoKTtcbiAgICAgIH0sXG4gICAgICBbb25DbGljaywgc2Nyb2xsVG9FbmRdXG4gICAgKTtcblxuICAgIGNvbnN0IGhhbmRsZUtleVByZXNzID0gdXNlQ2FsbGJhY2soXG4gICAgICBldmVudCA9PiB7XG4gICAgICAgIGlmIChldmVudC5rZXkgPT09ICdFbnRlcicgfHwgZXZlbnQua2V5ID09PSAnICcpIHtcbiAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuXG4gICAgICAgICAgb25DbGljayAmJiBvbkNsaWNrKGV2ZW50KTtcbiAgICAgICAgICBzY3JvbGxUb0VuZCgpO1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgW29uQ2xpY2ssIHNjcm9sbFRvRW5kXVxuICAgICk7XG5cbiAgICBjb25zdCBuZXdNZXNzYWdlVGV4dCA9IGxvY2FsaXplKCdUUkFOU0NSSVBUX05FV19NRVNTQUdFUycpO1xuXG4gICAgcmV0dXJuIChcbiAgICAgIDxsaVxuICAgICAgICBhcmlhLWxhYmVsPXtuZXdNZXNzYWdlVGV4dH1cbiAgICAgICAgYXJpYS12YWx1ZW1heD17YXJpYVZhbHVlTWF4fVxuICAgICAgICBhcmlhLXZhbHVlbWluPXthcmlhVmFsdWVNaW59XG4gICAgICAgIGFyaWEtdmFsdWVub3c9e2FyaWFWYWx1ZU5vd31cbiAgICAgICAgY2xhc3NOYW1lPXtjbGFzc05hbWVzKFxuICAgICAgICAgICd3ZWJjaGF0X19zY3JvbGxUb0VuZEJ1dHRvbicsXG4gICAgICAgICAgc2Nyb2xsVG9FbmRCdXR0b25TdHlsZVNldCArICcnLFxuICAgICAgICAgIGNsYXNzTmFtZSArICcnLFxuICAgICAgICAgIGRpcmVjdGlvbiA9PT0gJ3J0bCcgPyAnd2ViY2hhdF9fb3ZlcmxheS0tcnRsJyA6ICcnXG4gICAgICAgICl9XG4gICAgICAgIG9uQ2xpY2s9e2hhbmRsZUNsaWNrfVxuICAgICAgICBvbktleVByZXNzPXtoYW5kbGVLZXlQcmVzc31cbiAgICAgICAgcmVmPXtyZWZ9XG4gICAgICAgIC8vIGlPUyBWb2ljZU92ZXIgZG9lcyBub3Qgc3VwcG9ydCByb2xlPVwic2VwYXJhdG9yXCIgYW5kIHRyZWF0IGl0IGFzIHJvbGU9XCJwcmVzZW50YXRpb25cIiwgd2hpY2ggYmVjb21lIGludmlzaWJsZSB0byBWb2ljZU92ZXIuXG4gICAgICAgIHJvbGU9e3NhZmFyaSA/IHVuZGVmaW5lZCA6ICdzZXBhcmF0b3InfVxuICAgICAgICB0YWJJbmRleD17MH1cbiAgICAgID5cbiAgICAgICAge25ld01lc3NhZ2VUZXh0fVxuICAgICAgPC9saT5cbiAgICApO1xuICB9XG4pO1xuXG5TY3JvbGxUb0VuZEJ1dHRvbi5kZWZhdWx0UHJvcHMgPSB7XG4gICdhcmlhLXZhbHVlbWluJzogMCxcbiAgY2xhc3NOYW1lOiAnJyxcbiAgb25DbGljazogdW5kZWZpbmVkXG59O1xuXG5TY3JvbGxUb0VuZEJ1dHRvbi5kaXNwbGF5TmFtZSA9ICdTY3JvbGxUb0VuZEJ1dHRvbic7XG5cblNjcm9sbFRvRW5kQnV0dG9uLnByb3BUeXBlcyA9IHtcbiAgJ2FyaWEtdmFsdWVtYXgnOiBQcm9wVHlwZXMubnVtYmVyLmlzUmVxdWlyZWQsXG4gICdhcmlhLXZhbHVlbWluJzogUHJvcFR5cGVzLm51bWJlcixcbiAgJ2FyaWEtdmFsdWVub3cnOiBQcm9wVHlwZXMubnVtYmVyLmlzUmVxdWlyZWQsXG4gIGNsYXNzTmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgb25DbGljazogUHJvcFR5cGVzLmZ1bmNcbn07XG5cbmV4cG9ydCBkZWZhdWx0IFNjcm9sbFRvRW5kQnV0dG9uO1xuIl19