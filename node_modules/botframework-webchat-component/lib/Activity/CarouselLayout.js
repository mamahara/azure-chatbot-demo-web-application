"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _reactFilm = require("react-film");

var _glamor = require("glamor");

var _classnames = _interopRequireDefault(require("classnames"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireWildcard(require("react"));

var _CarouselFilmStrip = _interopRequireDefault(require("./CarouselFilmStrip"));

var _useDirection3 = _interopRequireDefault(require("../hooks/useDirection"));

var _useLocalizer = _interopRequireDefault(require("../hooks/useLocalizer"));

var _useStyleSet3 = _interopRequireDefault(require("../hooks/useStyleSet"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var ROOT_CSS = (0, _glamor.css)({
  overflow: 'hidden',
  position: 'relative'
});

var CarouselLayout = function CarouselLayout(_ref) {
  var activity = _ref.activity,
      children = _ref.children,
      hideTimestamp = _ref.hideTimestamp,
      renderActivityStatus = _ref.renderActivityStatus,
      renderAttachment = _ref.renderAttachment,
      renderAvatar = _ref.renderAvatar,
      showCallout = _ref.showCallout;

  var _useStyleSet = (0, _useStyleSet3.default)(),
      _useStyleSet2 = _slicedToArray(_useStyleSet, 1),
      carouselFlipperStyleSet = _useStyleSet2[0].carouselFlipper;

  var _useDirection = (0, _useDirection3.default)(),
      _useDirection2 = _slicedToArray(_useDirection, 1),
      direction = _useDirection2[0];

  var filmStyleSet = (0, _react.useMemo)(function () {
    return (0, _reactFilm.createBasicStyleSet)({
      cursor: null
    });
  }, []);
  var leftSideFlipper = direction === 'rtl' ? '>' : '<';
  var localize = (0, _useLocalizer.default)();
  var rightSideFlipper = direction === 'rtl' ? '<' : '>';
  return /*#__PURE__*/_react.default.createElement(_reactFilm.Composer, {
    dir: direction,
    numItems: _react.default.Children.count(children)
  }, /*#__PURE__*/_react.default.createElement(_reactFilm.Context.Consumer, null, function (_ref2) {
    var scrollBarWidth = _ref2.scrollBarWidth;
    return /*#__PURE__*/_react.default.createElement("div", {
      className: (0, _classnames.default)(ROOT_CSS + '', filmStyleSet.carousel + '')
    }, /*#__PURE__*/_react.default.createElement(_CarouselFilmStrip.default, {
      activity: activity,
      hideTimestamp: hideTimestamp,
      renderActivityStatus: renderActivityStatus,
      renderAttachment: renderAttachment,
      renderAvatar: renderAvatar,
      showCallout: showCallout
    }), scrollBarWidth !== '100%' && /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_reactFilm.Flipper, {
      "aria-label": localize('CAROUSEL_FLIPPER_LEFT_ALT'),
      blurFocusOnClick: true,
      className: (0, _classnames.default)(carouselFlipperStyleSet + '', filmStyleSet.leftFlipper + ''),
      mode: "left"
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: "button"
    }, leftSideFlipper)), /*#__PURE__*/_react.default.createElement(_reactFilm.Flipper, {
      "aria-label": localize('CAROUSEL_FLIPPER_RIGHT_ALT'),
      blurFocusOnClick: true,
      className: (0, _classnames.default)(carouselFlipperStyleSet + '', filmStyleSet.rightFlipper + ''),
      mode: "right"
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: "button"
    }, rightSideFlipper))));
  }));
};

CarouselLayout.defaultProps = {
  children: undefined,
  hideTimestamp: false,
  renderActivityStatus: false,
  renderAvatar: false,
  showCallout: true
};
CarouselLayout.propTypes = {
  activity: _propTypes.default.any.isRequired,
  children: _propTypes.default.any,
  hideTimestamp: _propTypes.default.bool,
  renderActivityStatus: _propTypes.default.oneOfType([_propTypes.default.oneOf([false]), _propTypes.default.func]),
  renderAttachment: _propTypes.default.func.isRequired,
  renderAvatar: _propTypes.default.oneOfType([_propTypes.default.oneOf([false]), _propTypes.default.func]),
  showCallout: _propTypes.default.bool
};
var _default = CarouselLayout;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,