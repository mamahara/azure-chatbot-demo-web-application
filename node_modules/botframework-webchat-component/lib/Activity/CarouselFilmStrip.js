"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.connectCarouselFilmStrip = exports.default = void 0;

var _glamor = require("glamor");

var _reactFilm = require("react-film");

var _classnames = _interopRequireDefault(require("classnames"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _Bubble = _interopRequireDefault(require("./Bubble"));

var _connectToWebChat = _interopRequireDefault(require("../connectToWebChat"));

var _isZeroOrPositive = _interopRequireDefault(require("../Utils/isZeroOrPositive"));

var _ScreenReaderText = _interopRequireDefault(require("../ScreenReaderText"));

var _textFormatToContentType = _interopRequireDefault(require("../Utils/textFormatToContentType"));

var _useAvatarForBot3 = _interopRequireDefault(require("../hooks/useAvatarForBot"));

var _useAvatarForUser3 = _interopRequireDefault(require("../hooks/useAvatarForUser"));

var _useDirection3 = _interopRequireDefault(require("../hooks/useDirection"));

var _useLocalizer = _interopRequireDefault(require("../hooks/useLocalizer"));

var _useStyleOptions3 = _interopRequireDefault(require("../hooks/useStyleOptions"));

var _useStyleSet3 = _interopRequireDefault(require("../hooks/useStyleSet"));

var _useUniqueId = _interopRequireDefault(require("../hooks/internal/useUniqueId"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var ROOT_CSS = (0, _glamor.css)({
  '&.webchat__carousel-layout': {
    display: 'flex',
    flexDirection: 'column',
    MsOverflowStyle: 'none',
    overflowX: 'scroll',
    overflowY: 'hidden',
    position: 'relative',
    // This is to keep screen reader text in the destinated area.
    touchAction: 'manipulation',
    WebkitOverflowScrolling: 'touch',
    '&::-webkit-scrollbar': {
      display: 'none'
    },
    '& .webchat__carousel-layout__alignment-pad': {
      flexShrink: 0
    },
    '& .webchat__carousel-layout__attachment': {
      flex: 1
    },
    '& .webchat__carousel-layout__attachments': {
      display: 'flex',
      listStyleType: 'none',
      margin: 0,
      padding: 0
    },
    '& .webchat__carousel-layout__avatar': {
      flexShrink: 0
    },
    '& .webchat__carousel-layout__avatar-gutter': {
      display: 'flex',
      flexDirection: 'column',
      flexShrink: 0
    },
    '& .webchat__carousel-layout__complimentary': {
      display: 'flex'
    },
    '& .webchat__carousel-layout__complimentary-content': {
      display: 'flex',
      flexGrow: 1,
      flexDirection: 'column'
    },
    '& .webchat__carousel-layout__content': {
      display: 'flex',
      flexGrow: 1,
      flexDirection: 'column'
    },
    '& .webchat__carousel-layout__filler': {
      flexGrow: 10000,
      flexShrink: 1
    },
    '& .webchat__carousel-layout__main': {
      display: 'flex'
    },
    '& .webchat__carousel-layout__message': {
      display: 'flex'
    },
    '& .webchat__carousel-layout__nub-pad': {
      flexShrink: 0
    },
    '& .webchat__carousel-layout__status': {
      display: 'flex'
    }
  }
});

var connectCarouselFilmStrip = function connectCarouselFilmStrip() {
  for (var _len = arguments.length, selectors = new Array(_len), _key = 0; _key < _len; _key++) {
    selectors[_key] = arguments[_key];
  }

  return _connectToWebChat.default.apply(void 0, [function (_ref, _ref2) {
    var language = _ref.language,
        _ref$styleSet$options = _ref.styleSet.options,
        botAvatarInitials = _ref$styleSet$options.botAvatarInitials,
        userAvatarInitials = _ref$styleSet$options.userAvatarInitials;
    var _ref2$activity = _ref2.activity;
    _ref2$activity = _ref2$activity === void 0 ? {} : _ref2$activity;
    var _ref2$activity$from = _ref2$activity.from;
    _ref2$activity$from = _ref2$activity$from === void 0 ? {} : _ref2$activity$from;
    var role = _ref2$activity$from.role;
    return {
      avatarInitials: role === 'user' ? userAvatarInitials : botAvatarInitials,
      language: language
    };
  }].concat(selectors));
};

exports.connectCarouselFilmStrip = connectCarouselFilmStrip;

var WebChatCarouselFilmStrip = function WebChatCarouselFilmStrip(_ref3) {
  var activity = _ref3.activity,
      className = _ref3.className,
      hideTimestamp = _ref3.hideTimestamp,
      itemContainerRef = _ref3.itemContainerRef,
      renderActivityStatus = _ref3.renderActivityStatus,
      renderAttachment = _ref3.renderAttachment,
      renderAvatar = _ref3.renderAvatar,
      scrollableRef = _ref3.scrollableRef,
      showCallout = _ref3.showCallout;

  var _useStyleOptions = (0, _useStyleOptions3.default)(),
      _useStyleOptions2 = _slicedToArray(_useStyleOptions, 1),
      _useStyleOptions2$ = _useStyleOptions2[0],
      bubbleNubOffset = _useStyleOptions2$.bubbleNubOffset,
      bubbleNubSize = _useStyleOptions2$.bubbleNubSize,
      bubbleFromUserNubOffset = _useStyleOptions2$.bubbleFromUserNubOffset,
      bubbleFromUserNubSize = _useStyleOptions2$.bubbleFromUserNubSize;

  var _useStyleSet = (0, _useStyleSet3.default)(),
      _useStyleSet2 = _slicedToArray(_useStyleSet, 1),
      carouselFilmStripStyleSet = _useStyleSet2[0].carouselFilmStrip;

  var _useAvatarForBot = (0, _useAvatarForBot3.default)(),
      _useAvatarForBot2 = _slicedToArray(_useAvatarForBot, 1),
      botInitials = _useAvatarForBot2[0].initials;

  var _useAvatarForUser = (0, _useAvatarForUser3.default)(),
      _useAvatarForUser2 = _slicedToArray(_useAvatarForUser, 1),
      userInitials = _useAvatarForUser2[0].initials;

  var _useDirection = (0, _useDirection3.default)(),
      _useDirection2 = _slicedToArray(_useDirection, 1),
      direction = _useDirection2[0];

  var ariaLabelId = (0, _useUniqueId.default)('webchat__carousel-filmstrip__id');
  var localize = (0, _useLocalizer.default)();
  var showActivityStatus = typeof renderActivityStatus === 'function';
  var _activity$attachments = activity.attachments,
      attachments = _activity$attachments === void 0 ? [] : _activity$attachments,
      _activity$channelData = activity.channelData;
  _activity$channelData = _activity$channelData === void 0 ? {} : _activity$channelData;
  var _activity$channelData2 = _activity$channelData.messageBack;
  _activity$channelData2 = _activity$channelData2 === void 0 ? {} : _activity$channelData2;
  var messageBackDisplayText = _activity$channelData2.displayText,
      _activity$from = activity.from;
  _activity$from = _activity$from === void 0 ? {} : _activity$from;
  var role = _activity$from.role,
      text = activity.text,
      textFormat = activity.textFormat;
  var activityDisplayText = messageBackDisplayText || text;
  var fromUser = role === 'user';
  var attachedAlt = localize(fromUser ? 'ACTIVITY_YOU_ATTACHED_ALT' : 'ACTIVITY_BOT_ATTACHED_ALT');
  var greetingAlt = (fromUser ? localize('ACTIVITY_YOU_SAID_ALT') : localize('ACTIVITY_BOT_SAID_ALT', botInitials || '')).replace(/[\t-\r \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000\uFEFF]{2,}/g, ' ');
  var initials = fromUser ? userInitials : botInitials;
  var nubOffset = fromUser ? bubbleFromUserNubOffset : bubbleNubOffset;
  var nubSize = fromUser ? bubbleFromUserNubSize : bubbleNubSize;
  var otherInitials = fromUser ? botInitials : userInitials;
  var otherNubSize = fromUser ? bubbleNubSize : bubbleFromUserNubSize;
  var hasAvatar = initials || typeof initials === 'string';
  var hasOtherAvatar = otherInitials || typeof otherInitials === 'string';
  var hasNub = typeof nubSize === 'number';
  var hasOtherNub = typeof otherNubSize === 'number';
  var topAlignedCallout = (0, _isZeroOrPositive.default)(nubOffset);
  var extraTrailing = !hasOtherAvatar && hasOtherNub; // This is for bot message with user nub and no user avatar. And vice versa.

  var showAvatar = showCallout && hasAvatar && !!renderAvatar;
  var showNub = showCallout && hasNub && (topAlignedCallout || !attachments.length);
  return /*#__PURE__*/_react.default.createElement("div", {
    "aria-labelledby": ariaLabelId,
    className: (0, _classnames.default)('webchat__carousel-layout', ROOT_CSS + '', carouselFilmStripStyleSet + '', className + '', {
      'webchat__carousel-layout--extra-trailing': extraTrailing,
      'webchat__carousel-layout--hide-avatar': hasAvatar && !showAvatar,
      'webchat__carousel-layout--hide-nub': hasNub && !showNub,
      'webchat__carousel-layout--no-message': !activityDisplayText,
      'webchat__carousel-layout--rtl': direction === 'rtl',
      'webchat__carousel-layout--show-avatar': showAvatar,
      'webchat__carousel-layout--show-nub': showNub,
      'webchat__carousel-layout--top-callout': topAlignedCallout
    }),
    ref: scrollableRef,
    role: "group"
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "webchat__carousel-layout__main"
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "webchat__carousel-layout__avatar-gutter"
  }, showAvatar && renderAvatar({
    activity: activity
  })), /*#__PURE__*/_react.default.createElement("div", {
    className: "webchat__carousel-layout__content"
  }, !!activityDisplayText &&
  /*#__PURE__*/
  // Disable "Prop `id` is forbidden on DOM Nodes" rule because we are using the ID prop for accessibility.

  /* eslint-disable-next-line react/forbid-dom-props */
  _react.default.createElement("div", {
    "aria-roledescription": "message",
    className: "webchat__carousel-layout__message",
    id: ariaLabelId
  }, /*#__PURE__*/_react.default.createElement(_ScreenReaderText.default, {
    text: greetingAlt
  }), /*#__PURE__*/_react.default.createElement(_Bubble.default, {
    className: "webchat__carousel-layout__bubble",
    fromUser: fromUser,
    nub: showNub || (hasAvatar || hasNub) && 'hidden'
  }, renderAttachment({
    activity: activity,
    attachment: {
      content: activityDisplayText,
      contentType: (0, _textFormatToContentType.default)(textFormat)
    }
  })), /*#__PURE__*/_react.default.createElement("div", {
    className: "webchat__carousel-layout__filler"
  })), /*#__PURE__*/_react.default.createElement("div", {
    className: "webchat__carousel-layout__complimentary"
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "webchat__carousel-layout__nub-pad"
  }), /*#__PURE__*/_react.default.createElement("div", {
    className: "webchat__carousel-layout__complimentary-content"
  }, /*#__PURE__*/_react.default.createElement("ul", {
    className: "webchat__carousel-layout__attachments",
    ref: itemContainerRef
  }, attachments.map(function (attachment, index) {
    return (
      /*#__PURE__*/

      /* eslint-disable-next-line react/no-array-index-key */
      _react.default.createElement("li", {
        "aria-roledescription": "attachment",
        className: "webchat__carousel-layout__attachment",
        key: index
      }, /*#__PURE__*/_react.default.createElement(_ScreenReaderText.default, {
        text: attachedAlt
      }), /*#__PURE__*/_react.default.createElement(_Bubble.default, {
        fromUser: fromUser,
        key: index,
        nub: false
      }, renderAttachment({
        activity: activity,
        attachment: attachment
      })))
    );
  }))))), /*#__PURE__*/_react.default.createElement("div", {
    className: "webchat__carousel-layout__alignment-pad"
  })), showActivityStatus && /*#__PURE__*/_react.default.createElement("div", {
    className: "webchat__carousel-layout__status"
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "webchat__carousel-layout__avatar-gutter"
  }), /*#__PURE__*/_react.default.createElement("div", {
    className: "webchat__carousel-layout__nub-pad"
  }), renderActivityStatus({
    hideTimestamp: hideTimestamp
  })));
};

WebChatCarouselFilmStrip.defaultProps = {
  className: '',
  hideTimestamp: false,
  renderActivityStatus: false,
  renderAvatar: false,
  showCallout: false
};
WebChatCarouselFilmStrip.propTypes = {
  activity: _propTypes.default.shape({
    attachments: _propTypes.default.array,
    channelData: _propTypes.default.shape({
      messageBack: _propTypes.default.shape({
        displayText: _propTypes.default.string
      }),
      state: _propTypes.default.string
    }),
    from: _propTypes.default.shape({
      role: _propTypes.default.string.isRequired
    }).isRequired,
    text: _propTypes.default.string,
    textFormat: _propTypes.default.string,
    timestamp: _propTypes.default.string
  }).isRequired,
  className: _propTypes.default.string,
  hideTimestamp: _propTypes.default.bool,
  itemContainerRef: _propTypes.default.any.isRequired,
  renderActivityStatus: _propTypes.default.oneOfType([_propTypes.default.oneOf([false]), _propTypes.default.func]),
  renderAttachment: _propTypes.default.func.isRequired,
  renderAvatar: _propTypes.default.oneOfType([_propTypes.default.oneOf([false]), _propTypes.default.func]),
  scrollableRef: _propTypes.default.any.isRequired,
  showCallout: _propTypes.default.bool
};

var CarouselFilmStrip = function CarouselFilmStrip(props) {
  return /*#__PURE__*/_react.default.createElement(_reactFilm.Context.Consumer, null, function (_ref4) {
    var itemContainerRef = _ref4.itemContainerRef,
        scrollableRef = _ref4.scrollableRef;
    return /*#__PURE__*/_react.default.createElement(WebChatCarouselFilmStrip, _extends({
      itemContainerRef: itemContainerRef,
      scrollableRef: scrollableRef
    }, props));
  });
};

var _default = CarouselFilmStrip;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,