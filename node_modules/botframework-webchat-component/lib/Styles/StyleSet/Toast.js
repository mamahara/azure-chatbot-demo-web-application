"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = createToastStyle;

/* eslint no-magic-numbers: ["off"] */
function createToastStyle(_ref) {
  var primaryFont = _ref.primaryFont,
      toasterHeight = _ref.toasterHeight,
      toastErrorColor = _ref.toastErrorColor,
      toastFontSize = _ref.toastFontSize,
      toastIconWidth = _ref.toastIconWidth,
      toastInfoColor = _ref.toastInfoColor,
      toastSuccessColor = _ref.toastSuccessColor,
      toastTextPadding = _ref.toastTextPadding,
      toastWarnColor = _ref.toastWarnColor;
  return {
    fontFamily: primaryFont,
    fontSize: toastFontSize,
    minHeight: toasterHeight,
    '&.webchat__toast--error': {
      color: toastErrorColor,
      fill: toastErrorColor
    },
    '&.webchat__toast--info': {
      color: toastInfoColor,
      fill: toastInfoColor
    },
    '&.webchat__toast--success': {
      color: toastSuccessColor,
      fill: toastSuccessColor
    },
    '&.webchat__toast--warn': {
      color: toastWarnColor,
      fill: toastWarnColor
    },
    '& .webchat__toast__iconBox': {
      alignItems: 'center',
      display: 'flex',
      flexShrink: 0,
      height: toasterHeight,
      justifyContent: 'center',
      width: toastIconWidth
    },
    '& .webchat__toast__dismissButton': {
      alignItems: 'center',
      appearance: 'none',
      backgroundColor: 'Transparent',
      border: 0,
      display: 'flex',
      height: toasterHeight,
      justifyContent: 'center',
      outline: 0,
      padding: 0,
      width: toasterHeight,
      '&:focus .webchat__toast__dismissButtonFocus': {
        borderColor: 'rgba(26, 10, 0, .7)'
      },
      '&:hover .webchat__toast__dismissButtonFocus': {
        backgroundColor: 'rgba(0, 0, 0, .12)'
      }
    },
    '& .webchat__toast__dismissButtonFocus': {
      alignItems: 'center',
      borderColor: 'Transparent',
      borderStyle: 'solid',
      borderWidth: 1,
      borderRadius: 3,
      display: 'flex',
      height: 22,
      justifyContent: 'center',
      width: 22
    },
    '& .webchat__toast__text': {
      alignSelf: 'center',
      paddingBottom: toastTextPadding,
      paddingTop: toastTextPadding
    }
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9TdHlsZXMvU3R5bGVTZXQvVG9hc3QuanMiXSwibmFtZXMiOlsiY3JlYXRlVG9hc3RTdHlsZSIsInByaW1hcnlGb250IiwidG9hc3RlckhlaWdodCIsInRvYXN0RXJyb3JDb2xvciIsInRvYXN0Rm9udFNpemUiLCJ0b2FzdEljb25XaWR0aCIsInRvYXN0SW5mb0NvbG9yIiwidG9hc3RTdWNjZXNzQ29sb3IiLCJ0b2FzdFRleHRQYWRkaW5nIiwidG9hc3RXYXJuQ29sb3IiLCJmb250RmFtaWx5IiwiZm9udFNpemUiLCJtaW5IZWlnaHQiLCJjb2xvciIsImZpbGwiLCJhbGlnbkl0ZW1zIiwiZGlzcGxheSIsImZsZXhTaHJpbmsiLCJoZWlnaHQiLCJqdXN0aWZ5Q29udGVudCIsIndpZHRoIiwiYXBwZWFyYW5jZSIsImJhY2tncm91bmRDb2xvciIsImJvcmRlciIsIm91dGxpbmUiLCJwYWRkaW5nIiwiYm9yZGVyQ29sb3IiLCJib3JkZXJTdHlsZSIsImJvcmRlcldpZHRoIiwiYm9yZGVyUmFkaXVzIiwiYWxpZ25TZWxmIiwicGFkZGluZ0JvdHRvbSIsInBhZGRpbmdUb3AiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUVlLFNBQVNBLGdCQUFULE9BVVo7QUFBQSxNQVREQyxXQVNDLFFBVERBLFdBU0M7QUFBQSxNQVJEQyxhQVFDLFFBUkRBLGFBUUM7QUFBQSxNQVBEQyxlQU9DLFFBUERBLGVBT0M7QUFBQSxNQU5EQyxhQU1DLFFBTkRBLGFBTUM7QUFBQSxNQUxEQyxjQUtDLFFBTERBLGNBS0M7QUFBQSxNQUpEQyxjQUlDLFFBSkRBLGNBSUM7QUFBQSxNQUhEQyxpQkFHQyxRQUhEQSxpQkFHQztBQUFBLE1BRkRDLGdCQUVDLFFBRkRBLGdCQUVDO0FBQUEsTUFEREMsY0FDQyxRQUREQSxjQUNDO0FBQ0QsU0FBTztBQUNMQyxJQUFBQSxVQUFVLEVBQUVULFdBRFA7QUFFTFUsSUFBQUEsUUFBUSxFQUFFUCxhQUZMO0FBR0xRLElBQUFBLFNBQVMsRUFBRVYsYUFITjtBQUtMLCtCQUEyQjtBQUN6QlcsTUFBQUEsS0FBSyxFQUFFVixlQURrQjtBQUV6QlcsTUFBQUEsSUFBSSxFQUFFWDtBQUZtQixLQUx0QjtBQVVMLDhCQUEwQjtBQUN4QlUsTUFBQUEsS0FBSyxFQUFFUCxjQURpQjtBQUV4QlEsTUFBQUEsSUFBSSxFQUFFUjtBQUZrQixLQVZyQjtBQWVMLGlDQUE2QjtBQUMzQk8sTUFBQUEsS0FBSyxFQUFFTixpQkFEb0I7QUFFM0JPLE1BQUFBLElBQUksRUFBRVA7QUFGcUIsS0FmeEI7QUFvQkwsOEJBQTBCO0FBQ3hCTSxNQUFBQSxLQUFLLEVBQUVKLGNBRGlCO0FBRXhCSyxNQUFBQSxJQUFJLEVBQUVMO0FBRmtCLEtBcEJyQjtBQXlCTCxrQ0FBOEI7QUFDNUJNLE1BQUFBLFVBQVUsRUFBRSxRQURnQjtBQUU1QkMsTUFBQUEsT0FBTyxFQUFFLE1BRm1CO0FBRzVCQyxNQUFBQSxVQUFVLEVBQUUsQ0FIZ0I7QUFJNUJDLE1BQUFBLE1BQU0sRUFBRWhCLGFBSm9CO0FBSzVCaUIsTUFBQUEsY0FBYyxFQUFFLFFBTFk7QUFNNUJDLE1BQUFBLEtBQUssRUFBRWY7QUFOcUIsS0F6QnpCO0FBa0NMLHdDQUFvQztBQUNsQ1UsTUFBQUEsVUFBVSxFQUFFLFFBRHNCO0FBRWxDTSxNQUFBQSxVQUFVLEVBQUUsTUFGc0I7QUFHbENDLE1BQUFBLGVBQWUsRUFBRSxhQUhpQjtBQUlsQ0MsTUFBQUEsTUFBTSxFQUFFLENBSjBCO0FBS2xDUCxNQUFBQSxPQUFPLEVBQUUsTUFMeUI7QUFNbENFLE1BQUFBLE1BQU0sRUFBRWhCLGFBTjBCO0FBT2xDaUIsTUFBQUEsY0FBYyxFQUFFLFFBUGtCO0FBUWxDSyxNQUFBQSxPQUFPLEVBQUUsQ0FSeUI7QUFTbENDLE1BQUFBLE9BQU8sRUFBRSxDQVR5QjtBQVVsQ0wsTUFBQUEsS0FBSyxFQUFFbEIsYUFWMkI7QUFZbEMscURBQStDO0FBQzdDd0IsUUFBQUEsV0FBVyxFQUFFO0FBRGdDLE9BWmI7QUFnQmxDLHFEQUErQztBQUM3Q0osUUFBQUEsZUFBZSxFQUFFO0FBRDRCO0FBaEJiLEtBbEMvQjtBQXVETCw2Q0FBeUM7QUFDdkNQLE1BQUFBLFVBQVUsRUFBRSxRQUQyQjtBQUV2Q1csTUFBQUEsV0FBVyxFQUFFLGFBRjBCO0FBR3ZDQyxNQUFBQSxXQUFXLEVBQUUsT0FIMEI7QUFJdkNDLE1BQUFBLFdBQVcsRUFBRSxDQUowQjtBQUt2Q0MsTUFBQUEsWUFBWSxFQUFFLENBTHlCO0FBTXZDYixNQUFBQSxPQUFPLEVBQUUsTUFOOEI7QUFPdkNFLE1BQUFBLE1BQU0sRUFBRSxFQVArQjtBQVF2Q0MsTUFBQUEsY0FBYyxFQUFFLFFBUnVCO0FBU3ZDQyxNQUFBQSxLQUFLLEVBQUU7QUFUZ0MsS0F2RHBDO0FBbUVMLCtCQUEyQjtBQUN6QlUsTUFBQUEsU0FBUyxFQUFFLFFBRGM7QUFFekJDLE1BQUFBLGFBQWEsRUFBRXZCLGdCQUZVO0FBR3pCd0IsTUFBQUEsVUFBVSxFQUFFeEI7QUFIYTtBQW5FdEIsR0FBUDtBQXlFRCIsInNvdXJjZVJvb3QiOiJjb21wb25lbnQ6Ly8vIiwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50IG5vLW1hZ2ljLW51bWJlcnM6IFtcIm9mZlwiXSAqL1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjcmVhdGVUb2FzdFN0eWxlKHtcbiAgcHJpbWFyeUZvbnQsXG4gIHRvYXN0ZXJIZWlnaHQsXG4gIHRvYXN0RXJyb3JDb2xvcixcbiAgdG9hc3RGb250U2l6ZSxcbiAgdG9hc3RJY29uV2lkdGgsXG4gIHRvYXN0SW5mb0NvbG9yLFxuICB0b2FzdFN1Y2Nlc3NDb2xvcixcbiAgdG9hc3RUZXh0UGFkZGluZyxcbiAgdG9hc3RXYXJuQ29sb3Jcbn0pIHtcbiAgcmV0dXJuIHtcbiAgICBmb250RmFtaWx5OiBwcmltYXJ5Rm9udCxcbiAgICBmb250U2l6ZTogdG9hc3RGb250U2l6ZSxcbiAgICBtaW5IZWlnaHQ6IHRvYXN0ZXJIZWlnaHQsXG5cbiAgICAnJi53ZWJjaGF0X190b2FzdC0tZXJyb3InOiB7XG4gICAgICBjb2xvcjogdG9hc3RFcnJvckNvbG9yLFxuICAgICAgZmlsbDogdG9hc3RFcnJvckNvbG9yXG4gICAgfSxcblxuICAgICcmLndlYmNoYXRfX3RvYXN0LS1pbmZvJzoge1xuICAgICAgY29sb3I6IHRvYXN0SW5mb0NvbG9yLFxuICAgICAgZmlsbDogdG9hc3RJbmZvQ29sb3JcbiAgICB9LFxuXG4gICAgJyYud2ViY2hhdF9fdG9hc3QtLXN1Y2Nlc3MnOiB7XG4gICAgICBjb2xvcjogdG9hc3RTdWNjZXNzQ29sb3IsXG4gICAgICBmaWxsOiB0b2FzdFN1Y2Nlc3NDb2xvclxuICAgIH0sXG5cbiAgICAnJi53ZWJjaGF0X190b2FzdC0td2Fybic6IHtcbiAgICAgIGNvbG9yOiB0b2FzdFdhcm5Db2xvcixcbiAgICAgIGZpbGw6IHRvYXN0V2FybkNvbG9yXG4gICAgfSxcblxuICAgICcmIC53ZWJjaGF0X190b2FzdF9faWNvbkJveCc6IHtcbiAgICAgIGFsaWduSXRlbXM6ICdjZW50ZXInLFxuICAgICAgZGlzcGxheTogJ2ZsZXgnLFxuICAgICAgZmxleFNocmluazogMCxcbiAgICAgIGhlaWdodDogdG9hc3RlckhlaWdodCxcbiAgICAgIGp1c3RpZnlDb250ZW50OiAnY2VudGVyJyxcbiAgICAgIHdpZHRoOiB0b2FzdEljb25XaWR0aFxuICAgIH0sXG5cbiAgICAnJiAud2ViY2hhdF9fdG9hc3RfX2Rpc21pc3NCdXR0b24nOiB7XG4gICAgICBhbGlnbkl0ZW1zOiAnY2VudGVyJyxcbiAgICAgIGFwcGVhcmFuY2U6ICdub25lJyxcbiAgICAgIGJhY2tncm91bmRDb2xvcjogJ1RyYW5zcGFyZW50JyxcbiAgICAgIGJvcmRlcjogMCxcbiAgICAgIGRpc3BsYXk6ICdmbGV4JyxcbiAgICAgIGhlaWdodDogdG9hc3RlckhlaWdodCxcbiAgICAgIGp1c3RpZnlDb250ZW50OiAnY2VudGVyJyxcbiAgICAgIG91dGxpbmU6IDAsXG4gICAgICBwYWRkaW5nOiAwLFxuICAgICAgd2lkdGg6IHRvYXN0ZXJIZWlnaHQsXG5cbiAgICAgICcmOmZvY3VzIC53ZWJjaGF0X190b2FzdF9fZGlzbWlzc0J1dHRvbkZvY3VzJzoge1xuICAgICAgICBib3JkZXJDb2xvcjogJ3JnYmEoMjYsIDEwLCAwLCAuNyknXG4gICAgICB9LFxuXG4gICAgICAnJjpob3ZlciAud2ViY2hhdF9fdG9hc3RfX2Rpc21pc3NCdXR0b25Gb2N1cyc6IHtcbiAgICAgICAgYmFja2dyb3VuZENvbG9yOiAncmdiYSgwLCAwLCAwLCAuMTIpJ1xuICAgICAgfVxuICAgIH0sXG5cbiAgICAnJiAud2ViY2hhdF9fdG9hc3RfX2Rpc21pc3NCdXR0b25Gb2N1cyc6IHtcbiAgICAgIGFsaWduSXRlbXM6ICdjZW50ZXInLFxuICAgICAgYm9yZGVyQ29sb3I6ICdUcmFuc3BhcmVudCcsXG4gICAgICBib3JkZXJTdHlsZTogJ3NvbGlkJyxcbiAgICAgIGJvcmRlcldpZHRoOiAxLFxuICAgICAgYm9yZGVyUmFkaXVzOiAzLFxuICAgICAgZGlzcGxheTogJ2ZsZXgnLFxuICAgICAgaGVpZ2h0OiAyMixcbiAgICAgIGp1c3RpZnlDb250ZW50OiAnY2VudGVyJyxcbiAgICAgIHdpZHRoOiAyMlxuICAgIH0sXG5cbiAgICAnJiAud2ViY2hhdF9fdG9hc3RfX3RleHQnOiB7XG4gICAgICBhbGlnblNlbGY6ICdjZW50ZXInLFxuICAgICAgcGFkZGluZ0JvdHRvbTogdG9hc3RUZXh0UGFkZGluZyxcbiAgICAgIHBhZGRpbmdUb3A6IHRvYXN0VGV4dFBhZGRpbmdcbiAgICB9XG4gIH07XG59XG4iXX0=