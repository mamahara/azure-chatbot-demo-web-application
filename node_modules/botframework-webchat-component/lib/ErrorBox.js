"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireWildcard(require("react"));

var _ScreenReaderText = _interopRequireDefault(require("./ScreenReaderText"));

var _useLocalizer = _interopRequireDefault(require("./hooks/useLocalizer"));

var _useStyleSet3 = _interopRequireDefault(require("./hooks/useStyleSet"));

var _useTrackException = _interopRequireDefault(require("./hooks/useTrackException"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var ErrorBox = function ErrorBox(_ref) {
  var children = _ref.children,
      error = _ref.error,
      message = _ref.message;

  var _useStyleSet = (0, _useStyleSet3.default)(),
      _useStyleSet2 = _slicedToArray(_useStyleSet, 1),
      errorBoxStyleSet = _useStyleSet2[0].errorBox;

  var localize = (0, _useLocalizer.default)();
  var trackException = (0, _useTrackException.default)();
  (0, _react.useEffect)(function () {
    var errorObject = error || new Error(message);
    trackException(errorObject, false);
    console.group("botframework-webchat: ".concat(message));
    console.error(errorObject);
    console.groupEnd();
  }, [error, message, trackException]);
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_ScreenReaderText.default, {
    text: localize('ACTIVITY_ERROR_BOX_TITLE')
  }), /*#__PURE__*/_react.default.createElement("div", {
    className: errorBoxStyleSet
  }, /*#__PURE__*/_react.default.createElement("div", null, message), /*#__PURE__*/_react.default.createElement("div", null, children)));
};

ErrorBox.defaultProps = {
  children: undefined,
  error: undefined,
  message: ''
};
ErrorBox.propTypes = {
  children: _propTypes.default.any,
  error: _propTypes.default.instanceOf(Error),
  message: _propTypes.default.string
};
var _default = ErrorBox;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9FcnJvckJveC5qcyJdLCJuYW1lcyI6WyJFcnJvckJveCIsImNoaWxkcmVuIiwiZXJyb3IiLCJtZXNzYWdlIiwiZXJyb3JCb3hTdHlsZVNldCIsImVycm9yQm94IiwibG9jYWxpemUiLCJ0cmFja0V4Y2VwdGlvbiIsImVycm9yT2JqZWN0IiwiRXJyb3IiLCJjb25zb2xlIiwiZ3JvdXAiLCJncm91cEVuZCIsImRlZmF1bHRQcm9wcyIsInVuZGVmaW5lZCIsInByb3BUeXBlcyIsIlByb3BUeXBlcyIsImFueSIsImluc3RhbmNlT2YiLCJzdHJpbmciXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUVBOztBQUNBOztBQUVBOztBQUNBOztBQUNBOztBQUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUVBLElBQU1BLFFBQVEsR0FBRyxTQUFYQSxRQUFXLE9BQWtDO0FBQUEsTUFBL0JDLFFBQStCLFFBQS9CQSxRQUErQjtBQUFBLE1BQXJCQyxLQUFxQixRQUFyQkEsS0FBcUI7QUFBQSxNQUFkQyxPQUFjLFFBQWRBLE9BQWM7O0FBQUEscUJBQ1IsNEJBRFE7QUFBQTtBQUFBLE1BQzlCQyxnQkFEOEIsb0JBQ3hDQyxRQUR3Qzs7QUFFakQsTUFBTUMsUUFBUSxHQUFHLDRCQUFqQjtBQUNBLE1BQU1DLGNBQWMsR0FBRyxpQ0FBdkI7QUFFQSx3QkFBVSxZQUFNO0FBQ2QsUUFBTUMsV0FBVyxHQUFHTixLQUFLLElBQUksSUFBSU8sS0FBSixDQUFVTixPQUFWLENBQTdCO0FBRUFJLElBQUFBLGNBQWMsQ0FBQ0MsV0FBRCxFQUFjLEtBQWQsQ0FBZDtBQUVBRSxJQUFBQSxPQUFPLENBQUNDLEtBQVIsaUNBQXVDUixPQUF2QztBQUNBTyxJQUFBQSxPQUFPLENBQUNSLEtBQVIsQ0FBY00sV0FBZDtBQUNBRSxJQUFBQSxPQUFPLENBQUNFLFFBQVI7QUFDRCxHQVJELEVBUUcsQ0FBQ1YsS0FBRCxFQUFRQyxPQUFSLEVBQWlCSSxjQUFqQixDQVJIO0FBVUEsc0JBQ0UsNkJBQUMsY0FBRCxDQUFPLFFBQVAscUJBQ0UsNkJBQUMseUJBQUQ7QUFBa0IsSUFBQSxJQUFJLEVBQUVELFFBQVEsQ0FBQywwQkFBRDtBQUFoQyxJQURGLGVBRUU7QUFBSyxJQUFBLFNBQVMsRUFBRUY7QUFBaEIsa0JBQ0UsMENBQU1ELE9BQU4sQ0FERixlQUVFLDBDQUFNRixRQUFOLENBRkYsQ0FGRixDQURGO0FBU0QsQ0F4QkQ7O0FBMEJBRCxRQUFRLENBQUNhLFlBQVQsR0FBd0I7QUFDdEJaLEVBQUFBLFFBQVEsRUFBRWEsU0FEWTtBQUV0QlosRUFBQUEsS0FBSyxFQUFFWSxTQUZlO0FBR3RCWCxFQUFBQSxPQUFPLEVBQUU7QUFIYSxDQUF4QjtBQU1BSCxRQUFRLENBQUNlLFNBQVQsR0FBcUI7QUFDbkJkLEVBQUFBLFFBQVEsRUFBRWUsbUJBQVVDLEdBREQ7QUFFbkJmLEVBQUFBLEtBQUssRUFBRWMsbUJBQVVFLFVBQVYsQ0FBcUJULEtBQXJCLENBRlk7QUFHbkJOLEVBQUFBLE9BQU8sRUFBRWEsbUJBQVVHO0FBSEEsQ0FBckI7ZUFNZW5CLFEiLCJzb3VyY2VSb290IjoiY29tcG9uZW50Oi8vLyIsInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludCBuby1jb25zb2xlOiBcIm9mZlwiICovXG5cbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgUmVhY3QsIHsgdXNlRWZmZWN0IH0gZnJvbSAncmVhY3QnO1xuXG5pbXBvcnQgU2NyZWVuUmVhZGVyVGV4dCBmcm9tICcuL1NjcmVlblJlYWRlclRleHQnO1xuaW1wb3J0IHVzZUxvY2FsaXplciBmcm9tICcuL2hvb2tzL3VzZUxvY2FsaXplcic7XG5pbXBvcnQgdXNlU3R5bGVTZXQgZnJvbSAnLi9ob29rcy91c2VTdHlsZVNldCc7XG5pbXBvcnQgdXNlVHJhY2tFeGNlcHRpb24gZnJvbSAnLi9ob29rcy91c2VUcmFja0V4Y2VwdGlvbic7XG5cbmNvbnN0IEVycm9yQm94ID0gKHsgY2hpbGRyZW4sIGVycm9yLCBtZXNzYWdlIH0pID0+IHtcbiAgY29uc3QgW3sgZXJyb3JCb3g6IGVycm9yQm94U3R5bGVTZXQgfV0gPSB1c2VTdHlsZVNldCgpO1xuICBjb25zdCBsb2NhbGl6ZSA9IHVzZUxvY2FsaXplcigpO1xuICBjb25zdCB0cmFja0V4Y2VwdGlvbiA9IHVzZVRyYWNrRXhjZXB0aW9uKCk7XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBjb25zdCBlcnJvck9iamVjdCA9IGVycm9yIHx8IG5ldyBFcnJvcihtZXNzYWdlKTtcblxuICAgIHRyYWNrRXhjZXB0aW9uKGVycm9yT2JqZWN0LCBmYWxzZSk7XG5cbiAgICBjb25zb2xlLmdyb3VwKGBib3RmcmFtZXdvcmstd2ViY2hhdDogJHttZXNzYWdlfWApO1xuICAgIGNvbnNvbGUuZXJyb3IoZXJyb3JPYmplY3QpO1xuICAgIGNvbnNvbGUuZ3JvdXBFbmQoKTtcbiAgfSwgW2Vycm9yLCBtZXNzYWdlLCB0cmFja0V4Y2VwdGlvbl0pO1xuXG4gIHJldHVybiAoXG4gICAgPFJlYWN0LkZyYWdtZW50PlxuICAgICAgPFNjcmVlblJlYWRlclRleHQgdGV4dD17bG9jYWxpemUoJ0FDVElWSVRZX0VSUk9SX0JPWF9USVRMRScpfSAvPlxuICAgICAgPGRpdiBjbGFzc05hbWU9e2Vycm9yQm94U3R5bGVTZXR9PlxuICAgICAgICA8ZGl2PnttZXNzYWdlfTwvZGl2PlxuICAgICAgICA8ZGl2PntjaGlsZHJlbn08L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgIDwvUmVhY3QuRnJhZ21lbnQ+XG4gICk7XG59O1xuXG5FcnJvckJveC5kZWZhdWx0UHJvcHMgPSB7XG4gIGNoaWxkcmVuOiB1bmRlZmluZWQsXG4gIGVycm9yOiB1bmRlZmluZWQsXG4gIG1lc3NhZ2U6ICcnXG59O1xuXG5FcnJvckJveC5wcm9wVHlwZXMgPSB7XG4gIGNoaWxkcmVuOiBQcm9wVHlwZXMuYW55LFxuICBlcnJvcjogUHJvcFR5cGVzLmluc3RhbmNlT2YoRXJyb3IpLFxuICBtZXNzYWdlOiBQcm9wVHlwZXMuc3RyaW5nXG59O1xuXG5leHBvcnQgZGVmYXVsdCBFcnJvckJveDtcbiJdfQ==