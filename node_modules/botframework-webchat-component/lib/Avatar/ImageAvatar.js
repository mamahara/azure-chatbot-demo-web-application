"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _glamor = require("glamor");

var _classnames = _interopRequireDefault(require("classnames"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _CroppedImage = _interopRequireDefault(require("../Utils/CroppedImage"));

var _useAvatarForBot3 = _interopRequireDefault(require("../hooks/useAvatarForBot"));

var _useAvatarForUser3 = _interopRequireDefault(require("../hooks/useAvatarForUser"));

var _useStyleSet3 = _interopRequireDefault(require("../hooks/useStyleSet"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var ROOT_CSS = (0, _glamor.css)({
  '& .webchat__imageAvatar__image': {
    width: '100%'
  }
});

var ImageAvatar = function ImageAvatar(_ref) {
  var fromUser = _ref.fromUser;

  var _useAvatarForBot = (0, _useAvatarForBot3.default)(),
      _useAvatarForBot2 = _slicedToArray(_useAvatarForBot, 1),
      avatarImageForBot = _useAvatarForBot2[0].image;

  var _useAvatarForUser = (0, _useAvatarForUser3.default)(),
      _useAvatarForUser2 = _slicedToArray(_useAvatarForUser, 1),
      avatarImageForUser = _useAvatarForUser2[0].image;

  var _useStyleSet = (0, _useStyleSet3.default)(),
      _useStyleSet2 = _slicedToArray(_useStyleSet, 1),
      imageAvatarStyleSet = _useStyleSet2[0].imageAvatar;

  var avatarImage = fromUser ? avatarImageForUser : avatarImageForBot;
  return !!avatarImage && /*#__PURE__*/_react.default.createElement("div", {
    className: (0, _classnames.default)(ROOT_CSS + '', 'webchat__imageAvatar', imageAvatarStyleSet + '')
  }, /*#__PURE__*/_react.default.createElement(_CroppedImage.default, {
    alt: "",
    className: "webchat__imageAvatar__image",
    height: "100%",
    src: fromUser ? avatarImageForUser : avatarImageForBot,
    width: "100%"
  }));
};

ImageAvatar.defaultProps = {
  fromUser: false
};
ImageAvatar.propTypes = {
  fromUser: _propTypes.default.bool
};
var _default = ImageAvatar;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9BdmF0YXIvSW1hZ2VBdmF0YXIuanMiXSwibmFtZXMiOlsiUk9PVF9DU1MiLCJ3aWR0aCIsIkltYWdlQXZhdGFyIiwiZnJvbVVzZXIiLCJhdmF0YXJJbWFnZUZvckJvdCIsImltYWdlIiwiYXZhdGFySW1hZ2VGb3JVc2VyIiwiaW1hZ2VBdmF0YXJTdHlsZVNldCIsImltYWdlQXZhdGFyIiwiYXZhdGFySW1hZ2UiLCJkZWZhdWx0UHJvcHMiLCJwcm9wVHlwZXMiLCJQcm9wVHlwZXMiLCJib29sIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBRUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFQSxJQUFNQSxRQUFRLEdBQUcsaUJBQUk7QUFDbkIsb0NBQWtDO0FBQ2hDQyxJQUFBQSxLQUFLLEVBQUU7QUFEeUI7QUFEZixDQUFKLENBQWpCOztBQU1BLElBQU1DLFdBQVcsR0FBRyxTQUFkQSxXQUFjLE9BQWtCO0FBQUEsTUFBZkMsUUFBZSxRQUFmQSxRQUFlOztBQUFBLHlCQUNHLGdDQURIO0FBQUE7QUFBQSxNQUNwQkMsaUJBRG9CLHdCQUMzQkMsS0FEMkI7O0FBQUEsMEJBRUksaUNBRko7QUFBQTtBQUFBLE1BRXBCQyxrQkFGb0IseUJBRTNCRCxLQUYyQjs7QUFBQSxxQkFHVyw0QkFIWDtBQUFBO0FBQUEsTUFHZEUsbUJBSGMsb0JBRzNCQyxXQUgyQjs7QUFLcEMsTUFBTUMsV0FBVyxHQUFHTixRQUFRLEdBQUdHLGtCQUFILEdBQXdCRixpQkFBcEQ7QUFFQSxTQUNFLENBQUMsQ0FBQ0ssV0FBRixpQkFDRTtBQUFLLElBQUEsU0FBUyxFQUFFLHlCQUFXVCxRQUFRLEdBQUcsRUFBdEIsRUFBMEIsc0JBQTFCLEVBQWtETyxtQkFBbUIsR0FBRyxFQUF4RTtBQUFoQixrQkFDRSw2QkFBQyxxQkFBRDtBQUNFLElBQUEsR0FBRyxFQUFDLEVBRE47QUFFRSxJQUFBLFNBQVMsRUFBQyw2QkFGWjtBQUdFLElBQUEsTUFBTSxFQUFDLE1BSFQ7QUFJRSxJQUFBLEdBQUcsRUFBRUosUUFBUSxHQUFHRyxrQkFBSCxHQUF3QkYsaUJBSnZDO0FBS0UsSUFBQSxLQUFLLEVBQUM7QUFMUixJQURGLENBRko7QUFhRCxDQXBCRDs7QUFzQkFGLFdBQVcsQ0FBQ1EsWUFBWixHQUEyQjtBQUN6QlAsRUFBQUEsUUFBUSxFQUFFO0FBRGUsQ0FBM0I7QUFJQUQsV0FBVyxDQUFDUyxTQUFaLEdBQXdCO0FBQ3RCUixFQUFBQSxRQUFRLEVBQUVTLG1CQUFVQztBQURFLENBQXhCO2VBSWVYLFciLCJzb3VyY2VSb290IjoiY29tcG9uZW50Oi8vLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNzcyB9IGZyb20gJ2dsYW1vcic7XG5pbXBvcnQgY2xhc3NOYW1lcyBmcm9tICdjbGFzc25hbWVzJztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuXG5pbXBvcnQgQ3JvcHBlZEltYWdlIGZyb20gJy4uL1V0aWxzL0Nyb3BwZWRJbWFnZSc7XG5pbXBvcnQgdXNlQXZhdGFyRm9yQm90IGZyb20gJy4uL2hvb2tzL3VzZUF2YXRhckZvckJvdCc7XG5pbXBvcnQgdXNlQXZhdGFyRm9yVXNlciBmcm9tICcuLi9ob29rcy91c2VBdmF0YXJGb3JVc2VyJztcbmltcG9ydCB1c2VTdHlsZVNldCBmcm9tICcuLi9ob29rcy91c2VTdHlsZVNldCc7XG5cbmNvbnN0IFJPT1RfQ1NTID0gY3NzKHtcbiAgJyYgLndlYmNoYXRfX2ltYWdlQXZhdGFyX19pbWFnZSc6IHtcbiAgICB3aWR0aDogJzEwMCUnXG4gIH1cbn0pO1xuXG5jb25zdCBJbWFnZUF2YXRhciA9ICh7IGZyb21Vc2VyIH0pID0+IHtcbiAgY29uc3QgW3sgaW1hZ2U6IGF2YXRhckltYWdlRm9yQm90IH1dID0gdXNlQXZhdGFyRm9yQm90KCk7XG4gIGNvbnN0IFt7IGltYWdlOiBhdmF0YXJJbWFnZUZvclVzZXIgfV0gPSB1c2VBdmF0YXJGb3JVc2VyKCk7XG4gIGNvbnN0IFt7IGltYWdlQXZhdGFyOiBpbWFnZUF2YXRhclN0eWxlU2V0IH1dID0gdXNlU3R5bGVTZXQoKTtcblxuICBjb25zdCBhdmF0YXJJbWFnZSA9IGZyb21Vc2VyID8gYXZhdGFySW1hZ2VGb3JVc2VyIDogYXZhdGFySW1hZ2VGb3JCb3Q7XG5cbiAgcmV0dXJuIChcbiAgICAhIWF2YXRhckltYWdlICYmIChcbiAgICAgIDxkaXYgY2xhc3NOYW1lPXtjbGFzc05hbWVzKFJPT1RfQ1NTICsgJycsICd3ZWJjaGF0X19pbWFnZUF2YXRhcicsIGltYWdlQXZhdGFyU3R5bGVTZXQgKyAnJyl9PlxuICAgICAgICA8Q3JvcHBlZEltYWdlXG4gICAgICAgICAgYWx0PVwiXCJcbiAgICAgICAgICBjbGFzc05hbWU9XCJ3ZWJjaGF0X19pbWFnZUF2YXRhcl9faW1hZ2VcIlxuICAgICAgICAgIGhlaWdodD1cIjEwMCVcIlxuICAgICAgICAgIHNyYz17ZnJvbVVzZXIgPyBhdmF0YXJJbWFnZUZvclVzZXIgOiBhdmF0YXJJbWFnZUZvckJvdH1cbiAgICAgICAgICB3aWR0aD1cIjEwMCVcIlxuICAgICAgICAvPlxuICAgICAgPC9kaXY+XG4gICAgKVxuICApO1xufTtcblxuSW1hZ2VBdmF0YXIuZGVmYXVsdFByb3BzID0ge1xuICBmcm9tVXNlcjogZmFsc2Vcbn07XG5cbkltYWdlQXZhdGFyLnByb3BUeXBlcyA9IHtcbiAgZnJvbVVzZXI6IFByb3BUeXBlcy5ib29sXG59O1xuXG5leHBvcnQgZGVmYXVsdCBJbWFnZUF2YXRhcjtcbiJdfQ==