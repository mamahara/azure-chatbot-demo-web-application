"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.connectSendButton = exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _connectToWebChat = _interopRequireDefault(require("../connectToWebChat"));

var _IconButton = _interopRequireDefault(require("./IconButton"));

var _SendIcon = _interopRequireDefault(require("./Assets/SendIcon"));

var _useDisabled3 = _interopRequireDefault(require("../hooks/useDisabled"));

var _useFocus = _interopRequireDefault(require("../hooks/useFocus"));

var _useLocalizer = _interopRequireDefault(require("../hooks/useLocalizer"));

var _useScrollToEnd = _interopRequireDefault(require("../hooks/useScrollToEnd"));

var _useSubmitSendBox = _interopRequireDefault(require("../hooks/useSubmitSendBox"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var connectSendButton = function connectSendButton() {
  for (var _len = arguments.length, selectors = new Array(_len), _key = 0; _key < _len; _key++) {
    selectors[_key] = arguments[_key];
  }

  return _connectToWebChat.default.apply(void 0, [function (_ref) {
    var disabled = _ref.disabled,
        language = _ref.language,
        submitSendBox = _ref.submitSendBox;
    return {
      disabled: disabled,
      language: language,
      submitSendBox: submitSendBox
    };
  }].concat(selectors));
};

exports.connectSendButton = connectSendButton;

var SendButton = function SendButton() {
  var _useDisabled = (0, _useDisabled3.default)(),
      _useDisabled2 = _slicedToArray(_useDisabled, 1),
      disabled = _useDisabled2[0];

  var focus = (0, _useFocus.default)();
  var localize = (0, _useLocalizer.default)();
  var scrollToEnd = (0, _useScrollToEnd.default)();
  var submitSendBox = (0, _useSubmitSendBox.default)();
  var handleClick = (0, _react.useCallback)(function () {
    focus('sendBoxWithoutKeyboard');
    scrollToEnd();
    submitSendBox();
  }, [focus, scrollToEnd, submitSendBox]);
  return /*#__PURE__*/_react.default.createElement(_IconButton.default, {
    alt: localize('TEXT_INPUT_SEND_BUTTON_ALT'),
    disabled: disabled,
    onClick: handleClick
  }, /*#__PURE__*/_react.default.createElement(_SendIcon.default, null));
};

var _default = SendButton;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9TZW5kQm94L1NlbmRCdXR0b24uanMiXSwibmFtZXMiOlsiY29ubmVjdFNlbmRCdXR0b24iLCJzZWxlY3RvcnMiLCJjb25uZWN0VG9XZWJDaGF0IiwiZGlzYWJsZWQiLCJsYW5ndWFnZSIsInN1Ym1pdFNlbmRCb3giLCJTZW5kQnV0dG9uIiwiZm9jdXMiLCJsb2NhbGl6ZSIsInNjcm9sbFRvRW5kIiwiaGFuZGxlQ2xpY2siXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBOztBQUVBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUVBLElBQU1BLGlCQUFpQixHQUFHLFNBQXBCQSxpQkFBb0I7QUFBQSxvQ0FBSUMsU0FBSjtBQUFJQSxJQUFBQSxTQUFKO0FBQUE7O0FBQUEsU0FDeEJDLHlDQUNFO0FBQUEsUUFBR0MsUUFBSCxRQUFHQSxRQUFIO0FBQUEsUUFBYUMsUUFBYixRQUFhQSxRQUFiO0FBQUEsUUFBdUJDLGFBQXZCLFFBQXVCQSxhQUF2QjtBQUFBLFdBQTRDO0FBQzFDRixNQUFBQSxRQUFRLEVBQVJBLFFBRDBDO0FBRTFDQyxNQUFBQSxRQUFRLEVBQVJBLFFBRjBDO0FBRzFDQyxNQUFBQSxhQUFhLEVBQWJBO0FBSDBDLEtBQTVDO0FBQUEsR0FERixTQU1LSixTQU5MLEVBRHdCO0FBQUEsQ0FBMUI7Ozs7QUFVQSxJQUFNSyxVQUFVLEdBQUcsU0FBYkEsVUFBYSxHQUFNO0FBQUEscUJBQ0osNEJBREk7QUFBQTtBQUFBLE1BQ2hCSCxRQURnQjs7QUFFdkIsTUFBTUksS0FBSyxHQUFHLHdCQUFkO0FBQ0EsTUFBTUMsUUFBUSxHQUFHLDRCQUFqQjtBQUNBLE1BQU1DLFdBQVcsR0FBRyw4QkFBcEI7QUFDQSxNQUFNSixhQUFhLEdBQUcsZ0NBQXRCO0FBRUEsTUFBTUssV0FBVyxHQUFHLHdCQUFZLFlBQU07QUFDcENILElBQUFBLEtBQUssQ0FBQyx3QkFBRCxDQUFMO0FBQ0FFLElBQUFBLFdBQVc7QUFDWEosSUFBQUEsYUFBYTtBQUNkLEdBSm1CLEVBSWpCLENBQUNFLEtBQUQsRUFBUUUsV0FBUixFQUFxQkosYUFBckIsQ0FKaUIsQ0FBcEI7QUFNQSxzQkFDRSw2QkFBQyxtQkFBRDtBQUFZLElBQUEsR0FBRyxFQUFFRyxRQUFRLENBQUMsNEJBQUQsQ0FBekI7QUFBeUQsSUFBQSxRQUFRLEVBQUVMLFFBQW5FO0FBQTZFLElBQUEsT0FBTyxFQUFFTztBQUF0RixrQkFDRSw2QkFBQyxpQkFBRCxPQURGLENBREY7QUFLRCxDQWxCRDs7ZUFvQmVKLFUiLCJzb3VyY2VSb290IjoiY29tcG9uZW50Oi8vLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyB1c2VDYWxsYmFjayB9IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IGNvbm5lY3RUb1dlYkNoYXQgZnJvbSAnLi4vY29ubmVjdFRvV2ViQ2hhdCc7XG5pbXBvcnQgSWNvbkJ1dHRvbiBmcm9tICcuL0ljb25CdXR0b24nO1xuaW1wb3J0IFNlbmRJY29uIGZyb20gJy4vQXNzZXRzL1NlbmRJY29uJztcbmltcG9ydCB1c2VEaXNhYmxlZCBmcm9tICcuLi9ob29rcy91c2VEaXNhYmxlZCc7XG5pbXBvcnQgdXNlRm9jdXMgZnJvbSAnLi4vaG9va3MvdXNlRm9jdXMnO1xuaW1wb3J0IHVzZUxvY2FsaXplciBmcm9tICcuLi9ob29rcy91c2VMb2NhbGl6ZXInO1xuaW1wb3J0IHVzZVNjcm9sbFRvRW5kIGZyb20gJy4uL2hvb2tzL3VzZVNjcm9sbFRvRW5kJztcbmltcG9ydCB1c2VTdWJtaXRTZW5kQm94IGZyb20gJy4uL2hvb2tzL3VzZVN1Ym1pdFNlbmRCb3gnO1xuXG5jb25zdCBjb25uZWN0U2VuZEJ1dHRvbiA9ICguLi5zZWxlY3RvcnMpID0+XG4gIGNvbm5lY3RUb1dlYkNoYXQoXG4gICAgKHsgZGlzYWJsZWQsIGxhbmd1YWdlLCBzdWJtaXRTZW5kQm94IH0pID0+ICh7XG4gICAgICBkaXNhYmxlZCxcbiAgICAgIGxhbmd1YWdlLFxuICAgICAgc3VibWl0U2VuZEJveFxuICAgIH0pLFxuICAgIC4uLnNlbGVjdG9yc1xuICApO1xuXG5jb25zdCBTZW5kQnV0dG9uID0gKCkgPT4ge1xuICBjb25zdCBbZGlzYWJsZWRdID0gdXNlRGlzYWJsZWQoKTtcbiAgY29uc3QgZm9jdXMgPSB1c2VGb2N1cygpO1xuICBjb25zdCBsb2NhbGl6ZSA9IHVzZUxvY2FsaXplcigpO1xuICBjb25zdCBzY3JvbGxUb0VuZCA9IHVzZVNjcm9sbFRvRW5kKCk7XG4gIGNvbnN0IHN1Ym1pdFNlbmRCb3ggPSB1c2VTdWJtaXRTZW5kQm94KCk7XG5cbiAgY29uc3QgaGFuZGxlQ2xpY2sgPSB1c2VDYWxsYmFjaygoKSA9PiB7XG4gICAgZm9jdXMoJ3NlbmRCb3hXaXRob3V0S2V5Ym9hcmQnKTtcbiAgICBzY3JvbGxUb0VuZCgpO1xuICAgIHN1Ym1pdFNlbmRCb3goKTtcbiAgfSwgW2ZvY3VzLCBzY3JvbGxUb0VuZCwgc3VibWl0U2VuZEJveF0pO1xuXG4gIHJldHVybiAoXG4gICAgPEljb25CdXR0b24gYWx0PXtsb2NhbGl6ZSgnVEVYVF9JTlBVVF9TRU5EX0JVVFRPTl9BTFQnKX0gZGlzYWJsZWQ9e2Rpc2FibGVkfSBvbkNsaWNrPXtoYW5kbGVDbGlja30+XG4gICAgICA8U2VuZEljb24gLz5cbiAgICA8L0ljb25CdXR0b24+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBTZW5kQnV0dG9uO1xuXG5leHBvcnQgeyBjb25uZWN0U2VuZEJ1dHRvbiB9O1xuIl19