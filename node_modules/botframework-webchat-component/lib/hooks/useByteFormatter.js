"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = useByteFormatter;

var _react = require("react");

var _useLocalizedGlobalize = _interopRequireDefault(require("./internal/useLocalizedGlobalize"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var KILOBYTE = 1024;
var MEGABYTE = 1048576;
var GIGABYTE = 1073741824;
var LONG_FORM = {
  form: 'long'
};
var SHORT_FORM = {
  form: 'short'
};

function useByteFormatter() {
  var _useLocalizedGlobaliz = (0, _useLocalizedGlobalize.default)(),
      _useLocalizedGlobaliz2 = _slicedToArray(_useLocalizedGlobaliz, 1),
      globalize = _useLocalizedGlobaliz2[0];

  return (0, _react.useMemo)(function () {
    var unitFormatter = globalize.unitFormatter.bind(globalize);
    return function (bytes) {
      if (bytes < KILOBYTE) {
        return unitFormatter('byte', LONG_FORM)(bytes);
      } else if (bytes < MEGABYTE) {
        return unitFormatter('kilobyte', SHORT_FORM)(~~(bytes / KILOBYTE));
      } else if (bytes < GIGABYTE) {
        return unitFormatter('megabyte', SHORT_FORM)(~~(bytes / MEGABYTE));
      }

      return unitFormatter('gigabyte', SHORT_FORM)(~~(bytes / GIGABYTE));
    };
  }, [globalize]);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9ob29rcy91c2VCeXRlRm9ybWF0dGVyLmpzIl0sIm5hbWVzIjpbIktJTE9CWVRFIiwiTUVHQUJZVEUiLCJHSUdBQllURSIsIkxPTkdfRk9STSIsImZvcm0iLCJTSE9SVF9GT1JNIiwidXNlQnl0ZUZvcm1hdHRlciIsImdsb2JhbGl6ZSIsInVuaXRGb3JtYXR0ZXIiLCJiaW5kIiwiYnl0ZXMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFFQTs7QUFDQTs7Ozs7Ozs7Ozs7Ozs7OztBQUVBLElBQU1BLFFBQVEsR0FBRyxJQUFqQjtBQUNBLElBQU1DLFFBQVEsR0FBRyxPQUFqQjtBQUNBLElBQU1DLFFBQVEsR0FBRyxVQUFqQjtBQUVBLElBQU1DLFNBQVMsR0FBRztBQUNoQkMsRUFBQUEsSUFBSSxFQUFFO0FBRFUsQ0FBbEI7QUFJQSxJQUFNQyxVQUFVLEdBQUc7QUFDakJELEVBQUFBLElBQUksRUFBRTtBQURXLENBQW5COztBQUllLFNBQVNFLGdCQUFULEdBQTRCO0FBQUEsOEJBQ3JCLHFDQURxQjtBQUFBO0FBQUEsTUFDbENDLFNBRGtDOztBQUd6QyxTQUFPLG9CQUFRLFlBQU07QUFDbkIsUUFBTUMsYUFBYSxHQUFHRCxTQUFTLENBQUNDLGFBQVYsQ0FBd0JDLElBQXhCLENBQTZCRixTQUE3QixDQUF0QjtBQUVBLFdBQU8sVUFBQUcsS0FBSyxFQUFJO0FBQ2QsVUFBSUEsS0FBSyxHQUFHVixRQUFaLEVBQXNCO0FBQ3BCLGVBQU9RLGFBQWEsQ0FBQyxNQUFELEVBQVNMLFNBQVQsQ0FBYixDQUFpQ08sS0FBakMsQ0FBUDtBQUNELE9BRkQsTUFFTyxJQUFJQSxLQUFLLEdBQUdULFFBQVosRUFBc0I7QUFDM0IsZUFBT08sYUFBYSxDQUFDLFVBQUQsRUFBYUgsVUFBYixDQUFiLENBQXNDLENBQUMsRUFBRUssS0FBSyxHQUFHVixRQUFWLENBQXZDLENBQVA7QUFDRCxPQUZNLE1BRUEsSUFBSVUsS0FBSyxHQUFHUixRQUFaLEVBQXNCO0FBQzNCLGVBQU9NLGFBQWEsQ0FBQyxVQUFELEVBQWFILFVBQWIsQ0FBYixDQUFzQyxDQUFDLEVBQUVLLEtBQUssR0FBR1QsUUFBVixDQUF2QyxDQUFQO0FBQ0Q7O0FBRUQsYUFBT08sYUFBYSxDQUFDLFVBQUQsRUFBYUgsVUFBYixDQUFiLENBQXNDLENBQUMsRUFBRUssS0FBSyxHQUFHUixRQUFWLENBQXZDLENBQVA7QUFDRCxLQVZEO0FBV0QsR0FkTSxFQWNKLENBQUNLLFNBQUQsQ0FkSSxDQUFQO0FBZUQiLCJzb3VyY2VSb290IjoiY29tcG9uZW50Oi8vLyIsInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludCBuby1tYWdpYy1udW1iZXJzOiBbXCJlcnJvclwiLCB7IFwiaWdub3JlXCI6IFsxMDI0LCAxMDQ4NTc2LCAxMDczNzQxODI0XSB9XSAqL1xuXG5pbXBvcnQgeyB1c2VNZW1vIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHVzZUxvY2FsaXplZEdsb2JhbGl6ZSBmcm9tICcuL2ludGVybmFsL3VzZUxvY2FsaXplZEdsb2JhbGl6ZSc7XG5cbmNvbnN0IEtJTE9CWVRFID0gMTAyNDtcbmNvbnN0IE1FR0FCWVRFID0gMTA0ODU3NjtcbmNvbnN0IEdJR0FCWVRFID0gMTA3Mzc0MTgyNDtcblxuY29uc3QgTE9OR19GT1JNID0ge1xuICBmb3JtOiAnbG9uZydcbn07XG5cbmNvbnN0IFNIT1JUX0ZPUk0gPSB7XG4gIGZvcm06ICdzaG9ydCdcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHVzZUJ5dGVGb3JtYXR0ZXIoKSB7XG4gIGNvbnN0IFtnbG9iYWxpemVdID0gdXNlTG9jYWxpemVkR2xvYmFsaXplKCk7XG5cbiAgcmV0dXJuIHVzZU1lbW8oKCkgPT4ge1xuICAgIGNvbnN0IHVuaXRGb3JtYXR0ZXIgPSBnbG9iYWxpemUudW5pdEZvcm1hdHRlci5iaW5kKGdsb2JhbGl6ZSk7XG5cbiAgICByZXR1cm4gYnl0ZXMgPT4ge1xuICAgICAgaWYgKGJ5dGVzIDwgS0lMT0JZVEUpIHtcbiAgICAgICAgcmV0dXJuIHVuaXRGb3JtYXR0ZXIoJ2J5dGUnLCBMT05HX0ZPUk0pKGJ5dGVzKTtcbiAgICAgIH0gZWxzZSBpZiAoYnl0ZXMgPCBNRUdBQllURSkge1xuICAgICAgICByZXR1cm4gdW5pdEZvcm1hdHRlcigna2lsb2J5dGUnLCBTSE9SVF9GT1JNKSh+fihieXRlcyAvIEtJTE9CWVRFKSk7XG4gICAgICB9IGVsc2UgaWYgKGJ5dGVzIDwgR0lHQUJZVEUpIHtcbiAgICAgICAgcmV0dXJuIHVuaXRGb3JtYXR0ZXIoJ21lZ2FieXRlJywgU0hPUlRfRk9STSkofn4oYnl0ZXMgLyBNRUdBQllURSkpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdW5pdEZvcm1hdHRlcignZ2lnYWJ5dGUnLCBTSE9SVF9GT1JNKSh+fihieXRlcyAvIEdJR0FCWVRFKSk7XG4gICAgfTtcbiAgfSwgW2dsb2JhbGl6ZV0pO1xufVxuIl19