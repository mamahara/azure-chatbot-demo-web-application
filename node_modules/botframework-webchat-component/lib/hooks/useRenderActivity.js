"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = useRenderActivity;

var _react = require("react");

var _useCreateActivityRendererInternal = _interopRequireDefault(require("./internal/useCreateActivityRendererInternal"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// In the old days, the useRenderActivity() will be called like this:
//
// const renderActivity = useRenderActivity();
// const element = renderActivity({ activity, nextVisibleActivity });
// In the new days, the useCreateActivityRenderer() is a 3-pass function:
//
// const createActivityRenderer = useCreateActivityRenderer();
// const renderActivity = createActivityRenderer({ activity, nextVisibleActivity });
// const element = renderActivity && renderActivity(undefined, { renderActivityStatus, renderAvatar, showCallout });
// Despite deprecation, useRenderActivity() can be retrofitted using useCreateActivityRenderer().
var showDeprecationNotes = true;

function useRenderActivity(renderAttachment) {
  if (showDeprecationNotes) {
    console.warn('botframework-webchat: "useRenderActivity" is deprecated and will be removed on or after 2022-07-22. Please use "useCreateActivityRenderer()" instead.');
    showDeprecationNotes = false;
  }

  if (typeof renderAttachment !== 'function') {
    throw new Error('botframework-webchat: First argument passed to "useRenderActivity" must be a function.');
  }

  var createActivityRenderer = (0, _useCreateActivityRendererInternal.default)(renderAttachment);
  return (0, _react.useMemo)(function () {
    return function (renderActivityArg) {
      var renderOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      var _ref = renderActivityArg || {},
          activity = _ref.activity;

      if (!activity) {
        throw new Error('botframework-webchat: First argument passed to the callback of useRenderActivity() must contains "activity" property.');
      }

      var renderActivity = createActivityRenderer(renderActivityArg);
      return !!renderActivity && renderActivity(renderOptions);
    };
  }, [createActivityRenderer]);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9ob29rcy91c2VSZW5kZXJBY3Rpdml0eS5qcyJdLCJuYW1lcyI6WyJzaG93RGVwcmVjYXRpb25Ob3RlcyIsInVzZVJlbmRlckFjdGl2aXR5IiwicmVuZGVyQXR0YWNobWVudCIsImNvbnNvbGUiLCJ3YXJuIiwiRXJyb3IiLCJjcmVhdGVBY3Rpdml0eVJlbmRlcmVyIiwicmVuZGVyQWN0aXZpdHlBcmciLCJyZW5kZXJPcHRpb25zIiwiYWN0aXZpdHkiLCJyZW5kZXJBY3Rpdml0eSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUVBOzs7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFFQSxJQUFJQSxvQkFBb0IsR0FBRyxJQUEzQjs7QUFFZSxTQUFTQyxpQkFBVCxDQUEyQkMsZ0JBQTNCLEVBQTZDO0FBQzFELE1BQUlGLG9CQUFKLEVBQTBCO0FBQ3hCRyxJQUFBQSxPQUFPLENBQUNDLElBQVIsQ0FDRSx1SkFERjtBQUlBSixJQUFBQSxvQkFBb0IsR0FBRyxLQUF2QjtBQUNEOztBQUVELE1BQUksT0FBT0UsZ0JBQVAsS0FBNEIsVUFBaEMsRUFBNEM7QUFDMUMsVUFBTSxJQUFJRyxLQUFKLENBQVUsd0ZBQVYsQ0FBTjtBQUNEOztBQUVELE1BQU1DLHNCQUFzQixHQUFHLGdEQUFrQ0osZ0JBQWxDLENBQS9CO0FBRUEsU0FBTyxvQkFDTDtBQUFBLFdBQU0sVUFBQ0ssaUJBQUQsRUFBMkM7QUFBQSxVQUF2QkMsYUFBdUIsdUVBQVAsRUFBTzs7QUFBQSxpQkFDMUJELGlCQUFpQixJQUFJLEVBREs7QUFBQSxVQUN2Q0UsUUFEdUMsUUFDdkNBLFFBRHVDOztBQUcvQyxVQUFJLENBQUNBLFFBQUwsRUFBZTtBQUNiLGNBQU0sSUFBSUosS0FBSixDQUNKLHVIQURJLENBQU47QUFHRDs7QUFFRCxVQUFNSyxjQUFjLEdBQUdKLHNCQUFzQixDQUFDQyxpQkFBRCxDQUE3QztBQUVBLGFBQU8sQ0FBQyxDQUFDRyxjQUFGLElBQW9CQSxjQUFjLENBQUNGLGFBQUQsQ0FBekM7QUFDRCxLQVpEO0FBQUEsR0FESyxFQWNMLENBQUNGLHNCQUFELENBZEssQ0FBUDtBQWdCRCIsInNvdXJjZVJvb3QiOiJjb21wb25lbnQ6Ly8vIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlTWVtbyB9IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IHVzZUNyZWF0ZUFjdGl2aXR5UmVuZGVyZXJJbnRlcm5hbCBmcm9tICcuL2ludGVybmFsL3VzZUNyZWF0ZUFjdGl2aXR5UmVuZGVyZXJJbnRlcm5hbCc7XG5cbi8vIEluIHRoZSBvbGQgZGF5cywgdGhlIHVzZVJlbmRlckFjdGl2aXR5KCkgd2lsbCBiZSBjYWxsZWQgbGlrZSB0aGlzOlxuLy9cbi8vIGNvbnN0IHJlbmRlckFjdGl2aXR5ID0gdXNlUmVuZGVyQWN0aXZpdHkoKTtcbi8vIGNvbnN0IGVsZW1lbnQgPSByZW5kZXJBY3Rpdml0eSh7IGFjdGl2aXR5LCBuZXh0VmlzaWJsZUFjdGl2aXR5IH0pO1xuXG4vLyBJbiB0aGUgbmV3IGRheXMsIHRoZSB1c2VDcmVhdGVBY3Rpdml0eVJlbmRlcmVyKCkgaXMgYSAzLXBhc3MgZnVuY3Rpb246XG4vL1xuLy8gY29uc3QgY3JlYXRlQWN0aXZpdHlSZW5kZXJlciA9IHVzZUNyZWF0ZUFjdGl2aXR5UmVuZGVyZXIoKTtcbi8vIGNvbnN0IHJlbmRlckFjdGl2aXR5ID0gY3JlYXRlQWN0aXZpdHlSZW5kZXJlcih7IGFjdGl2aXR5LCBuZXh0VmlzaWJsZUFjdGl2aXR5IH0pO1xuLy8gY29uc3QgZWxlbWVudCA9IHJlbmRlckFjdGl2aXR5ICYmIHJlbmRlckFjdGl2aXR5KHVuZGVmaW5lZCwgeyByZW5kZXJBY3Rpdml0eVN0YXR1cywgcmVuZGVyQXZhdGFyLCBzaG93Q2FsbG91dCB9KTtcblxuLy8gRGVzcGl0ZSBkZXByZWNhdGlvbiwgdXNlUmVuZGVyQWN0aXZpdHkoKSBjYW4gYmUgcmV0cm9maXR0ZWQgdXNpbmcgdXNlQ3JlYXRlQWN0aXZpdHlSZW5kZXJlcigpLlxuXG5sZXQgc2hvd0RlcHJlY2F0aW9uTm90ZXMgPSB0cnVlO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB1c2VSZW5kZXJBY3Rpdml0eShyZW5kZXJBdHRhY2htZW50KSB7XG4gIGlmIChzaG93RGVwcmVjYXRpb25Ob3Rlcykge1xuICAgIGNvbnNvbGUud2FybihcbiAgICAgICdib3RmcmFtZXdvcmstd2ViY2hhdDogXCJ1c2VSZW5kZXJBY3Rpdml0eVwiIGlzIGRlcHJlY2F0ZWQgYW5kIHdpbGwgYmUgcmVtb3ZlZCBvbiBvciBhZnRlciAyMDIyLTA3LTIyLiBQbGVhc2UgdXNlIFwidXNlQ3JlYXRlQWN0aXZpdHlSZW5kZXJlcigpXCIgaW5zdGVhZC4nXG4gICAgKTtcblxuICAgIHNob3dEZXByZWNhdGlvbk5vdGVzID0gZmFsc2U7XG4gIH1cblxuICBpZiAodHlwZW9mIHJlbmRlckF0dGFjaG1lbnQgIT09ICdmdW5jdGlvbicpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ2JvdGZyYW1ld29yay13ZWJjaGF0OiBGaXJzdCBhcmd1bWVudCBwYXNzZWQgdG8gXCJ1c2VSZW5kZXJBY3Rpdml0eVwiIG11c3QgYmUgYSBmdW5jdGlvbi4nKTtcbiAgfVxuXG4gIGNvbnN0IGNyZWF0ZUFjdGl2aXR5UmVuZGVyZXIgPSB1c2VDcmVhdGVBY3Rpdml0eVJlbmRlcmVySW50ZXJuYWwocmVuZGVyQXR0YWNobWVudCk7XG5cbiAgcmV0dXJuIHVzZU1lbW8oXG4gICAgKCkgPT4gKHJlbmRlckFjdGl2aXR5QXJnLCByZW5kZXJPcHRpb25zID0ge30pID0+IHtcbiAgICAgIGNvbnN0IHsgYWN0aXZpdHkgfSA9IHJlbmRlckFjdGl2aXR5QXJnIHx8IHt9O1xuXG4gICAgICBpZiAoIWFjdGl2aXR5KSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgICAnYm90ZnJhbWV3b3JrLXdlYmNoYXQ6IEZpcnN0IGFyZ3VtZW50IHBhc3NlZCB0byB0aGUgY2FsbGJhY2sgb2YgdXNlUmVuZGVyQWN0aXZpdHkoKSBtdXN0IGNvbnRhaW5zIFwiYWN0aXZpdHlcIiBwcm9wZXJ0eS4nXG4gICAgICAgICk7XG4gICAgICB9XG5cbiAgICAgIGNvbnN0IHJlbmRlckFjdGl2aXR5ID0gY3JlYXRlQWN0aXZpdHlSZW5kZXJlcihyZW5kZXJBY3Rpdml0eUFyZyk7XG5cbiAgICAgIHJldHVybiAhIXJlbmRlckFjdGl2aXR5ICYmIHJlbmRlckFjdGl2aXR5KHJlbmRlck9wdGlvbnMpO1xuICAgIH0sXG4gICAgW2NyZWF0ZUFjdGl2aXR5UmVuZGVyZXJdXG4gICk7XG59XG4iXX0=