"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = useTrackTiming;

var _react = require("react");

var _createCustomEvent = _interopRequireDefault(require("../Utils/createCustomEvent"));

var _randomId = _interopRequireDefault(require("../Utils/randomId"));

var _useReadTelemetryDimensions = _interopRequireDefault(require("./internal/useReadTelemetryDimensions"));

var _useTrackException = _interopRequireDefault(require("./useTrackException"));

var _useWebChatUIContext2 = _interopRequireDefault(require("./internal/useWebChatUIContext"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function useTrackTiming() {
  var _useWebChatUIContext = (0, _useWebChatUIContext2.default)(),
      onTelemetry = _useWebChatUIContext.onTelemetry;

  var readTelemetryDimensions = (0, _useReadTelemetryDimensions.default)();
  var trackException = (0, _useTrackException.default)();
  return (0, _react.useCallback)( /*#__PURE__*/function () {
    var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(name, functionOrPromise) {
      var timingId, startTime, duration;
      return regeneratorRuntime.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              if (!(!name || typeof name !== 'string')) {
                _context.next = 4;
                break;
              }

              return _context.abrupt("return", console.warn('botframework-webchat: "name" passed to "useTrackTiming" hook must be specified and of type string.'));

            case 4:
              if (!(typeof functionOrPromise !== 'function' && typeof functionOrPromise.then !== 'function')) {
                _context.next = 6;
                break;
              }

              return _context.abrupt("return", console.warn('botframework-webchat: "functionOrPromise" passed to "useTrackTiming" hook must be specified, of type function or Promise.'));

            case 6:
              timingId = (0, _randomId.default)();
              onTelemetry && onTelemetry((0, _createCustomEvent.default)('timingstart', {
                dimensions: readTelemetryDimensions(),
                name: name,
                timingId: timingId
              }));
              startTime = Date.now();
              _context.prev = 9;
              _context.next = 12;
              return typeof functionOrPromise === 'function' ? functionOrPromise() : functionOrPromise;

            case 12:
              return _context.abrupt("return", _context.sent);

            case 15:
              _context.prev = 15;
              _context.t0 = _context["catch"](9);
              trackException(_context.t0, false);
              throw _context.t0;

            case 19:
              _context.prev = 19;
              duration = Date.now() - startTime;
              onTelemetry && onTelemetry((0, _createCustomEvent.default)('timingend', {
                dimensions: readTelemetryDimensions(),
                duration: duration,
                name: name,
                timingId: timingId
              }));
              return _context.finish(19);

            case 23:
            case "end":
              return _context.stop();
          }
        }
      }, _callee, null, [[9, 15, 19, 23]]);
    }));

    return function (_x, _x2) {
      return _ref.apply(this, arguments);
    };
  }(), [onTelemetry, readTelemetryDimensions, trackException]);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9ob29rcy91c2VUcmFja1RpbWluZy5qcyJdLCJuYW1lcyI6WyJ1c2VUcmFja1RpbWluZyIsIm9uVGVsZW1ldHJ5IiwicmVhZFRlbGVtZXRyeURpbWVuc2lvbnMiLCJ0cmFja0V4Y2VwdGlvbiIsIm5hbWUiLCJmdW5jdGlvbk9yUHJvbWlzZSIsImNvbnNvbGUiLCJ3YXJuIiwidGhlbiIsInRpbWluZ0lkIiwiZGltZW5zaW9ucyIsInN0YXJ0VGltZSIsIkRhdGUiLCJub3ciLCJkdXJhdGlvbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUVBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOzs7Ozs7OztBQUVlLFNBQVNBLGNBQVQsR0FBMEI7QUFBQSw2QkFDZixvQ0FEZTtBQUFBLE1BQy9CQyxXQUQrQix3QkFDL0JBLFdBRCtCOztBQUV2QyxNQUFNQyx1QkFBdUIsR0FBRywwQ0FBaEM7QUFDQSxNQUFNQyxjQUFjLEdBQUcsaUNBQXZCO0FBRUEsU0FBTztBQUFBLHVFQUNMLGlCQUFPQyxJQUFQLEVBQWFDLGlCQUFiO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLG9CQUNNLENBQUNELElBQUQsSUFBUyxPQUFPQSxJQUFQLEtBQWdCLFFBRC9CO0FBQUE7QUFBQTtBQUFBOztBQUFBLCtDQUVXRSxPQUFPLENBQUNDLElBQVIsQ0FDTCxvR0FESyxDQUZYOztBQUFBO0FBQUEsb0JBS2EsT0FBT0YsaUJBQVAsS0FBNkIsVUFBN0IsSUFBMkMsT0FBT0EsaUJBQWlCLENBQUNHLElBQXpCLEtBQWtDLFVBTDFGO0FBQUE7QUFBQTtBQUFBOztBQUFBLCtDQU1XRixPQUFPLENBQUNDLElBQVIsQ0FDTCwySEFESyxDQU5YOztBQUFBO0FBV1FFLGNBQUFBLFFBWFIsR0FXbUIsd0JBWG5CO0FBYUVSLGNBQUFBLFdBQVcsSUFDVEEsV0FBVyxDQUNULGdDQUFrQixhQUFsQixFQUFpQztBQUMvQlMsZ0JBQUFBLFVBQVUsRUFBRVIsdUJBQXVCLEVBREo7QUFFL0JFLGdCQUFBQSxJQUFJLEVBQUpBLElBRitCO0FBRy9CSyxnQkFBQUEsUUFBUSxFQUFSQTtBQUgrQixlQUFqQyxDQURTLENBRGI7QUFTTUUsY0FBQUEsU0F0QlIsR0FzQm9CQyxJQUFJLENBQUNDLEdBQUwsRUF0QnBCO0FBQUE7QUFBQTtBQUFBLHFCQXlCa0IsT0FBT1IsaUJBQVAsS0FBNkIsVUFBN0IsR0FBMENBLGlCQUFpQixFQUEzRCxHQUFnRUEsaUJBekJsRjs7QUFBQTtBQUFBOztBQUFBO0FBQUE7QUFBQTtBQTJCSUYsY0FBQUEsY0FBYyxjQUFNLEtBQU4sQ0FBZDtBQTNCSjs7QUFBQTtBQUFBO0FBK0JVVyxjQUFBQSxRQS9CVixHQStCcUJGLElBQUksQ0FBQ0MsR0FBTCxLQUFhRixTQS9CbEM7QUFpQ0lWLGNBQUFBLFdBQVcsSUFDVEEsV0FBVyxDQUNULGdDQUFrQixXQUFsQixFQUErQjtBQUM3QlMsZ0JBQUFBLFVBQVUsRUFBRVIsdUJBQXVCLEVBRE47QUFFN0JZLGdCQUFBQSxRQUFRLEVBQVJBLFFBRjZCO0FBRzdCVixnQkFBQUEsSUFBSSxFQUFKQSxJQUg2QjtBQUk3QkssZ0JBQUFBLFFBQVEsRUFBUkE7QUFKNkIsZUFBL0IsQ0FEUyxDQURiO0FBakNKOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEtBREs7O0FBQUE7QUFBQTtBQUFBO0FBQUEsT0E2Q0wsQ0FBQ1IsV0FBRCxFQUFjQyx1QkFBZCxFQUF1Q0MsY0FBdkMsQ0E3Q0ssQ0FBUDtBQStDRCIsInNvdXJjZVJvb3QiOiJjb21wb25lbnQ6Ly8vIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlQ2FsbGJhY2sgfSBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCBjcmVhdGVDdXN0b21FdmVudCBmcm9tICcuLi9VdGlscy9jcmVhdGVDdXN0b21FdmVudCc7XG5pbXBvcnQgcmFuZG9tSWQgZnJvbSAnLi4vVXRpbHMvcmFuZG9tSWQnO1xuaW1wb3J0IHVzZVJlYWRUZWxlbWV0cnlEaW1lbnNpb25zIGZyb20gJy4vaW50ZXJuYWwvdXNlUmVhZFRlbGVtZXRyeURpbWVuc2lvbnMnO1xuaW1wb3J0IHVzZVRyYWNrRXhjZXB0aW9uIGZyb20gJy4vdXNlVHJhY2tFeGNlcHRpb24nO1xuaW1wb3J0IHVzZVdlYkNoYXRVSUNvbnRleHQgZnJvbSAnLi9pbnRlcm5hbC91c2VXZWJDaGF0VUlDb250ZXh0JztcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gdXNlVHJhY2tUaW1pbmcoKSB7XG4gIGNvbnN0IHsgb25UZWxlbWV0cnkgfSA9IHVzZVdlYkNoYXRVSUNvbnRleHQoKTtcbiAgY29uc3QgcmVhZFRlbGVtZXRyeURpbWVuc2lvbnMgPSB1c2VSZWFkVGVsZW1ldHJ5RGltZW5zaW9ucygpO1xuICBjb25zdCB0cmFja0V4Y2VwdGlvbiA9IHVzZVRyYWNrRXhjZXB0aW9uKCk7XG5cbiAgcmV0dXJuIHVzZUNhbGxiYWNrKFxuICAgIGFzeW5jIChuYW1lLCBmdW5jdGlvbk9yUHJvbWlzZSkgPT4ge1xuICAgICAgaWYgKCFuYW1lIHx8IHR5cGVvZiBuYW1lICE9PSAnc3RyaW5nJykge1xuICAgICAgICByZXR1cm4gY29uc29sZS53YXJuKFxuICAgICAgICAgICdib3RmcmFtZXdvcmstd2ViY2hhdDogXCJuYW1lXCIgcGFzc2VkIHRvIFwidXNlVHJhY2tUaW1pbmdcIiBob29rIG11c3QgYmUgc3BlY2lmaWVkIGFuZCBvZiB0eXBlIHN0cmluZy4nXG4gICAgICAgICk7XG4gICAgICB9IGVsc2UgaWYgKHR5cGVvZiBmdW5jdGlvbk9yUHJvbWlzZSAhPT0gJ2Z1bmN0aW9uJyAmJiB0eXBlb2YgZnVuY3Rpb25PclByb21pc2UudGhlbiAhPT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICByZXR1cm4gY29uc29sZS53YXJuKFxuICAgICAgICAgICdib3RmcmFtZXdvcmstd2ViY2hhdDogXCJmdW5jdGlvbk9yUHJvbWlzZVwiIHBhc3NlZCB0byBcInVzZVRyYWNrVGltaW5nXCIgaG9vayBtdXN0IGJlIHNwZWNpZmllZCwgb2YgdHlwZSBmdW5jdGlvbiBvciBQcm9taXNlLidcbiAgICAgICAgKTtcbiAgICAgIH1cblxuICAgICAgY29uc3QgdGltaW5nSWQgPSByYW5kb21JZCgpO1xuXG4gICAgICBvblRlbGVtZXRyeSAmJlxuICAgICAgICBvblRlbGVtZXRyeShcbiAgICAgICAgICBjcmVhdGVDdXN0b21FdmVudCgndGltaW5nc3RhcnQnLCB7XG4gICAgICAgICAgICBkaW1lbnNpb25zOiByZWFkVGVsZW1ldHJ5RGltZW5zaW9ucygpLFxuICAgICAgICAgICAgbmFtZSxcbiAgICAgICAgICAgIHRpbWluZ0lkXG4gICAgICAgICAgfSlcbiAgICAgICAgKTtcblxuICAgICAgY29uc3Qgc3RhcnRUaW1lID0gRGF0ZS5ub3coKTtcblxuICAgICAgdHJ5IHtcbiAgICAgICAgcmV0dXJuIGF3YWl0ICh0eXBlb2YgZnVuY3Rpb25PclByb21pc2UgPT09ICdmdW5jdGlvbicgPyBmdW5jdGlvbk9yUHJvbWlzZSgpIDogZnVuY3Rpb25PclByb21pc2UpO1xuICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgIHRyYWNrRXhjZXB0aW9uKGVyciwgZmFsc2UpO1xuXG4gICAgICAgIHRocm93IGVycjtcbiAgICAgIH0gZmluYWxseSB7XG4gICAgICAgIGNvbnN0IGR1cmF0aW9uID0gRGF0ZS5ub3coKSAtIHN0YXJ0VGltZTtcblxuICAgICAgICBvblRlbGVtZXRyeSAmJlxuICAgICAgICAgIG9uVGVsZW1ldHJ5KFxuICAgICAgICAgICAgY3JlYXRlQ3VzdG9tRXZlbnQoJ3RpbWluZ2VuZCcsIHtcbiAgICAgICAgICAgICAgZGltZW5zaW9uczogcmVhZFRlbGVtZXRyeURpbWVuc2lvbnMoKSxcbiAgICAgICAgICAgICAgZHVyYXRpb24sXG4gICAgICAgICAgICAgIG5hbWUsXG4gICAgICAgICAgICAgIHRpbWluZ0lkXG4gICAgICAgICAgICB9KVxuICAgICAgICAgICk7XG4gICAgICB9XG4gICAgfSxcbiAgICBbb25UZWxlbWV0cnksIHJlYWRUZWxlbWV0cnlEaW1lbnNpb25zLCB0cmFja0V4Y2VwdGlvbl1cbiAgKTtcbn1cbiJdfQ==