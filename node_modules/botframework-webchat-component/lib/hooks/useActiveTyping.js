"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = require("react");

var _WebChatReduxContext = require("../WebChatReduxContext");

var _useForceRender = _interopRequireDefault(require("./internal/useForceRender"));

var _useStyleOptions3 = _interopRequireDefault(require("./useStyleOptions"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function useActiveTyping(expireAfter) {
  var now = Date.now();

  var _useStyleOptions = (0, _useStyleOptions3.default)(),
      _useStyleOptions2 = _slicedToArray(_useStyleOptions, 1),
      typingAnimationDuration = _useStyleOptions2[0].typingAnimationDuration;

  var forceRender = (0, _useForceRender.default)();
  var typing = (0, _WebChatReduxContext.useSelector)(function (_ref) {
    var typing = _ref.typing;
    return typing;
  });

  if (typeof expireAfter !== 'number') {
    expireAfter = typingAnimationDuration;
  }

  var activeTyping = Object.entries(typing).reduce(function (activeTyping, _ref2) {
    var _ref3 = _slicedToArray(_ref2, 2),
        id = _ref3[0],
        _ref3$ = _ref3[1],
        at = _ref3$.at,
        name = _ref3$.name,
        role = _ref3$.role;

    var until = at + expireAfter;

    if (until > now) {
      return _objectSpread(_objectSpread({}, activeTyping), {}, _defineProperty({}, id, {
        at: at,
        expireAt: until,
        name: name,
        role: role
      }));
    }

    return activeTyping;
  }, {});
  var earliestExpireAt = Math.min.apply(Math, _toConsumableArray(Object.values(activeTyping).map(function (_ref4) {
    var expireAt = _ref4.expireAt;
    return expireAt;
  })));
  var timeToRender = earliestExpireAt && earliestExpireAt - now;
  (0, _react.useEffect)(function () {
    if (timeToRender && isFinite(timeToRender)) {
      var timeout = setTimeout(forceRender, Math.max(0, timeToRender));
      return function () {
        return clearTimeout(timeout);
      };
    }
  }, [forceRender, timeToRender]);
  return [activeTyping];
}

var _default = useActiveTyping;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9ob29rcy91c2VBY3RpdmVUeXBpbmcuanMiXSwibmFtZXMiOlsidXNlQWN0aXZlVHlwaW5nIiwiZXhwaXJlQWZ0ZXIiLCJub3ciLCJEYXRlIiwidHlwaW5nQW5pbWF0aW9uRHVyYXRpb24iLCJmb3JjZVJlbmRlciIsInR5cGluZyIsImFjdGl2ZVR5cGluZyIsIk9iamVjdCIsImVudHJpZXMiLCJyZWR1Y2UiLCJpZCIsImF0IiwibmFtZSIsInJvbGUiLCJ1bnRpbCIsImV4cGlyZUF0IiwiZWFybGllc3RFeHBpcmVBdCIsIk1hdGgiLCJtaW4iLCJ2YWx1ZXMiLCJtYXAiLCJ0aW1lVG9SZW5kZXIiLCJpc0Zpbml0ZSIsInRpbWVvdXQiLCJzZXRUaW1lb3V0IiwibWF4IiwiY2xlYXJUaW1lb3V0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBRUE7O0FBQ0E7O0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUVBLFNBQVNBLGVBQVQsQ0FBeUJDLFdBQXpCLEVBQXNDO0FBQ3BDLE1BQU1DLEdBQUcsR0FBR0MsSUFBSSxDQUFDRCxHQUFMLEVBQVo7O0FBRG9DLHlCQUdFLGdDQUhGO0FBQUE7QUFBQSxNQUczQkUsdUJBSDJCLHdCQUczQkEsdUJBSDJCOztBQUlwQyxNQUFNQyxXQUFXLEdBQUcsOEJBQXBCO0FBQ0EsTUFBTUMsTUFBTSxHQUFHLHNDQUFZO0FBQUEsUUFBR0EsTUFBSCxRQUFHQSxNQUFIO0FBQUEsV0FBZ0JBLE1BQWhCO0FBQUEsR0FBWixDQUFmOztBQUVBLE1BQUksT0FBT0wsV0FBUCxLQUF1QixRQUEzQixFQUFxQztBQUNuQ0EsSUFBQUEsV0FBVyxHQUFHRyx1QkFBZDtBQUNEOztBQUVELE1BQU1HLFlBQVksR0FBR0MsTUFBTSxDQUFDQyxPQUFQLENBQWVILE1BQWYsRUFBdUJJLE1BQXZCLENBQThCLFVBQUNILFlBQUQsU0FBNEM7QUFBQTtBQUFBLFFBQTVCSSxFQUE0QjtBQUFBO0FBQUEsUUFBdEJDLEVBQXNCLFVBQXRCQSxFQUFzQjtBQUFBLFFBQWxCQyxJQUFrQixVQUFsQkEsSUFBa0I7QUFBQSxRQUFaQyxJQUFZLFVBQVpBLElBQVk7O0FBQzdGLFFBQU1DLEtBQUssR0FBR0gsRUFBRSxHQUFHWCxXQUFuQjs7QUFFQSxRQUFJYyxLQUFLLEdBQUdiLEdBQVosRUFBaUI7QUFDZiw2Q0FBWUssWUFBWiwyQkFBMkJJLEVBQTNCLEVBQWdDO0FBQUVDLFFBQUFBLEVBQUUsRUFBRkEsRUFBRjtBQUFNSSxRQUFBQSxRQUFRLEVBQUVELEtBQWhCO0FBQXVCRixRQUFBQSxJQUFJLEVBQUpBLElBQXZCO0FBQTZCQyxRQUFBQSxJQUFJLEVBQUpBO0FBQTdCLE9BQWhDO0FBQ0Q7O0FBRUQsV0FBT1AsWUFBUDtBQUNELEdBUm9CLEVBUWxCLEVBUmtCLENBQXJCO0FBVUEsTUFBTVUsZ0JBQWdCLEdBQUdDLElBQUksQ0FBQ0MsR0FBTCxPQUFBRCxJQUFJLHFCQUFRVixNQUFNLENBQUNZLE1BQVAsQ0FBY2IsWUFBZCxFQUE0QmMsR0FBNUIsQ0FBZ0M7QUFBQSxRQUFHTCxRQUFILFNBQUdBLFFBQUg7QUFBQSxXQUFrQkEsUUFBbEI7QUFBQSxHQUFoQyxDQUFSLEVBQTdCO0FBQ0EsTUFBTU0sWUFBWSxHQUFHTCxnQkFBZ0IsSUFBSUEsZ0JBQWdCLEdBQUdmLEdBQTVEO0FBRUEsd0JBQVUsWUFBTTtBQUNkLFFBQUlvQixZQUFZLElBQUlDLFFBQVEsQ0FBQ0QsWUFBRCxDQUE1QixFQUE0QztBQUMxQyxVQUFNRSxPQUFPLEdBQUdDLFVBQVUsQ0FBQ3BCLFdBQUQsRUFBY2EsSUFBSSxDQUFDUSxHQUFMLENBQVMsQ0FBVCxFQUFZSixZQUFaLENBQWQsQ0FBMUI7QUFFQSxhQUFPO0FBQUEsZUFBTUssWUFBWSxDQUFDSCxPQUFELENBQWxCO0FBQUEsT0FBUDtBQUNEO0FBQ0YsR0FORCxFQU1HLENBQUNuQixXQUFELEVBQWNpQixZQUFkLENBTkg7QUFRQSxTQUFPLENBQUNmLFlBQUQsQ0FBUDtBQUNEOztlQUVjUCxlIiwic291cmNlUm9vdCI6ImNvbXBvbmVudDovLy8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VFZmZlY3QgfSBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCB7IHVzZVNlbGVjdG9yIH0gZnJvbSAnLi4vV2ViQ2hhdFJlZHV4Q29udGV4dCc7XG5pbXBvcnQgdXNlRm9yY2VSZW5kZXIgZnJvbSAnLi9pbnRlcm5hbC91c2VGb3JjZVJlbmRlcic7XG5pbXBvcnQgdXNlU3R5bGVPcHRpb25zIGZyb20gJy4vdXNlU3R5bGVPcHRpb25zJztcblxuZnVuY3Rpb24gdXNlQWN0aXZlVHlwaW5nKGV4cGlyZUFmdGVyKSB7XG4gIGNvbnN0IG5vdyA9IERhdGUubm93KCk7XG5cbiAgY29uc3QgW3sgdHlwaW5nQW5pbWF0aW9uRHVyYXRpb24gfV0gPSB1c2VTdHlsZU9wdGlvbnMoKTtcbiAgY29uc3QgZm9yY2VSZW5kZXIgPSB1c2VGb3JjZVJlbmRlcigpO1xuICBjb25zdCB0eXBpbmcgPSB1c2VTZWxlY3RvcigoeyB0eXBpbmcgfSkgPT4gdHlwaW5nKTtcblxuICBpZiAodHlwZW9mIGV4cGlyZUFmdGVyICE9PSAnbnVtYmVyJykge1xuICAgIGV4cGlyZUFmdGVyID0gdHlwaW5nQW5pbWF0aW9uRHVyYXRpb247XG4gIH1cblxuICBjb25zdCBhY3RpdmVUeXBpbmcgPSBPYmplY3QuZW50cmllcyh0eXBpbmcpLnJlZHVjZSgoYWN0aXZlVHlwaW5nLCBbaWQsIHsgYXQsIG5hbWUsIHJvbGUgfV0pID0+IHtcbiAgICBjb25zdCB1bnRpbCA9IGF0ICsgZXhwaXJlQWZ0ZXI7XG5cbiAgICBpZiAodW50aWwgPiBub3cpIHtcbiAgICAgIHJldHVybiB7IC4uLmFjdGl2ZVR5cGluZywgW2lkXTogeyBhdCwgZXhwaXJlQXQ6IHVudGlsLCBuYW1lLCByb2xlIH0gfTtcbiAgICB9XG5cbiAgICByZXR1cm4gYWN0aXZlVHlwaW5nO1xuICB9LCB7fSk7XG5cbiAgY29uc3QgZWFybGllc3RFeHBpcmVBdCA9IE1hdGgubWluKC4uLk9iamVjdC52YWx1ZXMoYWN0aXZlVHlwaW5nKS5tYXAoKHsgZXhwaXJlQXQgfSkgPT4gZXhwaXJlQXQpKTtcbiAgY29uc3QgdGltZVRvUmVuZGVyID0gZWFybGllc3RFeHBpcmVBdCAmJiBlYXJsaWVzdEV4cGlyZUF0IC0gbm93O1xuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKHRpbWVUb1JlbmRlciAmJiBpc0Zpbml0ZSh0aW1lVG9SZW5kZXIpKSB7XG4gICAgICBjb25zdCB0aW1lb3V0ID0gc2V0VGltZW91dChmb3JjZVJlbmRlciwgTWF0aC5tYXgoMCwgdGltZVRvUmVuZGVyKSk7XG5cbiAgICAgIHJldHVybiAoKSA9PiBjbGVhclRpbWVvdXQodGltZW91dCk7XG4gICAgfVxuICB9LCBbZm9yY2VSZW5kZXIsIHRpbWVUb1JlbmRlcl0pO1xuXG4gIHJldHVybiBbYWN0aXZlVHlwaW5nXTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgdXNlQWN0aXZlVHlwaW5nO1xuIl19