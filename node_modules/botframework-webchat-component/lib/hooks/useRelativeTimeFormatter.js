"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = useRelativeTimeFormatter;

var _react = require("react");

var _useDateFormatter = _interopRequireDefault(require("./useDateFormatter"));

var _useLocalizedGlobalize = _interopRequireDefault(require("./internal/useLocalizedGlobalize"));

var _useLocalizer = _interopRequireDefault(require("./useLocalizer"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function useRelativeTimeFormatter() {
  var formatDate = (0, _useDateFormatter.default)();
  var localize = (0, _useLocalizer.default)();

  var _useLocalizedGlobaliz = (0, _useLocalizedGlobalize.default)(),
      _useLocalizedGlobaliz2 = _slicedToArray(_useLocalizedGlobaliz, 1),
      globalize = _useLocalizedGlobaliz2[0];

  return (0, _react.useMemo)(function () {
    var relativeTimeFormatter = globalize.relativeTimeFormatter.bind(globalize);
    return function (dateOrString) {
      var date = new Date(dateOrString);
      var dateTime = date.getTime();

      if (isNaN(dateTime)) {
        return dateOrString;
      }

      var now = Date.now();
      var deltaInMs = now - dateTime;
      var deltaInMinutes = Math.floor(deltaInMs / 60000);
      var deltaInHours = Math.floor(deltaInMs / 3600000);

      if (deltaInMinutes < 1) {
        return localize('ACTIVITY_STATUS_TIMESTAMP_JUST_NOW');
      } else if (deltaInMinutes === 1) {
        return localize('ACTIVITY_STATUS_TIMESTAMP_ONE_MINUTE_AGO');
      } else if (deltaInHours < 1) {
        return relativeTimeFormatter('minute')(-deltaInMinutes);
      } else if (deltaInHours === 1) {
        return localize('ACTIVITY_STATUS_TIMESTAMP_ONE_HOUR_AGO');
      } else if (deltaInHours < 5) {
        return relativeTimeFormatter('hour')(-deltaInHours);
      } else if (deltaInHours <= 24) {
        return localize('ACTIVITY_STATUS_TIMESTAMP_TODAY');
      } else if (deltaInHours <= 48) {
        return localize('ACTIVITY_STATUS_TIMESTAMP_YESTERDAY');
      }

      return formatDate(date);
    };
  }, [formatDate, globalize, localize]);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9ob29rcy91c2VSZWxhdGl2ZVRpbWVGb3JtYXR0ZXIuanMiXSwibmFtZXMiOlsidXNlUmVsYXRpdmVUaW1lRm9ybWF0dGVyIiwiZm9ybWF0RGF0ZSIsImxvY2FsaXplIiwiZ2xvYmFsaXplIiwicmVsYXRpdmVUaW1lRm9ybWF0dGVyIiwiYmluZCIsImRhdGVPclN0cmluZyIsImRhdGUiLCJEYXRlIiwiZGF0ZVRpbWUiLCJnZXRUaW1lIiwiaXNOYU4iLCJub3ciLCJkZWx0YUluTXMiLCJkZWx0YUluTWludXRlcyIsIk1hdGgiLCJmbG9vciIsImRlbHRhSW5Ib3VycyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUVBOztBQUVBOztBQUNBOztBQUNBOzs7Ozs7Ozs7Ozs7Ozs7O0FBRWUsU0FBU0Esd0JBQVQsR0FBb0M7QUFDakQsTUFBTUMsVUFBVSxHQUFHLGdDQUFuQjtBQUNBLE1BQU1DLFFBQVEsR0FBRyw0QkFBakI7O0FBRmlELDhCQUc3QixxQ0FINkI7QUFBQTtBQUFBLE1BRzFDQyxTQUgwQzs7QUFLakQsU0FBTyxvQkFBUSxZQUFNO0FBQ25CLFFBQU1DLHFCQUFxQixHQUFHRCxTQUFTLENBQUNDLHFCQUFWLENBQWdDQyxJQUFoQyxDQUFxQ0YsU0FBckMsQ0FBOUI7QUFFQSxXQUFPLFVBQUFHLFlBQVksRUFBSTtBQUNyQixVQUFNQyxJQUFJLEdBQUcsSUFBSUMsSUFBSixDQUFTRixZQUFULENBQWI7QUFDQSxVQUFNRyxRQUFRLEdBQUdGLElBQUksQ0FBQ0csT0FBTCxFQUFqQjs7QUFFQSxVQUFJQyxLQUFLLENBQUNGLFFBQUQsQ0FBVCxFQUFxQjtBQUNuQixlQUFPSCxZQUFQO0FBQ0Q7O0FBRUQsVUFBTU0sR0FBRyxHQUFHSixJQUFJLENBQUNJLEdBQUwsRUFBWjtBQUNBLFVBQU1DLFNBQVMsR0FBR0QsR0FBRyxHQUFHSCxRQUF4QjtBQUNBLFVBQU1LLGNBQWMsR0FBR0MsSUFBSSxDQUFDQyxLQUFMLENBQVdILFNBQVMsR0FBRyxLQUF2QixDQUF2QjtBQUNBLFVBQU1JLFlBQVksR0FBR0YsSUFBSSxDQUFDQyxLQUFMLENBQVdILFNBQVMsR0FBRyxPQUF2QixDQUFyQjs7QUFFQSxVQUFJQyxjQUFjLEdBQUcsQ0FBckIsRUFBd0I7QUFDdEIsZUFBT1osUUFBUSxDQUFDLG9DQUFELENBQWY7QUFDRCxPQUZELE1BRU8sSUFBSVksY0FBYyxLQUFLLENBQXZCLEVBQTBCO0FBQy9CLGVBQU9aLFFBQVEsQ0FBQywwQ0FBRCxDQUFmO0FBQ0QsT0FGTSxNQUVBLElBQUllLFlBQVksR0FBRyxDQUFuQixFQUFzQjtBQUMzQixlQUFPYixxQkFBcUIsQ0FBQyxRQUFELENBQXJCLENBQWdDLENBQUNVLGNBQWpDLENBQVA7QUFDRCxPQUZNLE1BRUEsSUFBSUcsWUFBWSxLQUFLLENBQXJCLEVBQXdCO0FBQzdCLGVBQU9mLFFBQVEsQ0FBQyx3Q0FBRCxDQUFmO0FBQ0QsT0FGTSxNQUVBLElBQUllLFlBQVksR0FBRyxDQUFuQixFQUFzQjtBQUMzQixlQUFPYixxQkFBcUIsQ0FBQyxNQUFELENBQXJCLENBQThCLENBQUNhLFlBQS9CLENBQVA7QUFDRCxPQUZNLE1BRUEsSUFBSUEsWUFBWSxJQUFJLEVBQXBCLEVBQXdCO0FBQzdCLGVBQU9mLFFBQVEsQ0FBQyxpQ0FBRCxDQUFmO0FBQ0QsT0FGTSxNQUVBLElBQUllLFlBQVksSUFBSSxFQUFwQixFQUF3QjtBQUM3QixlQUFPZixRQUFRLENBQUMscUNBQUQsQ0FBZjtBQUNEOztBQUVELGFBQU9ELFVBQVUsQ0FBQ00sSUFBRCxDQUFqQjtBQUNELEtBOUJEO0FBK0JELEdBbENNLEVBa0NKLENBQUNOLFVBQUQsRUFBYUUsU0FBYixFQUF3QkQsUUFBeEIsQ0FsQ0ksQ0FBUDtBQW1DRCIsInNvdXJjZVJvb3QiOiJjb21wb25lbnQ6Ly8vIiwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50IG5vLW1hZ2ljLW51bWJlcnM6IFtcImVycm9yXCIsIHsgXCJpZ25vcmVcIjogWzEsIDUsIDI0LCA0OCwgNjAwMDAsIDM2MDAwMDBdIH1dICovXG5cbmltcG9ydCB7IHVzZU1lbW8gfSBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCB1c2VEYXRlRm9ybWF0dGVyIGZyb20gJy4vdXNlRGF0ZUZvcm1hdHRlcic7XG5pbXBvcnQgdXNlTG9jYWxpemVkR2xvYmFsaXplIGZyb20gJy4vaW50ZXJuYWwvdXNlTG9jYWxpemVkR2xvYmFsaXplJztcbmltcG9ydCB1c2VMb2NhbGl6ZXIgZnJvbSAnLi91c2VMb2NhbGl6ZXInO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB1c2VSZWxhdGl2ZVRpbWVGb3JtYXR0ZXIoKSB7XG4gIGNvbnN0IGZvcm1hdERhdGUgPSB1c2VEYXRlRm9ybWF0dGVyKCk7XG4gIGNvbnN0IGxvY2FsaXplID0gdXNlTG9jYWxpemVyKCk7XG4gIGNvbnN0IFtnbG9iYWxpemVdID0gdXNlTG9jYWxpemVkR2xvYmFsaXplKCk7XG5cbiAgcmV0dXJuIHVzZU1lbW8oKCkgPT4ge1xuICAgIGNvbnN0IHJlbGF0aXZlVGltZUZvcm1hdHRlciA9IGdsb2JhbGl6ZS5yZWxhdGl2ZVRpbWVGb3JtYXR0ZXIuYmluZChnbG9iYWxpemUpO1xuXG4gICAgcmV0dXJuIGRhdGVPclN0cmluZyA9PiB7XG4gICAgICBjb25zdCBkYXRlID0gbmV3IERhdGUoZGF0ZU9yU3RyaW5nKTtcbiAgICAgIGNvbnN0IGRhdGVUaW1lID0gZGF0ZS5nZXRUaW1lKCk7XG5cbiAgICAgIGlmIChpc05hTihkYXRlVGltZSkpIHtcbiAgICAgICAgcmV0dXJuIGRhdGVPclN0cmluZztcbiAgICAgIH1cblxuICAgICAgY29uc3Qgbm93ID0gRGF0ZS5ub3coKTtcbiAgICAgIGNvbnN0IGRlbHRhSW5NcyA9IG5vdyAtIGRhdGVUaW1lO1xuICAgICAgY29uc3QgZGVsdGFJbk1pbnV0ZXMgPSBNYXRoLmZsb29yKGRlbHRhSW5NcyAvIDYwMDAwKTtcbiAgICAgIGNvbnN0IGRlbHRhSW5Ib3VycyA9IE1hdGguZmxvb3IoZGVsdGFJbk1zIC8gMzYwMDAwMCk7XG5cbiAgICAgIGlmIChkZWx0YUluTWludXRlcyA8IDEpIHtcbiAgICAgICAgcmV0dXJuIGxvY2FsaXplKCdBQ1RJVklUWV9TVEFUVVNfVElNRVNUQU1QX0pVU1RfTk9XJyk7XG4gICAgICB9IGVsc2UgaWYgKGRlbHRhSW5NaW51dGVzID09PSAxKSB7XG4gICAgICAgIHJldHVybiBsb2NhbGl6ZSgnQUNUSVZJVFlfU1RBVFVTX1RJTUVTVEFNUF9PTkVfTUlOVVRFX0FHTycpO1xuICAgICAgfSBlbHNlIGlmIChkZWx0YUluSG91cnMgPCAxKSB7XG4gICAgICAgIHJldHVybiByZWxhdGl2ZVRpbWVGb3JtYXR0ZXIoJ21pbnV0ZScpKC1kZWx0YUluTWludXRlcyk7XG4gICAgICB9IGVsc2UgaWYgKGRlbHRhSW5Ib3VycyA9PT0gMSkge1xuICAgICAgICByZXR1cm4gbG9jYWxpemUoJ0FDVElWSVRZX1NUQVRVU19USU1FU1RBTVBfT05FX0hPVVJfQUdPJyk7XG4gICAgICB9IGVsc2UgaWYgKGRlbHRhSW5Ib3VycyA8IDUpIHtcbiAgICAgICAgcmV0dXJuIHJlbGF0aXZlVGltZUZvcm1hdHRlcignaG91cicpKC1kZWx0YUluSG91cnMpO1xuICAgICAgfSBlbHNlIGlmIChkZWx0YUluSG91cnMgPD0gMjQpIHtcbiAgICAgICAgcmV0dXJuIGxvY2FsaXplKCdBQ1RJVklUWV9TVEFUVVNfVElNRVNUQU1QX1RPREFZJyk7XG4gICAgICB9IGVsc2UgaWYgKGRlbHRhSW5Ib3VycyA8PSA0OCkge1xuICAgICAgICByZXR1cm4gbG9jYWxpemUoJ0FDVElWSVRZX1NUQVRVU19USU1FU1RBTVBfWUVTVEVSREFZJyk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBmb3JtYXREYXRlKGRhdGUpO1xuICAgIH07XG4gIH0sIFtmb3JtYXREYXRlLCBnbG9iYWxpemUsIGxvY2FsaXplXSk7XG59XG4iXX0=