"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = useDebugDeps;

var _react = require("react");

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function useDebugDeps(depsMap, name) {
  var lastDepsMapRef = (0, _react.useRef)({});
  var lastDepsMap = lastDepsMapRef.current;
  var keys = new Set([].concat(_toConsumableArray(Object.keys(depsMap)), _toConsumableArray(Object.keys(lastDepsMap))));
  var keysChanged = Array.from(keys).filter(function (key) {
    return !Object.is(depsMap[key], lastDepsMap[key]);
  });

  if (keysChanged.length) {
    console.groupCollapsed("Changes found in ".concat(name));
    keysChanged.forEach(function (key) {
      console.log(key, {
        from: lastDepsMap[key],
        to: depsMap[key]
      });
    });
    console.groupEnd();
  }

  lastDepsMapRef.current = depsMap;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9ob29rcy9pbnRlcm5hbC91c2VEZWJ1Z0RlcHMuanMiXSwibmFtZXMiOlsidXNlRGVidWdEZXBzIiwiZGVwc01hcCIsIm5hbWUiLCJsYXN0RGVwc01hcFJlZiIsImxhc3REZXBzTWFwIiwiY3VycmVudCIsImtleXMiLCJTZXQiLCJPYmplY3QiLCJrZXlzQ2hhbmdlZCIsIkFycmF5IiwiZnJvbSIsImZpbHRlciIsImtleSIsImlzIiwibGVuZ3RoIiwiY29uc29sZSIsImdyb3VwQ29sbGFwc2VkIiwiZm9yRWFjaCIsImxvZyIsInRvIiwiZ3JvdXBFbmQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFFQTs7Ozs7Ozs7Ozs7Ozs7QUFFZSxTQUFTQSxZQUFULENBQXNCQyxPQUF0QixFQUErQkMsSUFBL0IsRUFBcUM7QUFDbEQsTUFBTUMsY0FBYyxHQUFHLG1CQUFPLEVBQVAsQ0FBdkI7QUFEa0QsTUFHakNDLFdBSGlDLEdBR2pCRCxjQUhpQixDQUcxQ0UsT0FIMEM7QUFJbEQsTUFBTUMsSUFBSSxHQUFHLElBQUlDLEdBQUosOEJBQVlDLE1BQU0sQ0FBQ0YsSUFBUCxDQUFZTCxPQUFaLENBQVosc0JBQXFDTyxNQUFNLENBQUNGLElBQVAsQ0FBWUYsV0FBWixDQUFyQyxHQUFiO0FBQ0EsTUFBTUssV0FBVyxHQUFHQyxLQUFLLENBQUNDLElBQU4sQ0FBV0wsSUFBWCxFQUFpQk0sTUFBakIsQ0FBd0IsVUFBQUMsR0FBRztBQUFBLFdBQUksQ0FBQ0wsTUFBTSxDQUFDTSxFQUFQLENBQVViLE9BQU8sQ0FBQ1ksR0FBRCxDQUFqQixFQUF3QlQsV0FBVyxDQUFDUyxHQUFELENBQW5DLENBQUw7QUFBQSxHQUEzQixDQUFwQjs7QUFFQSxNQUFJSixXQUFXLENBQUNNLE1BQWhCLEVBQXdCO0FBQ3RCQyxJQUFBQSxPQUFPLENBQUNDLGNBQVIsNEJBQTJDZixJQUEzQztBQUVBTyxJQUFBQSxXQUFXLENBQUNTLE9BQVosQ0FBb0IsVUFBQUwsR0FBRyxFQUFJO0FBQ3pCRyxNQUFBQSxPQUFPLENBQUNHLEdBQVIsQ0FBWU4sR0FBWixFQUFpQjtBQUFFRixRQUFBQSxJQUFJLEVBQUVQLFdBQVcsQ0FBQ1MsR0FBRCxDQUFuQjtBQUEwQk8sUUFBQUEsRUFBRSxFQUFFbkIsT0FBTyxDQUFDWSxHQUFEO0FBQXJDLE9BQWpCO0FBQ0QsS0FGRDtBQUlBRyxJQUFBQSxPQUFPLENBQUNLLFFBQVI7QUFDRDs7QUFFRGxCLEVBQUFBLGNBQWMsQ0FBQ0UsT0FBZixHQUF5QkosT0FBekI7QUFDRCIsInNvdXJjZVJvb3QiOiJjb21wb25lbnQ6Ly8vIiwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50IG5vLWNvbnNvbGU6IFwib2ZmXCIgKi9cblxuaW1wb3J0IHsgdXNlUmVmIH0gZnJvbSAncmVhY3QnO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB1c2VEZWJ1Z0RlcHMoZGVwc01hcCwgbmFtZSkge1xuICBjb25zdCBsYXN0RGVwc01hcFJlZiA9IHVzZVJlZih7fSk7XG5cbiAgY29uc3QgeyBjdXJyZW50OiBsYXN0RGVwc01hcCB9ID0gbGFzdERlcHNNYXBSZWY7XG4gIGNvbnN0IGtleXMgPSBuZXcgU2V0KFsuLi5PYmplY3Qua2V5cyhkZXBzTWFwKSwgLi4uT2JqZWN0LmtleXMobGFzdERlcHNNYXApXSk7XG4gIGNvbnN0IGtleXNDaGFuZ2VkID0gQXJyYXkuZnJvbShrZXlzKS5maWx0ZXIoa2V5ID0+ICFPYmplY3QuaXMoZGVwc01hcFtrZXldLCBsYXN0RGVwc01hcFtrZXldKSk7XG5cbiAgaWYgKGtleXNDaGFuZ2VkLmxlbmd0aCkge1xuICAgIGNvbnNvbGUuZ3JvdXBDb2xsYXBzZWQoYENoYW5nZXMgZm91bmQgaW4gJHtuYW1lfWApO1xuXG4gICAga2V5c0NoYW5nZWQuZm9yRWFjaChrZXkgPT4ge1xuICAgICAgY29uc29sZS5sb2coa2V5LCB7IGZyb206IGxhc3REZXBzTWFwW2tleV0sIHRvOiBkZXBzTWFwW2tleV0gfSk7XG4gICAgfSk7XG5cbiAgICBjb25zb2xlLmdyb3VwRW5kKCk7XG4gIH1cblxuICBsYXN0RGVwc01hcFJlZi5jdXJyZW50ID0gZGVwc01hcDtcbn1cbiJdfQ==