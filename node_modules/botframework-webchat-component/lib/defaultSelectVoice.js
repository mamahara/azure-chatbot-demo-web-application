"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(_ref, voices, activity) {
  var language = _ref.language;
  // Find the first voice based on this order:
  // 1. Voice with language same as locale as defined in the activity
  // 2. Voice with language same as locale as passed into Web Chat
  // 3. Voice with language same as browser
  // 4. English (United States)
  // 5. First voice
  // We also prioritize voices powered by deep neural network (with keyword "neural" in the voice name).
  return [activity.locale, language, window.navigator.language, 'en-US'].reduce(function (result, targetLanguage) {
    return result || voices.find(function (_ref2) {
      var lang = _ref2.lang,
          name = _ref2.name;
      return lang === targetLanguage && /neural/i.test(name);
    }) || voices.find(function (_ref3) {
      var lang = _ref3.lang;
      return lang === targetLanguage;
    });
  }, null) || voices[0];
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9kZWZhdWx0U2VsZWN0Vm9pY2UuanMiXSwibmFtZXMiOlsidm9pY2VzIiwiYWN0aXZpdHkiLCJsYW5ndWFnZSIsImxvY2FsZSIsIndpbmRvdyIsIm5hdmlnYXRvciIsInJlZHVjZSIsInJlc3VsdCIsInRhcmdldExhbmd1YWdlIiwiZmluZCIsImxhbmciLCJuYW1lIiwidGVzdCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFlLHdCQUF1QkEsTUFBdkIsRUFBK0JDLFFBQS9CLEVBQXlDO0FBQUEsTUFBOUJDLFFBQThCLFFBQTlCQSxRQUE4QjtBQUN0RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBLFNBQ0UsQ0FBQ0QsUUFBUSxDQUFDRSxNQUFWLEVBQWtCRCxRQUFsQixFQUE0QkUsTUFBTSxDQUFDQyxTQUFQLENBQWlCSCxRQUE3QyxFQUF1RCxPQUF2RCxFQUFnRUksTUFBaEUsQ0FDRSxVQUFDQyxNQUFELEVBQVNDLGNBQVQ7QUFBQSxXQUNFRCxNQUFNLElBQ05QLE1BQU0sQ0FBQ1MsSUFBUCxDQUFZO0FBQUEsVUFBR0MsSUFBSCxTQUFHQSxJQUFIO0FBQUEsVUFBU0MsSUFBVCxTQUFTQSxJQUFUO0FBQUEsYUFBb0JELElBQUksS0FBS0YsY0FBVCxJQUEyQixVQUFXSSxJQUFYLENBQWdCRCxJQUFoQixDQUEvQztBQUFBLEtBQVosQ0FEQSxJQUVBWCxNQUFNLENBQUNTLElBQVAsQ0FBWTtBQUFBLFVBQUdDLElBQUgsU0FBR0EsSUFBSDtBQUFBLGFBQWNBLElBQUksS0FBS0YsY0FBdkI7QUFBQSxLQUFaLENBSEY7QUFBQSxHQURGLEVBS0UsSUFMRixLQU1LUixNQUFNLENBQUMsQ0FBRCxDQVBiO0FBU0QiLCJzb3VyY2VSb290IjoiY29tcG9uZW50Oi8vLyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHsgbGFuZ3VhZ2UgfSwgdm9pY2VzLCBhY3Rpdml0eSkge1xuICAvLyBGaW5kIHRoZSBmaXJzdCB2b2ljZSBiYXNlZCBvbiB0aGlzIG9yZGVyOlxuICAvLyAxLiBWb2ljZSB3aXRoIGxhbmd1YWdlIHNhbWUgYXMgbG9jYWxlIGFzIGRlZmluZWQgaW4gdGhlIGFjdGl2aXR5XG4gIC8vIDIuIFZvaWNlIHdpdGggbGFuZ3VhZ2Ugc2FtZSBhcyBsb2NhbGUgYXMgcGFzc2VkIGludG8gV2ViIENoYXRcbiAgLy8gMy4gVm9pY2Ugd2l0aCBsYW5ndWFnZSBzYW1lIGFzIGJyb3dzZXJcbiAgLy8gNC4gRW5nbGlzaCAoVW5pdGVkIFN0YXRlcylcbiAgLy8gNS4gRmlyc3Qgdm9pY2VcblxuICAvLyBXZSBhbHNvIHByaW9yaXRpemUgdm9pY2VzIHBvd2VyZWQgYnkgZGVlcCBuZXVyYWwgbmV0d29yayAod2l0aCBrZXl3b3JkIFwibmV1cmFsXCIgaW4gdGhlIHZvaWNlIG5hbWUpLlxuICByZXR1cm4gKFxuICAgIFthY3Rpdml0eS5sb2NhbGUsIGxhbmd1YWdlLCB3aW5kb3cubmF2aWdhdG9yLmxhbmd1YWdlLCAnZW4tVVMnXS5yZWR1Y2UoXG4gICAgICAocmVzdWx0LCB0YXJnZXRMYW5ndWFnZSkgPT5cbiAgICAgICAgcmVzdWx0IHx8XG4gICAgICAgIHZvaWNlcy5maW5kKCh7IGxhbmcsIG5hbWUgfSkgPT4gbGFuZyA9PT0gdGFyZ2V0TGFuZ3VhZ2UgJiYgL25ldXJhbC9pdS50ZXN0KG5hbWUpKSB8fFxuICAgICAgICB2b2ljZXMuZmluZCgoeyBsYW5nIH0pID0+IGxhbmcgPT09IHRhcmdldExhbmd1YWdlKSxcbiAgICAgIG51bGxcbiAgICApIHx8IHZvaWNlc1swXVxuICApO1xufVxuIl19