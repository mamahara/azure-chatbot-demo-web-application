"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _CheckMarkIcon = _interopRequireDefault(require("./CheckMarkIcon"));

var _ExclamationMarkIcon = _interopRequireDefault(require("./ExclamationMarkIcon"));

var _useLocalizer = _interopRequireDefault(require("../hooks/useLocalizer"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var NotificationIcon = function NotificationIcon(_ref) {
  var className = _ref.className,
      level = _ref.level;
  var localize = (0, _useLocalizer.default)();
  var prefixes = {
    error: localize('TOAST_ALT_ERROR'),
    info: localize('TOAST_ALT_INFO'),
    success: localize('TOAST_ALT_SUCCESS'),
    warn: localize('TOAST_ALT_WARN')
  };
  var prefix = prefixes[level] || '';
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, level === 'success' ? /*#__PURE__*/_react.default.createElement(_CheckMarkIcon.default, {
    "aria-label": prefix,
    className: className
  }) : /*#__PURE__*/_react.default.createElement(_ExclamationMarkIcon.default, {
    "aria-label": prefix,
    className: className
  }));
};

NotificationIcon.defaultProps = {
  className: undefined
};
NotificationIcon.propTypes = {
  className: _propTypes.default.string,
  level: _propTypes.default.oneOf(['error', 'info', 'success', 'warn']).isRequired
};
var _default = NotificationIcon;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9Ub2FzdC9Ob3RpZmljYXRpb25JY29uLmpzIl0sIm5hbWVzIjpbIk5vdGlmaWNhdGlvbkljb24iLCJjbGFzc05hbWUiLCJsZXZlbCIsImxvY2FsaXplIiwicHJlZml4ZXMiLCJlcnJvciIsImluZm8iLCJzdWNjZXNzIiwid2FybiIsInByZWZpeCIsImRlZmF1bHRQcm9wcyIsInVuZGVmaW5lZCIsInByb3BUeXBlcyIsIlByb3BUeXBlcyIsInN0cmluZyIsIm9uZU9mIiwiaXNSZXF1aXJlZCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUVBOztBQUNBOztBQUNBOzs7O0FBRUEsSUFBTUEsZ0JBQWdCLEdBQUcsU0FBbkJBLGdCQUFtQixPQUEwQjtBQUFBLE1BQXZCQyxTQUF1QixRQUF2QkEsU0FBdUI7QUFBQSxNQUFaQyxLQUFZLFFBQVpBLEtBQVk7QUFDakQsTUFBTUMsUUFBUSxHQUFHLDRCQUFqQjtBQUVBLE1BQU1DLFFBQVEsR0FBRztBQUNmQyxJQUFBQSxLQUFLLEVBQUVGLFFBQVEsQ0FBQyxpQkFBRCxDQURBO0FBRWZHLElBQUFBLElBQUksRUFBRUgsUUFBUSxDQUFDLGdCQUFELENBRkM7QUFHZkksSUFBQUEsT0FBTyxFQUFFSixRQUFRLENBQUMsbUJBQUQsQ0FIRjtBQUlmSyxJQUFBQSxJQUFJLEVBQUVMLFFBQVEsQ0FBQyxnQkFBRDtBQUpDLEdBQWpCO0FBT0EsTUFBTU0sTUFBTSxHQUFHTCxRQUFRLENBQUNGLEtBQUQsQ0FBUixJQUFtQixFQUFsQztBQUVBLHNCQUNFLDZCQUFDLGNBQUQsQ0FBTyxRQUFQLFFBQ0dBLEtBQUssS0FBSyxTQUFWLGdCQUNDLDZCQUFDLHNCQUFEO0FBQWUsa0JBQVlPLE1BQTNCO0FBQW1DLElBQUEsU0FBUyxFQUFFUjtBQUE5QyxJQURELGdCQUdDLDZCQUFDLDRCQUFEO0FBQXFCLGtCQUFZUSxNQUFqQztBQUF5QyxJQUFBLFNBQVMsRUFBRVI7QUFBcEQsSUFKSixDQURGO0FBU0QsQ0FyQkQ7O0FBdUJBRCxnQkFBZ0IsQ0FBQ1UsWUFBakIsR0FBZ0M7QUFDOUJULEVBQUFBLFNBQVMsRUFBRVU7QUFEbUIsQ0FBaEM7QUFJQVgsZ0JBQWdCLENBQUNZLFNBQWpCLEdBQTZCO0FBQzNCWCxFQUFBQSxTQUFTLEVBQUVZLG1CQUFVQyxNQURNO0FBRTNCWixFQUFBQSxLQUFLLEVBQUVXLG1CQUFVRSxLQUFWLENBQWdCLENBQUMsT0FBRCxFQUFVLE1BQVYsRUFBa0IsU0FBbEIsRUFBNkIsTUFBN0IsQ0FBaEIsRUFBc0RDO0FBRmxDLENBQTdCO2VBS2VoQixnQiIsInNvdXJjZVJvb3QiOiJjb21wb25lbnQ6Ly8vIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCBDaGVja01hcmtJY29uIGZyb20gJy4vQ2hlY2tNYXJrSWNvbic7XG5pbXBvcnQgRXhjbGFtYXRpb25NYXJrSWNvbiBmcm9tICcuL0V4Y2xhbWF0aW9uTWFya0ljb24nO1xuaW1wb3J0IHVzZUxvY2FsaXplciBmcm9tICcuLi9ob29rcy91c2VMb2NhbGl6ZXInO1xuXG5jb25zdCBOb3RpZmljYXRpb25JY29uID0gKHsgY2xhc3NOYW1lLCBsZXZlbCB9KSA9PiB7XG4gIGNvbnN0IGxvY2FsaXplID0gdXNlTG9jYWxpemVyKCk7XG5cbiAgY29uc3QgcHJlZml4ZXMgPSB7XG4gICAgZXJyb3I6IGxvY2FsaXplKCdUT0FTVF9BTFRfRVJST1InKSxcbiAgICBpbmZvOiBsb2NhbGl6ZSgnVE9BU1RfQUxUX0lORk8nKSxcbiAgICBzdWNjZXNzOiBsb2NhbGl6ZSgnVE9BU1RfQUxUX1NVQ0NFU1MnKSxcbiAgICB3YXJuOiBsb2NhbGl6ZSgnVE9BU1RfQUxUX1dBUk4nKVxuICB9O1xuXG4gIGNvbnN0IHByZWZpeCA9IHByZWZpeGVzW2xldmVsXSB8fCAnJztcblxuICByZXR1cm4gKFxuICAgIDxSZWFjdC5GcmFnbWVudD5cbiAgICAgIHtsZXZlbCA9PT0gJ3N1Y2Nlc3MnID8gKFxuICAgICAgICA8Q2hlY2tNYXJrSWNvbiBhcmlhLWxhYmVsPXtwcmVmaXh9IGNsYXNzTmFtZT17Y2xhc3NOYW1lfSAvPlxuICAgICAgKSA6IChcbiAgICAgICAgPEV4Y2xhbWF0aW9uTWFya0ljb24gYXJpYS1sYWJlbD17cHJlZml4fSBjbGFzc05hbWU9e2NsYXNzTmFtZX0gLz5cbiAgICAgICl9XG4gICAgPC9SZWFjdC5GcmFnbWVudD5cbiAgKTtcbn07XG5cbk5vdGlmaWNhdGlvbkljb24uZGVmYXVsdFByb3BzID0ge1xuICBjbGFzc05hbWU6IHVuZGVmaW5lZFxufTtcblxuTm90aWZpY2F0aW9uSWNvbi5wcm9wVHlwZXMgPSB7XG4gIGNsYXNzTmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgbGV2ZWw6IFByb3BUeXBlcy5vbmVPZihbJ2Vycm9yJywgJ2luZm8nLCAnc3VjY2VzcycsICd3YXJuJ10pLmlzUmVxdWlyZWRcbn07XG5cbmV4cG9ydCBkZWZhdWx0IE5vdGlmaWNhdGlvbkljb247XG4iXX0=