"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _useStyleSet3 = _interopRequireDefault(require("../hooks/useStyleSet"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var YouTubeContent = function YouTubeContent(_ref) {
  var alt = _ref.alt,
      autoPlay = _ref.autoPlay,
      embedID = _ref.embedID,
      loop = _ref.loop;

  var _useStyleSet = (0, _useStyleSet3.default)(),
      _useStyleSet2 = _slicedToArray(_useStyleSet, 1),
      youTubeContentStyleSet = _useStyleSet2[0].youTubeContent;

  var search = new URLSearchParams({
    autoplay: autoPlay ? 1 : 0,
    loop: loop ? 1 : 0,
    modestbranding: 1
  }).toString();
  return (
    /*#__PURE__*/
    // TODO: We should encodeURI the URL
    _react.default.createElement("iframe", {
      allowFullScreen: true,
      "aria-label": alt,
      className: youTubeContentStyleSet,
      src: "https://youtube.com/embed/".concat(embedID, "?").concat(search)
    })
  );
};

YouTubeContent.defaultProps = {
  alt: '',
  autoPlay: false,
  loop: false
};
YouTubeContent.propTypes = {
  alt: _propTypes.default.string,
  autoPlay: _propTypes.default.bool,
  embedID: _propTypes.default.string.isRequired,
  loop: _propTypes.default.bool
};
var _default = YouTubeContent;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9BdHRhY2htZW50L1lvdVR1YmVDb250ZW50LmpzIl0sIm5hbWVzIjpbIllvdVR1YmVDb250ZW50IiwiYWx0IiwiYXV0b1BsYXkiLCJlbWJlZElEIiwibG9vcCIsInlvdVR1YmVDb250ZW50U3R5bGVTZXQiLCJ5b3VUdWJlQ29udGVudCIsInNlYXJjaCIsIlVSTFNlYXJjaFBhcmFtcyIsImF1dG9wbGF5IiwibW9kZXN0YnJhbmRpbmciLCJ0b1N0cmluZyIsImRlZmF1bHRQcm9wcyIsInByb3BUeXBlcyIsIlByb3BUeXBlcyIsInN0cmluZyIsImJvb2wiLCJpc1JlcXVpcmVkIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBRUE7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFQSxJQUFNQSxjQUFjLEdBQUcsU0FBakJBLGNBQWlCLE9BQXNDO0FBQUEsTUFBbkNDLEdBQW1DLFFBQW5DQSxHQUFtQztBQUFBLE1BQTlCQyxRQUE4QixRQUE5QkEsUUFBOEI7QUFBQSxNQUFwQkMsT0FBb0IsUUFBcEJBLE9BQW9CO0FBQUEsTUFBWEMsSUFBVyxRQUFYQSxJQUFXOztBQUFBLHFCQUNOLDRCQURNO0FBQUE7QUFBQSxNQUNsQ0Msc0JBRGtDLG9CQUNsREMsY0FEa0Q7O0FBRzNELE1BQU1DLE1BQU0sR0FBRyxJQUFJQyxlQUFKLENBQW9CO0FBQ2pDQyxJQUFBQSxRQUFRLEVBQUVQLFFBQVEsR0FBRyxDQUFILEdBQU8sQ0FEUTtBQUVqQ0UsSUFBQUEsSUFBSSxFQUFFQSxJQUFJLEdBQUcsQ0FBSCxHQUFPLENBRmdCO0FBR2pDTSxJQUFBQSxjQUFjLEVBQUU7QUFIaUIsR0FBcEIsRUFJWkMsUUFKWSxFQUFmO0FBTUE7QUFBQTtBQUNFO0FBQ0E7QUFDRSxNQUFBLGVBQWUsRUFBRSxJQURuQjtBQUVFLG9CQUFZVixHQUZkO0FBR0UsTUFBQSxTQUFTLEVBQUVJLHNCQUhiO0FBSUUsTUFBQSxHQUFHLHNDQUErQkYsT0FBL0IsY0FBMENJLE1BQTFDO0FBSkw7QUFGRjtBQVNELENBbEJEOztBQW9CQVAsY0FBYyxDQUFDWSxZQUFmLEdBQThCO0FBQzVCWCxFQUFBQSxHQUFHLEVBQUUsRUFEdUI7QUFFNUJDLEVBQUFBLFFBQVEsRUFBRSxLQUZrQjtBQUc1QkUsRUFBQUEsSUFBSSxFQUFFO0FBSHNCLENBQTlCO0FBTUFKLGNBQWMsQ0FBQ2EsU0FBZixHQUEyQjtBQUN6QlosRUFBQUEsR0FBRyxFQUFFYSxtQkFBVUMsTUFEVTtBQUV6QmIsRUFBQUEsUUFBUSxFQUFFWSxtQkFBVUUsSUFGSztBQUd6QmIsRUFBQUEsT0FBTyxFQUFFVyxtQkFBVUMsTUFBVixDQUFpQkUsVUFIRDtBQUl6QmIsRUFBQUEsSUFBSSxFQUFFVSxtQkFBVUU7QUFKUyxDQUEzQjtlQU9laEIsYyIsInNvdXJjZVJvb3QiOiJjb21wb25lbnQ6Ly8vIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCB1c2VTdHlsZVNldCBmcm9tICcuLi9ob29rcy91c2VTdHlsZVNldCc7XG5cbmNvbnN0IFlvdVR1YmVDb250ZW50ID0gKHsgYWx0LCBhdXRvUGxheSwgZW1iZWRJRCwgbG9vcCB9KSA9PiB7XG4gIGNvbnN0IFt7IHlvdVR1YmVDb250ZW50OiB5b3VUdWJlQ29udGVudFN0eWxlU2V0IH1dID0gdXNlU3R5bGVTZXQoKTtcblxuICBjb25zdCBzZWFyY2ggPSBuZXcgVVJMU2VhcmNoUGFyYW1zKHtcbiAgICBhdXRvcGxheTogYXV0b1BsYXkgPyAxIDogMCxcbiAgICBsb29wOiBsb29wID8gMSA6IDAsXG4gICAgbW9kZXN0YnJhbmRpbmc6IDFcbiAgfSkudG9TdHJpbmcoKTtcblxuICByZXR1cm4gKFxuICAgIC8vIFRPRE86IFdlIHNob3VsZCBlbmNvZGVVUkkgdGhlIFVSTFxuICAgIDxpZnJhbWVcbiAgICAgIGFsbG93RnVsbFNjcmVlbj17dHJ1ZX1cbiAgICAgIGFyaWEtbGFiZWw9e2FsdH1cbiAgICAgIGNsYXNzTmFtZT17eW91VHViZUNvbnRlbnRTdHlsZVNldH1cbiAgICAgIHNyYz17YGh0dHBzOi8veW91dHViZS5jb20vZW1iZWQvJHtlbWJlZElEfT8ke3NlYXJjaH1gfVxuICAgIC8+XG4gICk7XG59O1xuXG5Zb3VUdWJlQ29udGVudC5kZWZhdWx0UHJvcHMgPSB7XG4gIGFsdDogJycsXG4gIGF1dG9QbGF5OiBmYWxzZSxcbiAgbG9vcDogZmFsc2Vcbn07XG5cbllvdVR1YmVDb250ZW50LnByb3BUeXBlcyA9IHtcbiAgYWx0OiBQcm9wVHlwZXMuc3RyaW5nLFxuICBhdXRvUGxheTogUHJvcFR5cGVzLmJvb2wsXG4gIGVtYmVkSUQ6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcbiAgbG9vcDogUHJvcFR5cGVzLmJvb2xcbn07XG5cbmV4cG9ydCBkZWZhdWx0IFlvdVR1YmVDb250ZW50O1xuIl19