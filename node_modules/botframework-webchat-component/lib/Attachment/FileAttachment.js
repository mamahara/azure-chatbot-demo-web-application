"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _FileContent = _interopRequireDefault(require("./FileContent"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var FileAttachment = function FileAttachment(_ref) {
  var _ref$activity = _ref.activity;
  _ref$activity = _ref$activity === void 0 ? {} : _ref$activity;
  var _ref$activity$attachm = _ref$activity.attachments,
      attachments = _ref$activity$attachm === void 0 ? [] : _ref$activity$attachm,
      _ref$activity$channel = _ref$activity.channelData;
  _ref$activity$channel = _ref$activity$channel === void 0 ? {} : _ref$activity$channel;
  var _ref$activity$channel2 = _ref$activity$channel.attachmentSizes,
      attachmentSizes = _ref$activity$channel2 === void 0 ? [] : _ref$activity$channel2,
      attachment = _ref.attachment;
  var attachmentIndex = attachments.indexOf(attachment);
  var size = attachmentSizes[attachmentIndex];
  return /*#__PURE__*/_react.default.createElement(_FileContent.default, {
    fileName: attachment.name,
    href: attachment.contentUrl,
    size: size
  });
};

FileAttachment.propTypes = {
  activity: _propTypes.default.shape({
    attachment: _propTypes.default.array,
    channelData: _propTypes.default.shape({
      attachmentSizes: _propTypes.default.arrayOf(_propTypes.default.number)
    })
  }).isRequired,
  attachment: _propTypes.default.shape({
    contentUrl: _propTypes.default.string,
    name: _propTypes.default.string.isRequired
  }).isRequired
};
var _default = FileAttachment;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9BdHRhY2htZW50L0ZpbGVBdHRhY2htZW50LmpzIl0sIm5hbWVzIjpbIkZpbGVBdHRhY2htZW50IiwiYWN0aXZpdHkiLCJhdHRhY2htZW50cyIsImNoYW5uZWxEYXRhIiwiYXR0YWNobWVudFNpemVzIiwiYXR0YWNobWVudCIsImF0dGFjaG1lbnRJbmRleCIsImluZGV4T2YiLCJzaXplIiwibmFtZSIsImNvbnRlbnRVcmwiLCJwcm9wVHlwZXMiLCJQcm9wVHlwZXMiLCJzaGFwZSIsImFycmF5IiwiYXJyYXlPZiIsIm51bWJlciIsImlzUmVxdWlyZWQiLCJzdHJpbmciXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFFQTs7OztBQUVBLElBQU1BLGNBQWMsR0FBRyxTQUFqQkEsY0FBaUIsT0FHakI7QUFBQSwyQkFGSkMsUUFFSTtBQUFBLDZDQUZ5RSxFQUV6RTtBQUFBLDRDQUZRQyxXQUVSO0FBQUEsTUFGUUEsV0FFUixzQ0FGc0IsRUFFdEI7QUFBQSw0Q0FGMEJDLFdBRTFCO0FBQUEsNkRBRmtFLEVBRWxFO0FBQUEscURBRnlDQyxlQUV6QztBQUFBLE1BRnlDQSxlQUV6Qyx1Q0FGMkQsRUFFM0Q7QUFBQSxNQURKQyxVQUNJLFFBREpBLFVBQ0k7QUFDSixNQUFNQyxlQUFlLEdBQUdKLFdBQVcsQ0FBQ0ssT0FBWixDQUFvQkYsVUFBcEIsQ0FBeEI7QUFDQSxNQUFNRyxJQUFJLEdBQUdKLGVBQWUsQ0FBQ0UsZUFBRCxDQUE1QjtBQUVBLHNCQUFPLDZCQUFDLG9CQUFEO0FBQWEsSUFBQSxRQUFRLEVBQUVELFVBQVUsQ0FBQ0ksSUFBbEM7QUFBd0MsSUFBQSxJQUFJLEVBQUVKLFVBQVUsQ0FBQ0ssVUFBekQ7QUFBcUUsSUFBQSxJQUFJLEVBQUVGO0FBQTNFLElBQVA7QUFDRCxDQVJEOztBQVVBUixjQUFjLENBQUNXLFNBQWYsR0FBMkI7QUFDekJWLEVBQUFBLFFBQVEsRUFBRVcsbUJBQVVDLEtBQVYsQ0FBZ0I7QUFDeEJSLElBQUFBLFVBQVUsRUFBRU8sbUJBQVVFLEtBREU7QUFFeEJYLElBQUFBLFdBQVcsRUFBRVMsbUJBQVVDLEtBQVYsQ0FBZ0I7QUFDM0JULE1BQUFBLGVBQWUsRUFBRVEsbUJBQVVHLE9BQVYsQ0FBa0JILG1CQUFVSSxNQUE1QjtBQURVLEtBQWhCO0FBRlcsR0FBaEIsRUFLUEMsVUFOc0I7QUFPekJaLEVBQUFBLFVBQVUsRUFBRU8sbUJBQVVDLEtBQVYsQ0FBZ0I7QUFDMUJILElBQUFBLFVBQVUsRUFBRUUsbUJBQVVNLE1BREk7QUFFMUJULElBQUFBLElBQUksRUFBRUcsbUJBQVVNLE1BQVYsQ0FBaUJEO0FBRkcsR0FBaEIsRUFHVEE7QUFWc0IsQ0FBM0I7ZUFhZWpCLGMiLCJzb3VyY2VSb290IjoiY29tcG9uZW50Oi8vLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuXG5pbXBvcnQgRmlsZUNvbnRlbnQgZnJvbSAnLi9GaWxlQ29udGVudCc7XG5cbmNvbnN0IEZpbGVBdHRhY2htZW50ID0gKHtcbiAgYWN0aXZpdHk6IHsgYXR0YWNobWVudHMgPSBbXSwgY2hhbm5lbERhdGE6IHsgYXR0YWNobWVudFNpemVzID0gW10gfSA9IHt9IH0gPSB7fSxcbiAgYXR0YWNobWVudFxufSkgPT4ge1xuICBjb25zdCBhdHRhY2htZW50SW5kZXggPSBhdHRhY2htZW50cy5pbmRleE9mKGF0dGFjaG1lbnQpO1xuICBjb25zdCBzaXplID0gYXR0YWNobWVudFNpemVzW2F0dGFjaG1lbnRJbmRleF07XG5cbiAgcmV0dXJuIDxGaWxlQ29udGVudCBmaWxlTmFtZT17YXR0YWNobWVudC5uYW1lfSBocmVmPXthdHRhY2htZW50LmNvbnRlbnRVcmx9IHNpemU9e3NpemV9IC8+O1xufTtcblxuRmlsZUF0dGFjaG1lbnQucHJvcFR5cGVzID0ge1xuICBhY3Rpdml0eTogUHJvcFR5cGVzLnNoYXBlKHtcbiAgICBhdHRhY2htZW50OiBQcm9wVHlwZXMuYXJyYXksXG4gICAgY2hhbm5lbERhdGE6IFByb3BUeXBlcy5zaGFwZSh7XG4gICAgICBhdHRhY2htZW50U2l6ZXM6IFByb3BUeXBlcy5hcnJheU9mKFByb3BUeXBlcy5udW1iZXIpXG4gICAgfSlcbiAgfSkuaXNSZXF1aXJlZCxcbiAgYXR0YWNobWVudDogUHJvcFR5cGVzLnNoYXBlKHtcbiAgICBjb250ZW50VXJsOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIG5hbWU6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZFxuICB9KS5pc1JlcXVpcmVkXG59O1xuXG5leHBvcnQgZGVmYXVsdCBGaWxlQXR0YWNobWVudDtcbiJdfQ==