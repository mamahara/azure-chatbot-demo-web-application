"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _glamor = require("glamor");

var _classnames = _interopRequireDefault(require("classnames"));

var _react = _interopRequireDefault(require("react"));

var _ScreenReaderText = _interopRequireDefault(require("../ScreenReaderText"));

var _useDirection3 = _interopRequireDefault(require("../hooks/useDirection"));

var _useLocalizer = _interopRequireDefault(require("../hooks/useLocalizer"));

var _useStyleSet3 = _interopRequireDefault(require("../hooks/useStyleSet"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var RTL_SCALE_CSS = (0, _glamor.css)({
  transform: 'scale(-1, 1)'
});

var TypingAnimation = function TypingAnimation() {
  var _useStyleSet = (0, _useStyleSet3.default)(),
      _useStyleSet2 = _slicedToArray(_useStyleSet, 1),
      typingAnimationStyleSet = _useStyleSet2[0].typingAnimation;

  var _useDirection = (0, _useDirection3.default)(),
      _useDirection2 = _slicedToArray(_useDirection, 1),
      direction = _useDirection2[0];

  var localize = (0, _useLocalizer.default)();
  var rtlScale = direction === 'rtl' ? RTL_SCALE_CSS + '' : '';
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_ScreenReaderText.default, {
    text: localize('TYPING_INDICATOR_ALT')
  }), /*#__PURE__*/_react.default.createElement("div", {
    "aria-hidden": true,
    className: (0, _classnames.default)('webchat__typingIndicator', rtlScale + '', typingAnimationStyleSet + '')
  }));
};

var _default = TypingAnimation;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9Bc3NldHMvVHlwaW5nQW5pbWF0aW9uLmpzIl0sIm5hbWVzIjpbIlJUTF9TQ0FMRV9DU1MiLCJ0cmFuc2Zvcm0iLCJUeXBpbmdBbmltYXRpb24iLCJ0eXBpbmdBbmltYXRpb25TdHlsZVNldCIsInR5cGluZ0FuaW1hdGlvbiIsImRpcmVjdGlvbiIsImxvY2FsaXplIiwicnRsU2NhbGUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFFQTs7QUFDQTs7QUFDQTs7QUFDQTs7Ozs7Ozs7Ozs7Ozs7OztBQUVBLElBQU1BLGFBQWEsR0FBRyxpQkFBSTtBQUFFQyxFQUFBQSxTQUFTLEVBQUU7QUFBYixDQUFKLENBQXRCOztBQUVBLElBQU1DLGVBQWUsR0FBRyxTQUFsQkEsZUFBa0IsR0FBTTtBQUFBLHFCQUMyQiw0QkFEM0I7QUFBQTtBQUFBLE1BQ0ZDLHVCQURFLG9CQUNuQkMsZUFEbUI7O0FBQUEsc0JBRVIsNkJBRlE7QUFBQTtBQUFBLE1BRXJCQyxTQUZxQjs7QUFHNUIsTUFBTUMsUUFBUSxHQUFHLDRCQUFqQjtBQUVBLE1BQU1DLFFBQVEsR0FBR0YsU0FBUyxLQUFLLEtBQWQsR0FBc0JMLGFBQWEsR0FBRyxFQUF0QyxHQUEyQyxFQUE1RDtBQUVBLHNCQUNFLDZCQUFDLGNBQUQsQ0FBTyxRQUFQLHFCQUNFLDZCQUFDLHlCQUFEO0FBQWtCLElBQUEsSUFBSSxFQUFFTSxRQUFRLENBQUMsc0JBQUQ7QUFBaEMsSUFERixlQUVFO0FBQ0UsbUJBQWEsSUFEZjtBQUVFLElBQUEsU0FBUyxFQUFFLHlCQUFXLDBCQUFYLEVBQXVDQyxRQUFRLEdBQUcsRUFBbEQsRUFBc0RKLHVCQUF1QixHQUFHLEVBQWhGO0FBRmIsSUFGRixDQURGO0FBU0QsQ0FoQkQ7O2VBa0JlRCxlIiwic291cmNlUm9vdCI6ImNvbXBvbmVudDovLy8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjc3MgfSBmcm9tICdnbGFtb3InO1xuaW1wb3J0IGNsYXNzTmFtZXMgZnJvbSAnY2xhc3NuYW1lcyc7XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuXG5pbXBvcnQgU2NyZWVuUmVhZGVyVGV4dCBmcm9tICcuLi9TY3JlZW5SZWFkZXJUZXh0JztcbmltcG9ydCB1c2VEaXJlY3Rpb24gZnJvbSAnLi4vaG9va3MvdXNlRGlyZWN0aW9uJztcbmltcG9ydCB1c2VMb2NhbGl6ZXIgZnJvbSAnLi4vaG9va3MvdXNlTG9jYWxpemVyJztcbmltcG9ydCB1c2VTdHlsZVNldCBmcm9tICcuLi9ob29rcy91c2VTdHlsZVNldCc7XG5cbmNvbnN0IFJUTF9TQ0FMRV9DU1MgPSBjc3MoeyB0cmFuc2Zvcm06ICdzY2FsZSgtMSwgMSknIH0pO1xuXG5jb25zdCBUeXBpbmdBbmltYXRpb24gPSAoKSA9PiB7XG4gIGNvbnN0IFt7IHR5cGluZ0FuaW1hdGlvbjogdHlwaW5nQW5pbWF0aW9uU3R5bGVTZXQgfV0gPSB1c2VTdHlsZVNldCgpO1xuICBjb25zdCBbZGlyZWN0aW9uXSA9IHVzZURpcmVjdGlvbigpO1xuICBjb25zdCBsb2NhbGl6ZSA9IHVzZUxvY2FsaXplcigpO1xuXG4gIGNvbnN0IHJ0bFNjYWxlID0gZGlyZWN0aW9uID09PSAncnRsJyA/IFJUTF9TQ0FMRV9DU1MgKyAnJyA6ICcnO1xuXG4gIHJldHVybiAoXG4gICAgPFJlYWN0LkZyYWdtZW50PlxuICAgICAgPFNjcmVlblJlYWRlclRleHQgdGV4dD17bG9jYWxpemUoJ1RZUElOR19JTkRJQ0FUT1JfQUxUJyl9IC8+XG4gICAgICA8ZGl2XG4gICAgICAgIGFyaWEtaGlkZGVuPXt0cnVlfVxuICAgICAgICBjbGFzc05hbWU9e2NsYXNzTmFtZXMoJ3dlYmNoYXRfX3R5cGluZ0luZGljYXRvcicsIHJ0bFNjYWxlICsgJycsIHR5cGluZ0FuaW1hdGlvblN0eWxlU2V0ICsgJycpfVxuICAgICAgLz5cbiAgICA8L1JlYWN0LkZyYWdtZW50PlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgVHlwaW5nQW5pbWF0aW9uO1xuIl19