"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = createCoreAvatarMiddleware;
exports.DefaultAvatar = void 0;

var _glamor = require("glamor");

var _classnames = _interopRequireDefault(require("classnames"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _concatMiddleware = _interopRequireDefault(require("../concatMiddleware"));

var _ImageAvatar = _interopRequireDefault(require("../../Avatar/ImageAvatar"));

var _InitialsAvatar = _interopRequireDefault(require("../../Avatar/InitialsAvatar"));

var _useStyleSet3 = _interopRequireDefault(require("../../hooks/useStyleSet"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var ROOT_CSS = (0, _glamor.css)({
  overflow: 'hidden',
  position: 'relative',
  '> *': {
    left: 0,
    position: 'absolute',
    top: 0
  }
});

var DefaultAvatar = function DefaultAvatar(_ref) {
  var ariaHidden = _ref['aria-hidden'],
      className = _ref.className,
      fromUser = _ref.fromUser;

  var _useStyleSet = (0, _useStyleSet3.default)(),
      _useStyleSet2 = _slicedToArray(_useStyleSet, 1),
      avatarStyleSet = _useStyleSet2[0].avatar;

  return /*#__PURE__*/_react.default.createElement("div", {
    "aria-hidden": ariaHidden,
    className: (0, _classnames.default)(ROOT_CSS + '', 'webchat__defaultAvatar', fromUser && 'webchat__defaultAvatar--fromUser', avatarStyleSet + '', className)
  }, /*#__PURE__*/_react.default.createElement(_InitialsAvatar.default, {
    fromUser: fromUser
  }), /*#__PURE__*/_react.default.createElement(_ImageAvatar.default, {
    fromUser: fromUser
  }));
};

exports.DefaultAvatar = DefaultAvatar;
DefaultAvatar.defaultProps = {
  'aria-hidden': true,
  className: ''
};
DefaultAvatar.propTypes = {
  'aria-hidden': _propTypes.default.bool,
  className: _propTypes.default.string,
  fromUser: _propTypes.default.bool.isRequired
};

function createCoreAvatarMiddleware() {
  return (0, _concatMiddleware.default)(function () {
    return function () {
      return function (_ref2) {
        var fromUser = _ref2.fromUser,
            styleOptions = _ref2.styleOptions;
        var botAvatarImage = styleOptions.botAvatarImage,
            botAvatarInitials = styleOptions.botAvatarInitials,
            userAvatarImage = styleOptions.userAvatarImage,
            userAvatarInitials = styleOptions.userAvatarInitials;

        if (fromUser ? userAvatarImage || userAvatarInitials : botAvatarImage || botAvatarInitials) {
          // eslint-disable-next-line react/display-name
          return function () {
            return /*#__PURE__*/_react.default.createElement(DefaultAvatar, {
              fromUser: fromUser
            });
          };
        }

        return false;
      };
    };
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9NaWRkbGV3YXJlL0F2YXRhci9jcmVhdGVDb3JlTWlkZGxld2FyZS5qcyJdLCJuYW1lcyI6WyJST09UX0NTUyIsIm92ZXJmbG93IiwicG9zaXRpb24iLCJsZWZ0IiwidG9wIiwiRGVmYXVsdEF2YXRhciIsImFyaWFIaWRkZW4iLCJjbGFzc05hbWUiLCJmcm9tVXNlciIsImF2YXRhclN0eWxlU2V0IiwiYXZhdGFyIiwiZGVmYXVsdFByb3BzIiwicHJvcFR5cGVzIiwiUHJvcFR5cGVzIiwiYm9vbCIsInN0cmluZyIsImlzUmVxdWlyZWQiLCJjcmVhdGVDb3JlQXZhdGFyTWlkZGxld2FyZSIsInN0eWxlT3B0aW9ucyIsImJvdEF2YXRhckltYWdlIiwiYm90QXZhdGFySW5pdGlhbHMiLCJ1c2VyQXZhdGFySW1hZ2UiLCJ1c2VyQXZhdGFySW5pdGlhbHMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBRUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFQSxJQUFNQSxRQUFRLEdBQUcsaUJBQUk7QUFDbkJDLEVBQUFBLFFBQVEsRUFBRSxRQURTO0FBRW5CQyxFQUFBQSxRQUFRLEVBQUUsVUFGUztBQUluQixTQUFPO0FBQ0xDLElBQUFBLElBQUksRUFBRSxDQUREO0FBRUxELElBQUFBLFFBQVEsRUFBRSxVQUZMO0FBR0xFLElBQUFBLEdBQUcsRUFBRTtBQUhBO0FBSlksQ0FBSixDQUFqQjs7QUFXQSxJQUFNQyxhQUFhLEdBQUcsU0FBaEJBLGFBQWdCLE9BQXdEO0FBQUEsTUFBdENDLFVBQXNDLFFBQXJELGFBQXFEO0FBQUEsTUFBMUJDLFNBQTBCLFFBQTFCQSxTQUEwQjtBQUFBLE1BQWZDLFFBQWUsUUFBZkEsUUFBZTs7QUFBQSxxQkFDdkMsNEJBRHVDO0FBQUE7QUFBQSxNQUMzREMsY0FEMkQsb0JBQ25FQyxNQURtRTs7QUFHNUUsc0JBQ0U7QUFDRSxtQkFBYUosVUFEZjtBQUVFLElBQUEsU0FBUyxFQUFFLHlCQUNUTixRQUFRLEdBQUcsRUFERixFQUVULHdCQUZTLEVBR1RRLFFBQVEsSUFBSSxrQ0FISCxFQUlUQyxjQUFjLEdBQUcsRUFKUixFQUtURixTQUxTO0FBRmIsa0JBVUUsNkJBQUMsdUJBQUQ7QUFBZ0IsSUFBQSxRQUFRLEVBQUVDO0FBQTFCLElBVkYsZUFXRSw2QkFBQyxvQkFBRDtBQUFhLElBQUEsUUFBUSxFQUFFQTtBQUF2QixJQVhGLENBREY7QUFlRCxDQWxCRDs7O0FBb0JBSCxhQUFhLENBQUNNLFlBQWQsR0FBNkI7QUFDM0IsaUJBQWUsSUFEWTtBQUUzQkosRUFBQUEsU0FBUyxFQUFFO0FBRmdCLENBQTdCO0FBS0FGLGFBQWEsQ0FBQ08sU0FBZCxHQUEwQjtBQUN4QixpQkFBZUMsbUJBQVVDLElBREQ7QUFFeEJQLEVBQUFBLFNBQVMsRUFBRU0sbUJBQVVFLE1BRkc7QUFHeEJQLEVBQUFBLFFBQVEsRUFBRUssbUJBQVVDLElBQVYsQ0FBZUU7QUFIRCxDQUExQjs7QUFNZSxTQUFTQywwQkFBVCxHQUFzQztBQUNuRCxTQUFPLCtCQUFpQjtBQUFBLFdBQU07QUFBQSxhQUFNLGlCQUFnQztBQUFBLFlBQTdCVCxRQUE2QixTQUE3QkEsUUFBNkI7QUFBQSxZQUFuQlUsWUFBbUIsU0FBbkJBLFlBQW1CO0FBQUEsWUFDMURDLGNBRDBELEdBQ2lCRCxZQURqQixDQUMxREMsY0FEMEQ7QUFBQSxZQUMxQ0MsaUJBRDBDLEdBQ2lCRixZQURqQixDQUMxQ0UsaUJBRDBDO0FBQUEsWUFDdkJDLGVBRHVCLEdBQ2lCSCxZQURqQixDQUN2QkcsZUFEdUI7QUFBQSxZQUNOQyxrQkFETSxHQUNpQkosWUFEakIsQ0FDTkksa0JBRE07O0FBR2xFLFlBQUlkLFFBQVEsR0FBR2EsZUFBZSxJQUFJQyxrQkFBdEIsR0FBMkNILGNBQWMsSUFBSUMsaUJBQXpFLEVBQTRGO0FBQzFGO0FBQ0EsaUJBQU87QUFBQSxnQ0FBTSw2QkFBQyxhQUFEO0FBQWUsY0FBQSxRQUFRLEVBQUVaO0FBQXpCLGNBQU47QUFBQSxXQUFQO0FBQ0Q7O0FBRUQsZUFBTyxLQUFQO0FBQ0QsT0FUNkI7QUFBQSxLQUFOO0FBQUEsR0FBakIsQ0FBUDtBQVVEIiwic291cmNlUm9vdCI6ImNvbXBvbmVudDovLy8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjc3MgfSBmcm9tICdnbGFtb3InO1xuaW1wb3J0IGNsYXNzTmFtZXMgZnJvbSAnY2xhc3NuYW1lcyc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IGNvbmNhdE1pZGRsZXdhcmUgZnJvbSAnLi4vY29uY2F0TWlkZGxld2FyZSc7XG5pbXBvcnQgSW1hZ2VBdmF0YXIgZnJvbSAnLi4vLi4vQXZhdGFyL0ltYWdlQXZhdGFyJztcbmltcG9ydCBJbml0aWFsc0F2YXRhciBmcm9tICcuLi8uLi9BdmF0YXIvSW5pdGlhbHNBdmF0YXInO1xuaW1wb3J0IHVzZVN0eWxlU2V0IGZyb20gJy4uLy4uL2hvb2tzL3VzZVN0eWxlU2V0JztcblxuY29uc3QgUk9PVF9DU1MgPSBjc3Moe1xuICBvdmVyZmxvdzogJ2hpZGRlbicsXG4gIHBvc2l0aW9uOiAncmVsYXRpdmUnLFxuXG4gICc+IConOiB7XG4gICAgbGVmdDogMCxcbiAgICBwb3NpdGlvbjogJ2Fic29sdXRlJyxcbiAgICB0b3A6IDBcbiAgfVxufSk7XG5cbmNvbnN0IERlZmF1bHRBdmF0YXIgPSAoeyAnYXJpYS1oaWRkZW4nOiBhcmlhSGlkZGVuLCBjbGFzc05hbWUsIGZyb21Vc2VyIH0pID0+IHtcbiAgY29uc3QgW3sgYXZhdGFyOiBhdmF0YXJTdHlsZVNldCB9XSA9IHVzZVN0eWxlU2V0KCk7XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2XG4gICAgICBhcmlhLWhpZGRlbj17YXJpYUhpZGRlbn1cbiAgICAgIGNsYXNzTmFtZT17Y2xhc3NOYW1lcyhcbiAgICAgICAgUk9PVF9DU1MgKyAnJyxcbiAgICAgICAgJ3dlYmNoYXRfX2RlZmF1bHRBdmF0YXInLFxuICAgICAgICBmcm9tVXNlciAmJiAnd2ViY2hhdF9fZGVmYXVsdEF2YXRhci0tZnJvbVVzZXInLFxuICAgICAgICBhdmF0YXJTdHlsZVNldCArICcnLFxuICAgICAgICBjbGFzc05hbWVcbiAgICAgICl9XG4gICAgPlxuICAgICAgPEluaXRpYWxzQXZhdGFyIGZyb21Vc2VyPXtmcm9tVXNlcn0gLz5cbiAgICAgIDxJbWFnZUF2YXRhciBmcm9tVXNlcj17ZnJvbVVzZXJ9IC8+XG4gICAgPC9kaXY+XG4gICk7XG59O1xuXG5EZWZhdWx0QXZhdGFyLmRlZmF1bHRQcm9wcyA9IHtcbiAgJ2FyaWEtaGlkZGVuJzogdHJ1ZSxcbiAgY2xhc3NOYW1lOiAnJ1xufTtcblxuRGVmYXVsdEF2YXRhci5wcm9wVHlwZXMgPSB7XG4gICdhcmlhLWhpZGRlbic6IFByb3BUeXBlcy5ib29sLFxuICBjbGFzc05hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gIGZyb21Vc2VyOiBQcm9wVHlwZXMuYm9vbC5pc1JlcXVpcmVkXG59O1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjcmVhdGVDb3JlQXZhdGFyTWlkZGxld2FyZSgpIHtcbiAgcmV0dXJuIGNvbmNhdE1pZGRsZXdhcmUoKCkgPT4gKCkgPT4gKHsgZnJvbVVzZXIsIHN0eWxlT3B0aW9ucyB9KSA9PiB7XG4gICAgY29uc3QgeyBib3RBdmF0YXJJbWFnZSwgYm90QXZhdGFySW5pdGlhbHMsIHVzZXJBdmF0YXJJbWFnZSwgdXNlckF2YXRhckluaXRpYWxzIH0gPSBzdHlsZU9wdGlvbnM7XG5cbiAgICBpZiAoZnJvbVVzZXIgPyB1c2VyQXZhdGFySW1hZ2UgfHwgdXNlckF2YXRhckluaXRpYWxzIDogYm90QXZhdGFySW1hZ2UgfHwgYm90QXZhdGFySW5pdGlhbHMpIHtcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSByZWFjdC9kaXNwbGF5LW5hbWVcbiAgICAgIHJldHVybiAoKSA9PiA8RGVmYXVsdEF2YXRhciBmcm9tVXNlcj17ZnJvbVVzZXJ9IC8+O1xuICAgIH1cblxuICAgIHJldHVybiBmYWxzZTtcbiAgfSk7XG59XG5cbmV4cG9ydCB7IERlZmF1bHRBdmF0YXIgfTtcbiJdfQ==