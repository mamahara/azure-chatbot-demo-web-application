"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = createActivityRenderer;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _concatMiddleware = _interopRequireDefault(require("./concatMiddleware"));

var _createCoreMiddleware = _interopRequireDefault(require("./Activity/createCoreMiddleware"));

var _ErrorBox = _interopRequireDefault(require("../ErrorBox"));

var _useTrackException = _interopRequireDefault(require("../hooks/useTrackException"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

/* eslint no-magic-numbers: ["error", { "ignore": [2] }] */
var SilentError = function SilentError(_ref) {
  var message = _ref.message;
  var trackException = (0, _useTrackException.default)();
  (0, _react.useEffect)(function () {
    trackException(new Error(message), false);
  }, [message, trackException]);
  return false;
};

SilentError.propTypes = {
  message: _propTypes.default.string.isRequired
};

function createActivityRenderer(additionalMiddleware) {
  var activityMiddleware = (0, _concatMiddleware.default)(additionalMiddleware, (0, _createCoreMiddleware.default)())({});
  return function () {
    try {
      return activityMiddleware(function (_ref2) {
        var activity = _ref2.activity;
        return function () {
          return /*#__PURE__*/_react.default.createElement(SilentError, {
            message: "No activity found for type \"".concat(activity.type, "\".")
          });
        };
      }).apply(void 0, arguments);
    } catch (err) {
      var FailedRenderActivity = function FailedRenderActivity() {
        return /*#__PURE__*/_react.default.createElement(_ErrorBox.default, {
          error: err,
          message: "Failed to render activity"
        }, /*#__PURE__*/_react.default.createElement("pre", null, JSON.stringify(err, null, 2)));
      };

      return FailedRenderActivity;
    }
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9NaWRkbGV3YXJlL2NyZWF0ZUFjdGl2aXR5UmVuZGVyZXIuanMiXSwibmFtZXMiOlsiU2lsZW50RXJyb3IiLCJtZXNzYWdlIiwidHJhY2tFeGNlcHRpb24iLCJFcnJvciIsInByb3BUeXBlcyIsIlByb3BUeXBlcyIsInN0cmluZyIsImlzUmVxdWlyZWQiLCJjcmVhdGVBY3Rpdml0eVJlbmRlcmVyIiwiYWRkaXRpb25hbE1pZGRsZXdhcmUiLCJhY3Rpdml0eU1pZGRsZXdhcmUiLCJhY3Rpdml0eSIsInR5cGUiLCJlcnIiLCJGYWlsZWRSZW5kZXJBY3Rpdml0eSIsIkpTT04iLCJzdHJpbmdpZnkiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUVBOztBQUNBOztBQUVBOztBQUNBOztBQUNBOztBQUNBOzs7Ozs7OztBQVJBO0FBVUEsSUFBTUEsV0FBVyxHQUFHLFNBQWRBLFdBQWMsT0FBaUI7QUFBQSxNQUFkQyxPQUFjLFFBQWRBLE9BQWM7QUFDbkMsTUFBTUMsY0FBYyxHQUFHLGlDQUF2QjtBQUVBLHdCQUFVLFlBQU07QUFDZEEsSUFBQUEsY0FBYyxDQUFDLElBQUlDLEtBQUosQ0FBVUYsT0FBVixDQUFELEVBQXFCLEtBQXJCLENBQWQ7QUFDRCxHQUZELEVBRUcsQ0FBQ0EsT0FBRCxFQUFVQyxjQUFWLENBRkg7QUFJQSxTQUFPLEtBQVA7QUFDRCxDQVJEOztBQVVBRixXQUFXLENBQUNJLFNBQVosR0FBd0I7QUFDdEJILEVBQUFBLE9BQU8sRUFBRUksbUJBQVVDLE1BQVYsQ0FBaUJDO0FBREosQ0FBeEI7O0FBSWUsU0FBU0Msc0JBQVQsQ0FBZ0NDLG9CQUFoQyxFQUFzRDtBQUNuRSxNQUFNQyxrQkFBa0IsR0FBRywrQkFBaUJELG9CQUFqQixFQUF1QyxvQ0FBdkMsRUFBdUUsRUFBdkUsQ0FBM0I7QUFFQSxTQUFPLFlBQWE7QUFDbEIsUUFBSTtBQUNGLGFBQU9DLGtCQUFrQixDQUFDO0FBQUEsWUFBR0MsUUFBSCxTQUFHQSxRQUFIO0FBQUEsZUFBa0I7QUFBQSw4QkFDMUMsNkJBQUMsV0FBRDtBQUFhLFlBQUEsT0FBTyx5Q0FBaUNBLFFBQVEsQ0FBQ0MsSUFBMUM7QUFBcEIsWUFEMEM7QUFBQSxTQUFsQjtBQUFBLE9BQUQsQ0FBbEIseUJBQVA7QUFHRCxLQUpELENBSUUsT0FBT0MsR0FBUCxFQUFZO0FBQ1osVUFBTUMsb0JBQW9CLEdBQUcsU0FBdkJBLG9CQUF1QjtBQUFBLDRCQUMzQiw2QkFBQyxpQkFBRDtBQUFVLFVBQUEsS0FBSyxFQUFFRCxHQUFqQjtBQUFzQixVQUFBLE9BQU8sRUFBQztBQUE5Qix3QkFDRSwwQ0FBTUUsSUFBSSxDQUFDQyxTQUFMLENBQWVILEdBQWYsRUFBb0IsSUFBcEIsRUFBMEIsQ0FBMUIsQ0FBTixDQURGLENBRDJCO0FBQUEsT0FBN0I7O0FBTUEsYUFBT0Msb0JBQVA7QUFDRDtBQUNGLEdBZEQ7QUFlRCIsInNvdXJjZVJvb3QiOiJjb21wb25lbnQ6Ly8vIiwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50IG5vLW1hZ2ljLW51bWJlcnM6IFtcImVycm9yXCIsIHsgXCJpZ25vcmVcIjogWzJdIH1dICovXG5cbmltcG9ydCBSZWFjdCwgeyB1c2VFZmZlY3QgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuXG5pbXBvcnQgY29uY2F0TWlkZGxld2FyZSBmcm9tICcuL2NvbmNhdE1pZGRsZXdhcmUnO1xuaW1wb3J0IGNyZWF0ZUNvcmVBY3Rpdml0eU1pZGRsZXdhcmUgZnJvbSAnLi9BY3Rpdml0eS9jcmVhdGVDb3JlTWlkZGxld2FyZSc7XG5pbXBvcnQgRXJyb3JCb3ggZnJvbSAnLi4vRXJyb3JCb3gnO1xuaW1wb3J0IHVzZVRyYWNrRXhjZXB0aW9uIGZyb20gJy4uL2hvb2tzL3VzZVRyYWNrRXhjZXB0aW9uJztcblxuY29uc3QgU2lsZW50RXJyb3IgPSAoeyBtZXNzYWdlIH0pID0+IHtcbiAgY29uc3QgdHJhY2tFeGNlcHRpb24gPSB1c2VUcmFja0V4Y2VwdGlvbigpO1xuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgdHJhY2tFeGNlcHRpb24obmV3IEVycm9yKG1lc3NhZ2UpLCBmYWxzZSk7XG4gIH0sIFttZXNzYWdlLCB0cmFja0V4Y2VwdGlvbl0pO1xuXG4gIHJldHVybiBmYWxzZTtcbn07XG5cblNpbGVudEVycm9yLnByb3BUeXBlcyA9IHtcbiAgbWVzc2FnZTogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkXG59O1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjcmVhdGVBY3Rpdml0eVJlbmRlcmVyKGFkZGl0aW9uYWxNaWRkbGV3YXJlKSB7XG4gIGNvbnN0IGFjdGl2aXR5TWlkZGxld2FyZSA9IGNvbmNhdE1pZGRsZXdhcmUoYWRkaXRpb25hbE1pZGRsZXdhcmUsIGNyZWF0ZUNvcmVBY3Rpdml0eU1pZGRsZXdhcmUoKSkoe30pO1xuXG4gIHJldHVybiAoLi4uYXJncykgPT4ge1xuICAgIHRyeSB7XG4gICAgICByZXR1cm4gYWN0aXZpdHlNaWRkbGV3YXJlKCh7IGFjdGl2aXR5IH0pID0+ICgpID0+IChcbiAgICAgICAgPFNpbGVudEVycm9yIG1lc3NhZ2U9e2BObyBhY3Rpdml0eSBmb3VuZCBmb3IgdHlwZSBcIiR7YWN0aXZpdHkudHlwZX1cIi5gfSAvPlxuICAgICAgKSkoLi4uYXJncyk7XG4gICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICBjb25zdCBGYWlsZWRSZW5kZXJBY3Rpdml0eSA9ICgpID0+IChcbiAgICAgICAgPEVycm9yQm94IGVycm9yPXtlcnJ9IG1lc3NhZ2U9XCJGYWlsZWQgdG8gcmVuZGVyIGFjdGl2aXR5XCI+XG4gICAgICAgICAgPHByZT57SlNPTi5zdHJpbmdpZnkoZXJyLCBudWxsLCAyKX08L3ByZT5cbiAgICAgICAgPC9FcnJvckJveD5cbiAgICAgICk7XG5cbiAgICAgIHJldHVybiBGYWlsZWRSZW5kZXJBY3Rpdml0eTtcbiAgICB9XG4gIH07XG59XG4iXX0=