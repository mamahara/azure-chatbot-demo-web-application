"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _classnames = _interopRequireDefault(require("classnames"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _AbsoluteTime = _interopRequireDefault(require("./AbsoluteTime"));

var _RelativeTime = _interopRequireDefault(require("./RelativeTime"));

var _useStyleOptions3 = _interopRequireDefault(require("../../hooks/useStyleOptions"));

var _useStyleSet3 = _interopRequireDefault(require("../../hooks/useStyleSet"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var Timestamp = function Timestamp(_ref) {
  var timestamp = _ref.activity.timestamp,
      className = _ref.className;

  var _useStyleOptions = (0, _useStyleOptions3.default)(),
      _useStyleOptions2 = _slicedToArray(_useStyleOptions, 1),
      timestampFormat = _useStyleOptions2[0].timestampFormat;

  var _useStyleSet = (0, _useStyleSet3.default)(),
      _useStyleSet2 = _slicedToArray(_useStyleSet, 1),
      _useStyleSet2$ = _useStyleSet2[0],
      timestampStyleSet = _useStyleSet2$.timestamp,
      sendStatusStyleSet = _useStyleSet2$.sendStatus;

  timestampStyleSet && console.warn('botframework-webchat: "styleSet.timestamp" is deprecated. Please use "styleSet.sendStatus". This deprecation migration will be removed on or after December 31, 2021.');
  return !!timestamp && /*#__PURE__*/_react.default.createElement("span", {
    className: (0, _classnames.default)((timestampStyleSet || '') + '', (sendStatusStyleSet || '') + '', (className || '') + '')
  }, timestampFormat === 'relative' ? /*#__PURE__*/_react.default.createElement(_RelativeTime.default, {
    value: timestamp
  }) : /*#__PURE__*/_react.default.createElement(_AbsoluteTime.default, {
    value: timestamp
  }));
};

Timestamp.defaultProps = {
  className: ''
};
Timestamp.propTypes = {
  activity: _propTypes.default.shape({
    timestamp: _propTypes.default.string.isRequired
  }).isRequired,
  className: _propTypes.default.string
};
var _default = Timestamp;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9NaWRkbGV3YXJlL0FjdGl2aXR5U3RhdHVzL1RpbWVzdGFtcC5qcyJdLCJuYW1lcyI6WyJUaW1lc3RhbXAiLCJ0aW1lc3RhbXAiLCJhY3Rpdml0eSIsImNsYXNzTmFtZSIsInRpbWVzdGFtcEZvcm1hdCIsInRpbWVzdGFtcFN0eWxlU2V0Iiwic2VuZFN0YXR1c1N0eWxlU2V0Iiwic2VuZFN0YXR1cyIsImNvbnNvbGUiLCJ3YXJuIiwiZGVmYXVsdFByb3BzIiwicHJvcFR5cGVzIiwiUHJvcFR5cGVzIiwic2hhcGUiLCJzdHJpbmciLCJpc1JlcXVpcmVkIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBRUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFQSxJQUFNQSxTQUFTLEdBQUcsU0FBWkEsU0FBWSxPQUE0QztBQUFBLE1BQTdCQyxTQUE2QixRQUF6Q0MsUUFBeUMsQ0FBN0JELFNBQTZCO0FBQUEsTUFBaEJFLFNBQWdCLFFBQWhCQSxTQUFnQjs7QUFBQSx5QkFDOUIsZ0NBRDhCO0FBQUE7QUFBQSxNQUNuREMsZUFEbUQsd0JBQ25EQSxlQURtRDs7QUFBQSxxQkFFZSw0QkFGZjtBQUFBO0FBQUE7QUFBQSxNQUV4Q0MsaUJBRndDLGtCQUVuREosU0FGbUQ7QUFBQSxNQUVUSyxrQkFGUyxrQkFFckJDLFVBRnFCOztBQUk1REYsRUFBQUEsaUJBQWlCLElBQ2ZHLE9BQU8sQ0FBQ0MsSUFBUixDQUNFLHVLQURGLENBREY7QUFLQSxTQUNFLENBQUMsQ0FBQ1IsU0FBRixpQkFDRTtBQUNFLElBQUEsU0FBUyxFQUFFLHlCQUFXLENBQUNJLGlCQUFpQixJQUFJLEVBQXRCLElBQTRCLEVBQXZDLEVBQTJDLENBQUNDLGtCQUFrQixJQUFJLEVBQXZCLElBQTZCLEVBQXhFLEVBQTRFLENBQUNILFNBQVMsSUFBSSxFQUFkLElBQW9CLEVBQWhHO0FBRGIsS0FHR0MsZUFBZSxLQUFLLFVBQXBCLGdCQUFpQyw2QkFBQyxxQkFBRDtBQUFjLElBQUEsS0FBSyxFQUFFSDtBQUFyQixJQUFqQyxnQkFBc0UsNkJBQUMscUJBQUQ7QUFBYyxJQUFBLEtBQUssRUFBRUE7QUFBckIsSUFIekUsQ0FGSjtBQVNELENBbEJEOztBQW9CQUQsU0FBUyxDQUFDVSxZQUFWLEdBQXlCO0FBQ3ZCUCxFQUFBQSxTQUFTLEVBQUU7QUFEWSxDQUF6QjtBQUlBSCxTQUFTLENBQUNXLFNBQVYsR0FBc0I7QUFDcEJULEVBQUFBLFFBQVEsRUFBRVUsbUJBQVVDLEtBQVYsQ0FBZ0I7QUFDeEJaLElBQUFBLFNBQVMsRUFBRVcsbUJBQVVFLE1BQVYsQ0FBaUJDO0FBREosR0FBaEIsRUFFUEEsVUFIaUI7QUFJcEJaLEVBQUFBLFNBQVMsRUFBRVMsbUJBQVVFO0FBSkQsQ0FBdEI7ZUFPZWQsUyIsInNvdXJjZVJvb3QiOiJjb21wb25lbnQ6Ly8vIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNsYXNzTmFtZXMgZnJvbSAnY2xhc3NuYW1lcyc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IEFic29sdXRlVGltZSBmcm9tICcuL0Fic29sdXRlVGltZSc7XG5pbXBvcnQgUmVsYXRpdmVUaW1lIGZyb20gJy4vUmVsYXRpdmVUaW1lJztcbmltcG9ydCB1c2VTdHlsZU9wdGlvbnMgZnJvbSAnLi4vLi4vaG9va3MvdXNlU3R5bGVPcHRpb25zJztcbmltcG9ydCB1c2VTdHlsZVNldCBmcm9tICcuLi8uLi9ob29rcy91c2VTdHlsZVNldCc7XG5cbmNvbnN0IFRpbWVzdGFtcCA9ICh7IGFjdGl2aXR5OiB7IHRpbWVzdGFtcCB9LCBjbGFzc05hbWUgfSkgPT4ge1xuICBjb25zdCBbeyB0aW1lc3RhbXBGb3JtYXQgfV0gPSB1c2VTdHlsZU9wdGlvbnMoKTtcbiAgY29uc3QgW3sgdGltZXN0YW1wOiB0aW1lc3RhbXBTdHlsZVNldCwgc2VuZFN0YXR1czogc2VuZFN0YXR1c1N0eWxlU2V0IH1dID0gdXNlU3R5bGVTZXQoKTtcblxuICB0aW1lc3RhbXBTdHlsZVNldCAmJlxuICAgIGNvbnNvbGUud2FybihcbiAgICAgICdib3RmcmFtZXdvcmstd2ViY2hhdDogXCJzdHlsZVNldC50aW1lc3RhbXBcIiBpcyBkZXByZWNhdGVkLiBQbGVhc2UgdXNlIFwic3R5bGVTZXQuc2VuZFN0YXR1c1wiLiBUaGlzIGRlcHJlY2F0aW9uIG1pZ3JhdGlvbiB3aWxsIGJlIHJlbW92ZWQgb24gb3IgYWZ0ZXIgRGVjZW1iZXIgMzEsIDIwMjEuJ1xuICAgICk7XG5cbiAgcmV0dXJuIChcbiAgICAhIXRpbWVzdGFtcCAmJiAoXG4gICAgICA8c3BhblxuICAgICAgICBjbGFzc05hbWU9e2NsYXNzTmFtZXMoKHRpbWVzdGFtcFN0eWxlU2V0IHx8ICcnKSArICcnLCAoc2VuZFN0YXR1c1N0eWxlU2V0IHx8ICcnKSArICcnLCAoY2xhc3NOYW1lIHx8ICcnKSArICcnKX1cbiAgICAgID5cbiAgICAgICAge3RpbWVzdGFtcEZvcm1hdCA9PT0gJ3JlbGF0aXZlJyA/IDxSZWxhdGl2ZVRpbWUgdmFsdWU9e3RpbWVzdGFtcH0gLz4gOiA8QWJzb2x1dGVUaW1lIHZhbHVlPXt0aW1lc3RhbXB9IC8+fVxuICAgICAgPC9zcGFuPlxuICAgIClcbiAgKTtcbn07XG5cblRpbWVzdGFtcC5kZWZhdWx0UHJvcHMgPSB7XG4gIGNsYXNzTmFtZTogJydcbn07XG5cblRpbWVzdGFtcC5wcm9wVHlwZXMgPSB7XG4gIGFjdGl2aXR5OiBQcm9wVHlwZXMuc2hhcGUoe1xuICAgIHRpbWVzdGFtcDogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkXG4gIH0pLmlzUmVxdWlyZWQsXG4gIGNsYXNzTmFtZTogUHJvcFR5cGVzLnN0cmluZ1xufTtcblxuZXhwb3J0IGRlZmF1bHQgVGltZXN0YW1wO1xuIl19